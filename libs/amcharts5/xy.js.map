{"version":3,"file":"xy.js","mappings":"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","sources":["webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChart.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartDefaultTheme.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYCursor.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Axis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisBullet.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabel.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabelRadial.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRenderer.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererX.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererY.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisTick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/EditableAxisLabel.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/GaplessDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Grid.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/ValueAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/BaseColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/Candlestick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/CandlestickSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/ColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/LineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/XYSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartScrollbar.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DurationAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLC.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLCSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedYLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXYLineSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/step.js","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/StepLineSeries.ts","webpack://@amcharts/amcharts5/./tmp/webpack/xy.js","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/cardinal.js"],"sourcesContent":["import type { Axis } from \"./axes/Axis\";\nimport type { XYCursor } from \"./XYCursor\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";;\nimport type { Scrollbar } from \"../../core/render/Scrollbar\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\nimport type { Animation } from \"../../core/util/Entity\";\nimport type { CategoryAxis } from \"./axes/CategoryAxis\";\nimport type { DateAxis } from \"./axes/DateAxis\";\n\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\n\nexport interface IXYChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * horizontal scrollbar.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n\t */\n\tscrollbarX?: Scrollbar;\n\n\t/**\n\t * Vertical scrollbar.\n\t *\n\t */\n\tscrollbarY?: Scrollbar;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart horizontally\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart vertically\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned horizontally while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelX?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned vertically while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelY?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates the relative \"speed\" of the mouse wheel.\n\t *\n\t * @default 0.25\n\t */\n\twheelStep?: number;\n\n\t/**\n\t * Chart's cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n\t */\n\tcursor?: XYCursor;\n\n\t/**\n\t * If not set (default), cursor will show tooltips for all data items in the\n\t * same category/date.\n\t *\n\t * If set, cursor will select closest data item to pointer (mouse or touch) and\n\t * show tooltip for it.\n\t *\n\t * It will also show tooltips for all data items that are within X pixels\n\t * range (as set in `maxTooltipDistance`).\n\t *\n\t * Tooltips for data items farther then X pixels, will not be shown.\n\t *\n\t * NOTE: set it to `-1` to ensure only one tooltip is displayed, even if there\n\t * are multiple data items in the same place.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#tooltips} for more info\n\t */\n\tmaxTooltipDistance?: number;\n\n\t/**\n\t * Indicates how the distance should be measured when assessing distance\n\t * between tooltips as set in `maxTooltipDistance`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#tooltips} for more info\n\t * @since 5.2.6\n\t */\n\tmaxTooltipDistanceBy?: \"xy\" | \"x\" | \"y\";\n\n\t/**\n\t * If set to `false` the chart will not check for overlapping of multiple\n\t * tooltips, and will not arrange them to not overlap.\n\t *\n\t * Will work only if chart has an `XYCursor` enabled.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#ooltips} for more info\n\t * @default true\n\t */\n\tarrangeTooltips?: boolean\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart horizontally.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomX?: boolean;\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart vertically.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomY?: boolean;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * horizontal zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionX?: number;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * vertical zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionY?: number;\n\n}\n\nexport interface IXYChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * A list of [[Series]] that currently have their tooltip being displayed.\n\t */\n\ttooltipSeries?: Array<XYSeries>\n\n\t/**\n\t * Array of other [[XYChart]] objects that cursors should be synced with.\n\t *\n\t * Note: cursors will be synced across the vertically stacked charts only.\n\t */\n\totherCharts?: Array<XYChart>\n\n}\n\n\nexport interface IXYChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when panning starts.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanstarted: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when panning ends.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanended: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked if pointer is pressed down on a chart and released without moving.\n\t *\n\t * `panended` event will still kick in after that.\n\t *\n\t * @since 5.2.19\n\t */\n\tpancancelled: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when wheel caused zoom ends.\n\t *\n\t * @since 5.0.4\n\t */\n\twheelended: {};\n\n}\n\n/**\n * Creates an XY chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\n * @important\n */\nexport class XYChart extends SerialChart {\n\n\tpublic static className: string = \"XYChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([XYChart.className]);\n\n\tdeclare public _settings: IXYChartSettings;\n\tdeclare public _privateSettings: IXYChartPrivate;\n\tdeclare public _seriesType: XYSeries;\n\tdeclare public _events: IXYChartEvents;\n\n\t/**\n\t * A list of horizontal axes.\n\t */\n\tpublic readonly xAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A list of vertical axes.\n\t */\n\tpublic readonly yAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A [[Container]] located on top of the chart, used to store top horizontal\n\t * axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle the chart, used to store vertical axes\n\t * and plot area container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly yAxesAndPlotContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located on bottom of the chart, used to store bottom\n\t * horizontal axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly bottomAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located on left of the chart, used to store left-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly leftAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotsContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store actual\n\t * plots (series).\n\t *\n\t * NOTE: `plotContainer` will automatically have its `background` preset. If\n\t * you need to modify background or outline for chart's plot area, you can\n\t * use `plotContainer.get(\"background\")` for that.*\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] used for any elements that need to be displayed over\n\t * regular `plotContainer`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topPlotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] axis grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }));\n\n\t/**\n\t * A [[Container]] axis background grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A [[Container]] located on right of the chart, used to store right-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly rightAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] axis headers are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly axisHeadersContainer: Container = this.plotContainer.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A button that is shown when chart is not fully zoomed out.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\n\t * @default Button.new()\n\t */\n\tpublic readonly zoomOutButton: Button = this.topPlotContainer.children.push(Button.new(this._root, {\n\t\tthemeTags: [\"zoom\"],\n\t\ticon: Graphics.new(this._root, {\n\t\t\tthemeTags: [\"button\", \"icon\"]\n\t\t})\n\t}));\n\n\tpublic _movePoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tpublic _otherCharts?: Array<XYChart>;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\n\tprotected _downStartX?: number;\n\tprotected _downEndX?: number;\n\n\tprotected _downStartY?: number;\n\tprotected _downEndY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.xAxes);\n\t\tthis._disposers.push(this.yAxes);\n\n\t\tconst root = this._root;\n\n\t\tlet verticalLayout = this._root.verticalLayout;\n\n\t\tconst zoomOutButton = this.zoomOutButton;\n\t\tzoomOutButton.events.on(\"click\", () => {\n\t\t\tthis.zoomOut();\n\t\t})\n\t\tzoomOutButton.hide(0);\n\t\tzoomOutButton.states.lookup(\"default\")!.set(\"opacity\", 1);\n\n\t\tthis.chartContainer.set(\"layout\", verticalLayout);\n\n\t\tconst plotContainer = this.plotContainer;\n\t\tplotContainer.children.push(this.seriesContainer);\n\n\t\tthis._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\t\tthis._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n\n\t\tplotContainer.children.push(this.topGridContainer);\n\t\tplotContainer.children.push(this.bulletsContainer);\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tplotContainer.set(\"interactive\", true);\n\t\tplotContainer.set(\"interactiveChildren\", false);\n\t\tplotContainer.set(\"background\", Rectangle.new(root, {\n\t\t\tthemeTags: [\"plotbackground\", \"xy\", \"background\"]\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handlePlotDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handlePlotUp(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handlePlotMove(event);\n\t\t}));\n\n\t\tthis._maskGrid();\n\t\tthis._setUpTouch();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"pinchZoomX\") || this.isDirty(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tif (!this.plotContainer._display.cancelTouch) {\n\t\t\tthis.plotContainer._display.cancelTouch = (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\n\t\t}\n\t}\n\n\tprotected _maskGrid() {\n\t\tthis.gridContainer.set(\"maskContent\", true);\n\t\tthis.topGridContainer.set(\"maskContent\", true);\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tseries._unstack();\n\n\t\tif (series._posXDp) {\n\t\t\tseries._posXDp.dispose();\n\t\t}\n\n\t\tif (series._posYDp) {\n\t\t\tseries._posYDp.dispose();\n\t\t}\n\n\t\tseries.set(\"baseAxis\", undefined);\n\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\t$array.remove(xAxis.series, series);\n\t\t\txAxis.markDirtyExtremes();\n\t\t}\n\t\tconst yAxis = series.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\t$array.remove(yAxis.series, series);\n\t\t\tyAxis.markDirtyExtremes();\n\t\t}\n\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries) {\n\t\t\t\t$array.remove(snapToSeries, series);\n\t\t\t}\n\t\t}\n\n\t\tsuper._removeSeries(series);\n\t}\n\n\t/**\n\t * This method is invoked when mouse wheel is used over chart's plot\n\t * container, and handles zooming/pan.\n\t *\n\t * You can invoke this method manually, if you need to mimic chart's wheel\n\t * behavior over other elements of the chart.\n\t */\n\tpublic handleWheel(event: { originalEvent: WheelEvent, point: IPoint, target: Container }) {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst wheelEvent = event.originalEvent;\n\n\t\t// Ignore wheel event if it is happening on a non-chart element, e.g. if\n\t\t// some page element is over the chart.\n\t\tlet prevent = false;\n\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\n\t\t\tprevent = true;\n\t\t}\n\t\telse {\n\t\t\treturn;\n\t\t}\n\n\t\tconst plotPoint = plotContainer.toLocal(event.point);\n\t\tconst wheelStep = this.get(\"wheelStep\", 0.2);\n\n\t\tconst shiftY = wheelEvent.deltaY / 100;\n\t\tconst shiftX = wheelEvent.deltaX / 100;\n\n\t\tconst wheelZoomPositionX = this.get(\"wheelZoomPositionX\");\n\t\tconst wheelZoomPositionY = this.get(\"wheelZoomPositionY\");\n\n\n\t\tif ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\tlet newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftX * position));\n\t\t\t\t\tlet newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftX * (1 - position)));\n\n\t\t\t\t\tif (newStart == start && newEnd == end) {\n\t\t\t\t\t\tprevent = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tprevent = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\tlet newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftY * position));\n\t\t\t\t\tlet newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftY * (1 - position)));\n\n\t\t\t\t\tif (newStart == start && newEnd == end) {\n\t\t\t\t\t\tprevent = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tprevent = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\tlet newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftX * position));\n\t\t\t\t\tlet newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftX * (1 - position)));\n\n\t\t\t\t\tif (newStart == start && newEnd == end) {\n\t\t\t\t\t\tprevent = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tprevent = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\tlet newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftY * position));\n\t\t\t\t\tlet newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftY * (1 - position)));\n\n\t\t\t\t\tif (newStart == start && newEnd == end) {\n\t\t\t\t\t\tprevent = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tprevent = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tif (newStart == start && newEnd == end) {\n\t\t\t\t\t\tprevent = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tif (newStart == start && newEnd == end) {\n\t\t\t\t\t\tprevent = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tif (newStart == start && newEnd == end) {\n\t\t\t\t\t\tprevent = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start - delta;\n\t\t\t\t\tlet newEnd = end - delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tif (newStart == start && newEnd == end) {\n\t\t\t\t\t\tprevent = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (prevent) {\n\t\t\twheelEvent.preventDefault();\n\t\t}\n\t}\n\n\tprotected _handleSetWheel() {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (wheelX !== \"none\" || wheelY !== \"none\") {\n\t\t\tthis._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tconst wheelEvent = event.originalEvent;\n\t\t\t\tif ((wheelX !== \"none\" && Math.abs(wheelEvent.deltaX) != 0) || (wheelY !== \"none\" && Math.abs(wheelEvent.deltaY) != 0)) {\n\t\t\t\t\tthis.handleWheel(event);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getWheelSign(axis: Axis<AxisRenderer>) {\n\t\tlet sign = 1;\n\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\tsign = -1;\n\t\t}\n\n\t\treturn sign\n\t}\n\n\tprotected _fixWheel(start: number, end: number): [number, number] {\n\t\tconst diff = end - start;\n\t\tif (start < 0) {\n\t\t\tstart = 0;\n\t\t\tend = start + diff;\n\t\t}\n\t\tif (end > 1) {\n\t\t\tend = 1;\n\t\t\tstart = end - diff;\n\t\t}\n\n\t\treturn [start, end];\n\t}\n\n\tprotected _handlePlotDown(event: ISpritePointerEvent) {\n\t\tconst originalEvent = event.originalEvent as any;\n\n\t\tif (originalEvent.button == 2) {\n\t\t\treturn;\n\t\t}\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet local = plotContainer.toLocal(event.point);\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst pointerId = originalEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 0) {\n\t\t\t\t\tconst xAxis = this.xAxes.getIndex(0);\n\t\t\t\t\tconst yAxis = this.yAxes.getIndex(0);\n\n\n\t\t\t\t\tif (xAxis) {\n\t\t\t\t\t\tthis._downStartX = xAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndX = xAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (yAxis) {\n\t\t\t\t\t\tthis._downStartY = yAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndY = yAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\tif (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n\t\t\t\t//this._downPoint = local;\n\t\t\t\tthis._downPoint = { x: originalEvent.clientX, y: originalEvent.clientY };\n\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\t\tif (panX) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (panY) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panstarted\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelAnimation(animation?: Animation<any>) {\n\t\tif (animation) {\n\t\t\tanimation.events.on(\"stopped\", () => {\n\t\t\t\tthis._dispatchWheelAnimation();\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis._dispatchWheelAnimation();\n\t\t}\n\t}\n\n\tprotected _dispatchWheelAnimation() {\n\t\tconst eventType = \"wheelended\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t}\n\t}\n\n\tprotected _handlePlotUp(event: ISpritePointerEvent) {\n\t\tconst downPoint = this._downPoint;\n\t\tif (downPoint) {\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\t\tif (event.originalEvent.clientX == downPoint.x && event.originalEvent.clientY == downPoint.y) {\n\t\t\t\t\tconst eventType = \"pancancelled\";\n\t\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panended\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO: handle multitouch\n\t\tthis._downPoint = undefined;\n\t\tthis.xAxes.each((xAxis) => {\n\t\t\txAxis._isPanning = false;\n\t\t})\n\t\tthis.yAxes.each((yAxis) => {\n\t\t\tyAxis._isPanning = false;\n\t\t})\n\t}\n\n\tprotected _handlePlotMove(event: ISpritePointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst touchEvent = event.originalEvent as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = event.point;\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet downPoint = this._downPoint!;\n\n\t\tif (downPoint) {\n\n\t\t\tdownPoint = plotContainer.toLocal(this._root.documentPointToRoot(downPoint));\n\t\t\tlet local = plotContainer.toLocal(event.point);\n\n\t\t\tconst panX = this.get(\"panX\");\n\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\tif (panX) {\n\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\n\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaX *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart + deltaX;\n\t\t\t\t\t\tlet end = panEnd + deltaX;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (panY) {\n\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaY *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart - deltaY;\n\t\t\t\t\t\tlet end = panEnd - deltaY;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(plotContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = movePoint;\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst w = plotContainer.width();\n\t\t\tconst h = plotContainer.height();\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tmovePoint0 = plotContainer.toLocal(movePoint0)\n\t\t\t\tmovePoint1 = plotContainer.toLocal(movePoint1)\n\n\t\t\t\tdownPoint0 = plotContainer.toLocal(downPoint0)\n\t\t\t\tdownPoint1 = plotContainer.toLocal(downPoint1)\n\n\t\t\t\tif (this.get(\"pinchZoomX\")) {\n\t\t\t\t\tconst downStartX = this._downStartX;\n\t\t\t\t\tconst downEndX = this._downEndX;\n\n\t\t\t\t\tif (downStartX != null && downEndX != null) {\n\n\t\t\t\t\t\tif (downPoint0.x > downPoint1.x) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartX * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndX * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.xAxes.each((xAxis) => {\n\t\t\t\t\t\t\tlet sa = xAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = xAxis.fixPosition(e);\n\n\t\t\t\t\t\t\txAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.get(\"pinchZoomY\")) {\n\t\t\t\t\tconst downStartY = this._downStartY;\n\t\t\t\t\tconst downEndY = this._downEndY;\n\n\t\t\t\t\tif (downStartY != null && downEndY != null) {\n\n\t\t\t\t\t\tif (downPoint0.y < downPoint1.y) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartY * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndY * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.yAxes.each((yAxis) => {\n\n\t\t\t\t\t\t\tlet sa = yAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = yAxis.fixPosition(e);\n\n\t\t\t\t\t\t\tyAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition() {\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst cursorPoint = cursor.getPrivate(\"point\");\n\n\t\t\tlet snapToSeries = cursor.get(\"snapToSeries\");\n\n\t\t\tif (cursor._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tif (snapToSeries && cursorPoint) {\n\t\t\t\tconst snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\n\t\t\t\tconst dataItems: Array<DataItem<IXYSeriesDataItem>> = [];\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tif (!series.isHidden() && !series.isHiding()) {\n\t\t\t\t\t\tif (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\n\t\t\t\t\t\t\tconst startIndex = series.startIndex();\n\t\t\t\t\t\t\tconst endIndex = series.endIndex();\n\t\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\tif (dataItem && !dataItem.isHidden()) {\n\t\t\t\t\t\t\t\t\tdataItems.push(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst tooltipDataItem = series.get(\"tooltipDataItem\");\n\t\t\t\t\t\t\tif (tooltipDataItem) {\n\t\t\t\t\t\t\t\tdataItems.push(tooltipDataItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet minDistance = Infinity;\n\t\t\t\tlet closestItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tconst point = dataItem.get(\"point\");\n\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = 0;\n\t\t\t\t\t\tif (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdistance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosestItem = dataItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (closestItem) {\n\t\t\t\t\tlet series = closestItem.component as XYSeries;\n\t\t\t\t\tseries.showDataItemTooltip(closestItem);\n\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", closestItem);\n\n\t\t\t\t\tconst point = closestItem.get(\"point\");\n\t\t\t\t\tif (point) {\n\n\t\t\t\t\t\t// removing x and y to solve #72225\n\t\t\t\t\t\tcursor.handleMove(series.toGlobal({ x: point.x - series.x(), y: point.y - series.y() }), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateCursor() {\n\t\tlet cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.updateCursor();\n\t\t}\n\t}\n\n\tprotected _addCursor(cursor: XYCursor) {\n\t\tthis.plotContainer.children.push(cursor);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.series.each((series) => {\n\t\t\tthis._colorize(series);\n\t\t})\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\n\t\tif (this.isDirty(\"cursor\")) {\n\t\t\tconst previous = this._prevSettings.cursor;\n\t\t\tconst cursor = this.get(\"cursor\")!;\n\t\t\tif (cursor !== previous) {\n\t\t\t\tthis._disposeProperty(\"cursor\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor._setChart(this);\n\t\t\t\t\tthis._addCursor(cursor);\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\n\t\t\t\t\t\tthis._handleCursorSelectEnd();\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t\t//this.setRaw(\"cursor\", cursor) // to reset previous value\n\t\t\t\tthis._prevSettings.cursor = cursor;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarX\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarX;\n\t\t\tconst scrollbarX = this.get(\"scrollbarX\")!;\n\t\t\tif (scrollbarX !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarX\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tif (!scrollbarX.parent) {\n\t\t\t\t\t\tthis.topAxesContainer.children.push(scrollbarX);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"released\", () => {\n\t\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\t\tif (axis.get(\"zoomable\")) {\n\t\t\t\t\t\t\t\tthis._handleAxisSelection(axis);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarX.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.xAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position, false) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.scrollbarX = scrollbarX;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarY\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarY;\n\t\t\tconst scrollbarY = this.get(\"scrollbarY\")!;\n\t\t\tif (scrollbarY !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarY\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tif (!scrollbarY.parent) {\n\t\t\t\t\t\tthis.rightAxesContainer.children.push(scrollbarY);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"released\", () => {\n\t\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\t\tif (axis.get(\"zoomable\")) {\n\t\t\t\t\t\t\t\tthis._handleAxisSelection(axis);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarY.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.yAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position, false) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tthis._prevSettings.scrollbarY = scrollbarY;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tsuper._processSeries(series);\n\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tconst yAxis = series.get(\"yAxis\");\n\n\t\t$array.move(xAxis.series, series);\n\t\t$array.move(yAxis.series, series);\n\n\t\tseries._posXDp = series.addDisposer(xAxis.events.on(\"positionchanged\", () => {\n\t\t\tseries._fixPosition();\n\t\t}))\n\n\t\tseries._posXDp = series.addDisposer(yAxis.events.on(\"positionchanged\", () => {\n\t\t\tseries._fixPosition();\n\t\t}))\n\n\t\tif (!series.get(\"baseAxis\")) {\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tseries.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tseries.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tif (series.get(\"stacked\")) {\n\t\t\tseries._markDirtyKey(\"stacked\");\n\t\t\t$array.each(series.dataItems, (dataItem) => {\n\t\t\t\tdataItem.set(\"stackToItemY\", undefined);\n\t\t\t\tdataItem.set(\"stackToItemX\", undefined);\n\t\t\t})\n\t\t}\n\t\tseries._markDirtyAxes();\n\t\tyAxis.markDirtyExtremes();\n\t\txAxis.markDirtyExtremes();\n\t\txAxis._seriesAdded = true;\n\t\tyAxis._seriesAdded = true;\n\n\t\tthis._colorize(series);\n\t}\n\n\tprotected _colorize(series: this[\"_seriesType\"]) {\n\t\tconst colorSet = this.get(\"colors\")!;\n\t\tif (colorSet) {\n\t\t\tif (series.get(\"fill\") == null) {\n\t\t\t\tconst color = colorSet.next();\n\n\t\t\t\tseries._setSoft(\"stroke\", color);\n\t\t\t\tseries._setSoft(\"fill\", color);\n\t\t\t}\n\t\t}\n\t\tconst patternSet = this.get(\"patterns\")!;\n\t\tif (patternSet) {\n\t\t\tif (series.get(\"fillPattern\") == null) {\n\t\t\t\tconst pattern = patternSet.next();\n\n\t\t\t\tseries._setSoft(\"fillPattern\", pattern);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleCursorSelectEnd() {\n\t\tconst cursor = this.get(\"cursor\")!;\n\t\tconst behavior = cursor.get(\"behavior\");\n\n\t\tconst downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n\t\tconst downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n\n\t\tconst positionX = Math.min(1, Math.max(0, cursor.getPrivate(\"positionX\", 0.5)));\n\t\tconst positionY = Math.min(1, Math.max(0, cursor.getPrivate(\"positionY\", 0.5)));\n\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionX);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionX);\n\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionY);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionY);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\t}\n\n\tprotected _handleScrollbar(axes: ListAutoDispose<Axis<any>>, start: number, end: number, priority?: \"start\" | \"end\") {\n\n\t\taxes.each((axis) => {\n\n\t\t\tlet axisStart = axis.fixPosition(start);\n\t\t\tlet axisEnd = axis.fixPosition(end);\n\n\t\t\tlet zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\n\n\t\t\tconst updateScrollbar = \"updateScrollbar\";\n\t\t\taxis.setPrivateRaw(updateScrollbar, false);\n\n\t\t\tif (zoomAnimation) {\n\t\t\t\tzoomAnimation.events.on(\"stopped\", () => {\n\t\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _processAxis<R extends AxisRenderer>(axes: ListAutoDispose<Axis<R>>, container: Container): IDisposer {\n\t\treturn axes.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axis) => {\n\t\t\t\t\tthis._removeAxis(axis);\n\t\t\t\t})\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tcontainer.children.push(change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tcontainer.children.setIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tcontainer.children.insertIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxis(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tcontainer.children.moveValue(change.value, change.newIndex);\n\t\t\t\tchange.value.processChart(this);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _removeAxis(axis: Axis<AxisRenderer>) {\n\t\tif (!axis.isDisposed()) {\n\t\t\tconst axisParent = axis.parent\n\t\t\tif (axisParent) {\n\t\t\t\taxisParent.children.removeValue(axis);\n\t\t\t}\n\n\t\t\tconst gridContainer = axis.gridContainer;\n\t\t\tconst gridParent = gridContainer.parent;\n\t\t\tif (gridParent) {\n\t\t\t\tgridParent.children.removeValue(gridContainer);\n\t\t\t}\n\n\t\t\tconst topGridContainer = axis.topGridContainer;\n\t\t\tconst topGridParent = topGridContainer.parent;\n\t\t\tif (topGridParent) {\n\t\t\t\ttopGridParent.children.removeValue(topGridContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChartLayout() {\n\t\tconst left = this.leftAxesContainer.width();\n\t\tconst right = this.rightAxesContainer.width();\n\n\t\tconst bottomAxesContainer = this.bottomAxesContainer;\n\t\tbottomAxesContainer.set(\"paddingLeft\", left);\n\t\tbottomAxesContainer.set(\"paddingRight\", right);\n\n\t\tconst topAxesContainer = this.topAxesContainer;\n\t\ttopAxesContainer.set(\"paddingLeft\", left);\n\t\ttopAxesContainer.set(\"paddingRight\", right);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis(axis: Axis<AxisRenderer>) {\n\t\tvar cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tthis.addDisposer(axis.on(\"start\", () => {\n\t\t\t\tthis._updateCursor();\n\t\t\t}))\n\n\t\t\tthis.addDisposer(axis.on(\"end\", () => {\n\t\t\t\tthis._updateCursor();\n\t\t\t}))\n\t\t}\n\t}\n\n\n\tpublic _handleAxisSelection(axis: Axis<any>, force?: boolean) {\n\n\t\tlet start = axis.fixPosition(axis.get(\"start\", 0));\n\t\tlet end = axis.fixPosition(axis.get(\"end\", 1));\n\n\t\tif (start > end) {\n\t\t\t[start, end] = [end, start];\n\t\t}\n\n\t\tif (this.xAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\n\t\t\t\tif (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarX.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarX.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarX.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.yAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\n\t\t\t\tif (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarY.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarY.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarY.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _handleZoomOut() {\n\t\tlet zoomOutButton = this.zoomOutButton;\n\t\tif (zoomOutButton && zoomOutButton.parent) {\n\t\t\tlet visible = false;\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomOut\", true)) {\n\t\t\t\t\tif ($math.round(axis.get(\"start\", 0), 5) != 0 || $math.round(axis.get(\"end\", 1), 5) != 1) {\n\t\t\t\t\t\tvisible = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomOut\", true)) {\n\t\t\t\t\tif ($math.round(axis.get(\"start\", 0), 5) != 0 || $math.round(axis.get(\"end\", 1), 5) != 1) {\n\t\t\t\t\t\tvisible = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (visible) {\n\t\t\t\tif (zoomOutButton.isHidden()) {\n\t\t\t\t\tzoomOutButton.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tzoomOutButton.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if point is within plot area.\n\t *\n\t * @param   point  Reference point\n\t * @return         Is within plot area?\n\t */\n\tpublic inPlot(point: IPoint): boolean {\n\t\tconst plotContainer = this.plotContainer;\n\t\tconst otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\n\t\tconst global = plotContainer.toGlobal(point);\n\n\t\tif (point.x >= -0.5 && point.y >= -0.5 && point.x <= plotContainer.width() + 0.5 && point.y <= plotContainer.height() + 0.5) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherCharts) {\n\n\t\t\tfor (let i = otherCharts.length - 1; i >= 0; i--) {\n\t\t\t\tconst chart = otherCharts[i];\n\n\t\t\t\tif (chart != this) {\n\t\t\t\t\tconst chartPlotContainer = chart.plotContainer;\n\t\t\t\t\tconst documentPoint = this._root.rootPointToDocument(global);\n\t\t\t\t\tconst chartRoot = chart._root.documentPointToRoot(documentPoint);\n\t\t\t\t\tconst local = chartPlotContainer.toLocal(chartRoot);\n\t\t\t\t\tif (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic arrangeTooltips() {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst w = plotContainer.width();\n\t\tconst h = plotContainer.height();\n\n\t\tlet hh = this.height();\n\n\t\tconst bounds = this._root.tooltipContainer.get(\"layerMargin\");\n\n\t\tif (bounds) {\n\t\t\tif (bounds.bottom > hh) {\n\t\t\t\thh = bounds.bottom;\n\t\t\t}\n\t\t}\n\n\t\tlet plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tlet plotB = plotContainer._display.toGlobal({ x: w, y: h });\n\n\t\tconst tooltips: Array<Tooltip> = [];\n\t\tlet sum = 0;\n\n\t\tlet minDistance = Infinity;\n\t\tlet movePoint = this._movePoint;\n\t\tlet maxTooltipDistance = this.get(\"maxTooltipDistance\");\n\t\tlet maxTooltipDistanceBy = this.get(\"maxTooltipDistanceBy\", \"xy\");\n\t\tlet closest: XYSeries;\n\t\tlet closestPoint: IPoint;\n\n\t\tif ($type.isNumber(maxTooltipDistance)) {\n\t\t\tthis.series.each((series) => {\n\t\t\t\tif (!series.isHidden()) {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tlet distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\tdistance = Math.abs(movePoint.x - point.x);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\tdistance = Math.abs(movePoint.y - point.y);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\t\tclosest = series;\n\t\t\t\t\t\t\t\tclosestPoint = point;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst tooltipSeries: Array<XYSeries> = [];\n\n\t\tthis.series.each((series) => {\n\t\t\tconst tooltip = series.get(\"tooltip\")!;\n\n\t\t\tif (tooltip && !tooltip.get(\"forceHidden\")) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\tif (point) {\n\t\t\t\t\tif (maxTooltipDistance >= 0) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point && closestPoint) {\n\t\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\t\tlet distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\n\t\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.x - point.x);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.y - point.y);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (distance > maxTooltipDistance) {\n\t\t\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (maxTooltipDistance == -1) {\n\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!hidden) {\n\t\t\t\t\t\t\tsum += point.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hidden || series.isHidden() || series.isHiding()) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show();\n\t\t\t\t\t\ttooltips.push(tooltip);\n\n\t\t\t\t\t\ttooltipSeries.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.setPrivate(\"tooltipSeries\", tooltipSeries);\n\n\t\tif (this.get(\"arrangeTooltips\")) {\n\n\t\t\tlet totalTooltipH = 0;\n\t\t\tlet tooltipCount = 0;\n\n\t\t\tconst tooltipContainer = this._root.tooltipContainer;\n\n\t\t\tconst count = tooltips.length;\n\t\t\tconst average = sum / count;\n\n\t\t\tif (average > h / 2 + plotT.y) {\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\")!.y, a.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = plotB.y;\n\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\ttooltipCount++;\n\t\t\t\t\ttotalTooltipH += height;\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\ttooltip.setPrivate(\"customData\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\tprevY = Math.min(prevY - height, tooltip._fy - height);\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (prevY < 0) {\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = prevY;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\ttooltipCount++;\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - prevY;\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - prevY;\n\t\t\t\t\t\t\tif (top < prevBottom) {\n\t\t\t\t\t\t\t\ttop = prevBottom;\n\t\t\t\t\t\t\t\tbottom = top + tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bounds.bottom - prevY + tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltips.reverse();\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\")!.y, b.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = 0;\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\ttooltipCount++;\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\ttotalTooltipH += height;\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + hh, prevY + height) })\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t\tprevY = Math.max(prevY + height, tooltip._fy + height);\n\t\t\t\t})\n\n\t\t\t\tif (prevY > hh) {\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = hh;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\ttooltipCount++;\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - (hh - prevY);\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - (hh - prevY);\n\t\t\t\t\t\t\tif (bottom > prevBottom) {\n\t\t\t\t\t\t\t\tbottom = prevBottom\n\t\t\t\t\t\t\t\ttop = bottom - tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bottom - tooltip.height() - tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (totalTooltipH == 0 && tooltipCount > 0) {\n\t\t\t\tthis._disposers.push(this.root.events.once(\"frameended\", () => {\n\t\t\t\t\tthis.arrangeTooltips();\n\t\t\t\t}))\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _tooltipToLocal(point: IPoint): IPoint {\n\t\treturn this.plotContainer.toLocal(point);\n\t}\n\n\t/**\n\t * Fully zooms out the chart.\n\t */\n\tpublic zoomOut() {\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (axis.get(\"zoomOut\", true)) {\n\t\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\t\taxis.zoom(0, 1);\n\t\t\t}\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (axis.get(\"zoomOut\", true)) {\n\t\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\t\taxis.zoom(0, 1);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\t// Explicitly disposing cursor to avoid memory leak of cursor adding\n\t\t// keyboard events after parent chart has been disposed\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.dispose();\n\t\t}\n\t}\n\n}\n","import type { ITimeInterval } from \"../../core/util/Time\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IValueAxisDataItem, ValueAxis } from \"./axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\r\nimport type { DateAxis } from \"./axes/DateAxis\";\r\nimport type { ICategoryAxisDataItem } from \"./axes/CategoryAxis\";\r\nimport type { IGaplessDateAxisDataItem } from \"./axes/GaplessDateAxis\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst language = this._root.language;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/xy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 16,\r\n\t\t\tpaddingBottom: 16,\r\n\t\t\tpanX: false,\r\n\t\t\tpanY: false,\r\n\t\t\twheelStep: 0.25,\r\n\t\t\tarrangeTooltips: true,\r\n\t\t\tpinchZoomX: false,\r\n\t\t\tpinchZoomY: false\r\n\t\t});\r\n\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tlegendLabelText: \"{name}\"\r\n\t\t})\r\n\r\n\t\tr(\"Rectangle\", [\"plotbackground\", \"xy\", \"background\"]).setAll({\r\n\t\t\tfill: Color.fromHex(0x000000),\r\n\t\t\tfillOpacity: 0\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: XYChartScrollbar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n\t\t\tpaddingBottom: 0,\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingRight: 0,\r\n\t\t\tcolors: ColorSet.new(this._root, {\r\n\t\t\t\tsaturation: 0\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tfocusable: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n\t\t\tcornerRadiusBL: 40,\r\n\t\t\tcornerRadiusBR: 40,\r\n\t\t\tcornerRadiusTL: 40,\r\n\t\t\tcornerRadiusTR: 40\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true,\r\n\t\t\tminGridDistance: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5,\r\n\t\t\tcenterY: p100,\r\n\t\t\tminPosition: 0.01,\r\n\t\t\tmaxPosition: 0.99,\r\n\t\t\tfontSize: \"0.8em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"category\"]).setAll({\r\n\t\t\ttext: \"{category}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"minor\"]).setAll({\r\n\t\t\tfontSize: \"0.6em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Cursor\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYCursor\").setAll({\r\n\t\t\tbehavior: \"none\",\r\n\t\t\tlayer: 30,\r\n\t\t\texportable: false,\r\n\t\t\tsnapToSeriesBy: \"xy\",\r\n\t\t\tmoveThreshold: 1\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tforceInactive: true,\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\trole: \"slider\",\r\n\t\t\t\tariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tforceInactive: true,\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\trole: \"slider\",\r\n\t\t\t\tariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Axes\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Axis\").setAll({\r\n\t\t\tzoomOut: true,\r\n\t\t\tstart: 0,\r\n\t\t\tend: 1,\r\n\t\t\tminZoomCount: 1,\r\n\t\t\tmaxZoomCount: Infinity,\r\n\t\t\tmaxZoomFactor: 1000,\r\n\t\t\tmaxDeviation: 0.1,\r\n\t\t\tsnapTooltip: true,\r\n\t\t\ttooltipLocation: 0.5,\r\n\t\t\tpanX: true,\r\n\t\t\tpanY: true,\r\n\t\t\tzoomX: true,\r\n\t\t\tzoomY: true,\r\n\t\t\tfixAxisSize: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\").setAll({\r\n\t\t\tlocation: 0.5,\r\n\t\t\tmultiLocation: 0,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingTop: 3,\r\n\t\t\tpaddingBottom: 3,\r\n\t\t\tpaddingLeft: 5,\r\n\t\t\tpaddingRight: 5\r\n\t\t});\r\n\r\n\t\t// The following is deprecated following text measuring updates in 5.0.5\r\n\t\t// r(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t// \ttextAlign: \"right\"\r\n\t\t// });\r\n\r\n\t\t// r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t// \ttextAlign: \"left\"\r\n\t\t// });\r\n\r\n\t\tr(\"Container\", [\"axis\", \"header\"]).setAll({\r\n\t\t\tlayer: 30\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"header\", \"background\"]).setAll({\r\n\t\t\tcrisp: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisRenderer\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcrisp: true,\r\n\t\t\t\tstrokeOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"AxisRendererX\").setAll({\r\n\t\t\tminGridDistance: 120,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\twidth: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\").setAll({\r\n\t\t\tminGridDistance: 40,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\theight: p100\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"axis\", \"thumb\", \"zoomgrip\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\r\n\t\t\trule.states.create(\"hover\", { fillOpacity: 0.1 })\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"x\", \"zoomgrip\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\"\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"y\", \"zoomgrip\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ns-resize\"\r\n\t\t});\r\n\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t\tcrisp: true\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"minor\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.07,\r\n\t\t\t\tcrisp: true\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\r\n\t\tr(\"Grid\", [\"base\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.3\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tfillOpacity: 0.05,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\t// hides all elements of series axis range\r\n\t\tr(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\tr(\"Grid\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisTick\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0.5,\r\n\t\t\t\tmultiLocation: 0,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tvisible: false\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"CategoryAxis\").setAll({\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tfillRule: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst gridIntervals: Array<ITimeInterval> = [\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t];\r\n\r\n\t\tconst dateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst periodChangeDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_day\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst tooltipDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n\t\t\t\"second\": language.translate(\"_date_second_full\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute_full\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour_full\"),\r\n\t\t\t\"day\": language.translate(\"_date_day_full\"),\r\n\t\t\t\"week\": language.translate(\"_date_week_full\"),\r\n\t\t\t\"month\": language.translate(\"_date_month_full\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tr(\"CategoryDateAxis\").setAll({\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n\t\t});\r\n\r\n\t\tr(\"DateAxis\").setAll({\r\n\t\t\tmaxZoomFactor: null,\r\n\t\t\tstrictMinMax: true,\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgroupData: false,\r\n\t\t\tgroupCount: 500,\r\n\t\t\tskipFirstMinor: true,\r\n\t\t\tweekLabelLocation: 0,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n\t\t\ttooltipDateFormats: tooltipDateFormats,\r\n\r\n\t\t\tgroupIntervals: [\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t\t],\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <DateAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst endValue = dataItem.get(\"endValue\");\r\n\t\t\t\t\tconst intervalDuration = axis.intervalDuration();\r\n\t\t\t\t\tconst baseInterval = axis.getPrivate(\"baseInterval\");\r\n\t\t\t\t\tconst gridInterval = axis.getPrivate(\"gridInterval\", baseInterval);\r\n\r\n\r\n\t\t\t\t\tlet min = axis.getPrivate(\"min\", 0);\r\n\t\t\t\t\tmin = $time.round(new Date(min), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\t\tif (value != null && endValue != null) {\r\n\t\t\t\t\t\tconst val = Math.round(Math.round((value - min) / intervalDuration)) / 2;\r\n\r\n\t\t\t\t\t\tif (val == Math.round(val)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"GaplessDateAxis\").setAll({\r\n\t\t\tfillRule: (dataItem: DataItem<IGaplessDateAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\r\n\t\t\t\t\tconst index = dataItem.get(\"index\")\r\n\t\t\t\t\tlet visible = false;\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\tvisible = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\taxisFill.setPrivate(\"visible\", visible);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ValueAxis\").setAll({\r\n\r\n\t\t\tbaseValue: 0,\r\n\t\t\tlogarithmic: false,\r\n\t\t\tstrictMinMax: false,\r\n\t\t\tautoZoom: true,\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <ValueAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"DurationAxis\").setAll({\r\n\t\t\tbaseUnit: \"second\"\r\n\t\t})\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tmaskBullets: true,\r\n\t\t\tstackToNegative: true,\r\n\r\n\t\t\tlocationX: 0.5,\r\n\t\t\tlocationY: 0.5,\r\n\r\n\t\t\tsnapTooltip: false,\r\n\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\",\r\n\r\n\t\t\tseriesTooltipTarget: \"series\"\r\n\t\t});\r\n\r\n\t\tr(\"BaseColumnSeries\").setAll({\r\n\t\t\tadjustBulletPosition: true\r\n\t\t});\r\n\r\n\t\tr(\"ColumnSeries\").setAll({\r\n\t\t\tclustered: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(70),\r\n\t\t\theight: percent(70),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"LineSeries\").setAll({\r\n\t\t\tconnect: true,\r\n\t\t\tautoGapCount: 1.1,\r\n\t\t\tstackToNegative: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 0,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, h / 2);\r\n\t\t\t\t\tdisplay.lineTo(w, h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, h);\r\n\t\t\t\t\tdisplay.lineTo(0, h);\r\n\t\t\t\t\tdisplay.lineTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"SmoothedXYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedXLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"Candlestick\").setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(50),\r\n\t\t\theight: percent(50),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"OHLC\").setAll({\r\n\t\t\twidth: percent(80),\r\n\t\t\theight: percent(80)\r\n\t\t});\r\n\r\n\t\tr(\"CandlestickSeries\").setAll({\r\n\t\t\tlowValueXGrouped: \"low\",\r\n\t\t\tlowValueYGrouped: \"low\",\r\n\t\t\thighValueXGrouped: \"high\",\r\n\t\t\thighValueYGrouped: \"high\",\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\"\r\n\t\t})\r\n\r\n\t\t// These rules can be used for regular columns, too\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t\t// Hollow\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromOpen\", { fillOpacity: 0 });\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromOpen\", { fillOpacity: 1 });\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\r\n\t\t// AXIS RANGE GRIP\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"rangegrip\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0,\r\n\t\t\t\tfillOpacity: 0,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\twidth: 12,\r\n\t\t\t\theight: 12\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"rangegrip\", \"button\", \"icon\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tinteractive: false,\r\n\t\t\t\tcrisp: true,\r\n\t\t\t\tstrokeOpacity: 0.5,\r\n\t\t\t\tdraw: (display: any) => {\r\n\t\t\t\t\tdisplay.moveTo(0, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(0, 12.5);\r\n\r\n\t\t\t\t\tdisplay.moveTo(2, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(2, 12.5);\r\n\r\n\t\t\t\t\tdisplay.moveTo(4, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(4, 12.5);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"secondaryButtonText\");\r\n\t\t}\r\n\r\n\t\tr(\"Button\", [\"rangegrip\"]).setAll({\r\n\t\t\tdraggable: true,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingBottom: 0\r\n\t\t})\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\"]).setAll({\r\n\t\t\trotation: 90,\r\n\t\t\tcursorOverStyle: \"ns-resize\",\r\n\t\t\tcenterX: p50\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\",\r\n\t\t\tcenterX: p50\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\", \"left\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\", \"right\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\", \"top\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\", \"bottom\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t}\r\n}\r\n","import type { IPoint } from \"../../core/util/IPoint\";\nimport type { XYChart } from \"./XYChart\"\nimport type { XYSeries } from \"./series/XYSeries\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\nimport type { Axis } from \"./axes/Axis\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\n\nexport interface IXYCursorSettings extends IContainerSettings {\n\n\t/**\n\t * Cursor's X axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\txAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * Cursor's Y axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\tyAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * What should cursor do when dragged across plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Behavior} for more info\n\t * @default \"none\"\n\t */\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"none\";\n\n\t/**\n\t * Cursor's horizontal position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionX` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Cursor's vertical position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionY` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * If set to `true`, cursor will not be hidden when mouse cursor moves out\n\t * of the plot area.\n\t *\n\t * @default false\n\t */\n\talwaysShow?: boolean;\n\n\t/**\n\t * A list of series to snap cursor to.\n\t *\n\t * If set, the cursor will always snap to the closest data item of listed\n\t * series.\n\t */\n\tsnapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * Defines in which direction to look when searching for the nearest data\n\t * item to snap to.\n\t *\n\t * Possible values: `\"xy\"` (default), `\"x\"`, `\"y\"`, `\"x!\"`, `\"y!\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#snapping-to-series} for more info\n\t * @since 5.0.6\n\t * @default \"xy\"\n\t */\n\tsnapToSeriesBy?: \"xy\" | \"x\" | \"y\" | \"x!\" | \"y!\";\n\n\t/**\n\t * An array of other [[XYCursor]] objects to sync this cursor with.\n\t *\n\t * If set will automatically move synced cursors to the same position within\n\t * their respective axes as the this cursor assumin same XY coordinates of\n\t * the pointer.\n\t *\n\t * NOTE: Syncing is performed using actual X/Y coordinates of the point of\n\t * mouse cursor's position or touch. It means that they will not sync by axis\n\t * positions, but rather by screen coordinates. For example vertical lines\n\t * will not sync across horizontally laid out charts, and vice versa.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#syncing-cursors} for more info\n\t * @since 5.1.4\n\t */\n\tsyncWith?: Array<XYCursor>;\n\n\t/**\n\t * Minimum distance in pixels between down and up points.\n\t *\n\t * If a distance is less than the value of `moveThreshold`, the zoom or\n\t * selection won't happen.\n\t *\n\t * @since 5.2.20\n\t * @default 1\n\t */\n\tmoveThreshold?: number\n\n}\n\n\nexport interface IXYCursorPrivate extends IContainerPrivate {\n\n\t/**\n\t * Current X/Y coordinates of the cursor.\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * Current horizontal position relative to the plot area (0-1).\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Current vertical position relative to the plot area (0-1).\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * Horizontal cursor position on the moment when selection started.\n\t */\n\tdownPositionX?: number;\n\n\t/**\n\t * Vertical cursor position on the moment when selection started.\n\t */\n\tdownPositionY?: number;\n\n\t/**\n\t * Last global point to which cursor moved\n\t */\n\tlastPoint?: IPoint;\n}\n\nexport interface IXYCursorEvents extends IContainerEvents {\n\n\t/**\n\t * Kicks in when cursor selection ends.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectended: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Kicks in when cursor selection starts.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectstarted: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Kicks in when cursor's position over plot area changes.\n\t */\n\tcursormoved: {\n\t\tpoint: IPoint,\n\t\ttarget: XYCursor,\n\t\toriginalEvent?: IPointerEvent\n\t};\n\n\t/**\n\t * Kicks in when cursor's is hidden when user rolls-out of the plot area\n\t */\n\tcursorhidden: {\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Invoked if pointer is pressed down on a plot area and released without\n\t * moving (only when behavior is `\"selectX\"`).\n\t *\n\t * @since 5.4.7\n\t */\n\tselectcancelled: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n}\n\n/**\n * Creates a chart cursor for an [[XYChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n * @important\n */\nexport class XYCursor extends Container {\n\tpublic static className: string = \"XYCursor\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([XYCursor.className]);\n\n\tdeclare public _settings: IXYCursorSettings;\n\tdeclare public _privateSettings: IXYCursorPrivate;\n\tdeclare public _events: IXYCursorEvents;\n\n\tprotected _alwaysShow: boolean = false;\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineX: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"x\"]\n\t}));\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineY: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"y\"]\n\t}));\n\n\t/**\n\t * An element that represents current selection.\n\t *\n\t * @default Graphics.new()\n\t */\n\tpublic readonly selection: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"selection\", \"cursor\"], layer: 30\n\t}));\n\n\tprotected _movePoint: IPoint | undefined;\n\tprotected _lastPoint: IPoint = { x: 0, y: 0 };\n\tprotected _lastPoint2: IPoint = { x: 0, y: 0 };\n\n\tprotected _tooltipX: boolean = false;\n\tprotected _tooltipY: boolean = false;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _toX?: number;\n\tprotected _toY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\t\tsuper._afterNew();\n\t\tthis.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\n\t\tthis.states.create(\"hidden\", { visible: true, opacity: 0 });\n\t\tthis._drawLines();\n\t\tthis.setPrivateRaw(\"visible\", false);\n\n\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\tthis.setPrivate(\"visible\", true)\n\t\t}, 500));\n\n\t\tthis._disposers.push(this.lineX.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleXLine();\n\t\t}));\n\n\t\tthis._disposers.push(this.lineY.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleYLine();\n\t\t}));\n\n\t\tthis._disposers.push(this.lineX.events.on(\"focus\", () => this._handleLineFocus()));\n\t\tthis._disposers.push(this.lineX.events.on(\"blur\", () => this._handleLineBlur()));\n\n\t\tthis._disposers.push(this.lineY.events.on(\"focus\", () => this._handleLineFocus()));\n\t\tthis._disposers.push(this.lineY.events.on(\"blur\", () => this._handleLineBlur()));\n\n\t\tif ($utils.supports(\"keyboardevents\")) {\n\t\t\tthis._disposers.push($utils.addEventListener(document, \"keydown\", (ev: KeyboardEvent) => {\n\t\t\t\tthis._handleLineMove($utils.getEventKey(ev), ev.ctrlKey);\n\t\t\t}));\n\t\t}\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.plotContainer._display.cancelTouch = this.get(\"behavior\") != \"none\" ? true : false;\n\t\t}\n\t}\n\n\tprotected _handleXLine() {\n\t\tlet x = this.lineX.x();\n\t\tlet visible = true;\n\t\tif (x < 0 || x > this.width()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineX.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleYLine() {\n\t\tlet y = this.lineY.y();\n\t\tlet visible = true;\n\t\tif (y < 0 || y > this.height()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineY.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleLineMove(key: string, ctrlKey?: boolean) {\n\t\tlet dir: any = \"\";\n\n\t\tconst chart = this.chart;\n\n\t\tlet axis: Axis<AxisRenderer> | undefined;\n\t\tif (chart && chart.xAxes.length) {\n\t\t\tif (this._root.focused(this.lineX)) {\n\t\t\t\tdir = \"positionX\";\n\t\t\t\taxis = chart.xAxes.getIndex(0);\n\t\t\t}\n\t\t\telse if (this._root.focused(this.lineY)) {\n\t\t\t\taxis = chart.yAxes.getIndex(0);\n\t\t\t\tdir = \"positionY\";\n\t\t\t}\n\n\t\t\tlet m = 1;\n\t\t\tif (ctrlKey) {\n\t\t\t\tm = 5;\n\t\t\t}\n\n\t\t\tif (axis) {\n\t\t\t\tlet inversed = axis.get(\"renderer\").get(\"inversed\", false);\n\t\t\t\tlet step;\n\t\t\t\tif (key == \"ArrowRight\" || key == \"ArrowDown\") {\n\t\t\t\t\tstep = 1;\n\t\t\t\t}\n\t\t\t\telse if (key == \"ArrowLeft\" || key == \"ArrowUp\") {\n\t\t\t\t\tstep = -1;\n\t\t\t\t}\n\t\t\t\telse if (key == \"Tab\") {\n\t\t\t\t\tstep = 0;\n\t\t\t\t}\n\n\t\t\t\tif (step != null) {\n\t\t\t\t\tif (inversed) {\n\t\t\t\t\t\tstep *= -1;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.set(dir, axis.nextPosition(step * m));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleLineFocus() {\n\t\tthis._alwaysShow = this.get(\"alwaysShow\", false);\n\t\tthis.setAll({\n\t\t\tpositionX: this.getPrivate(\"positionX\", 0),\n\t\t\tpositionY: this.getPrivate(\"positionY\", 0),\n\t\t\talwaysShow: true\n\t\t});\n\n\t\tthis._handleLineMove(\"Tab\");\n\t}\n\n\tprotected _handleLineBlur() {\n\t\tif (this.lineX.isFocus() || this.lineY.isFocus()) {\n\t\t\tthis.setAll({\n\t\t\t\tpositionX: undefined,\n\t\t\t\tpositionY: undefined,\n\t\t\t\talwaysShow: this._alwaysShow\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"xAxis\")) {\n\t\t\tthis._tooltipX = false;\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\t\tif (xAxis) {\n\t\t\t\tconst tooltip = xAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipX = true;\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\t\tthis._updateXLine(tooltip);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"yAxis\")) {\n\t\t\tthis._tooltipY = false;\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis) {\n\t\t\t\tconst tooltip = yAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipY = true;\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\t\tthis._updateYLine(tooltip);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleSyncWith() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst syncWith = this.get(\"syncWith\");\n\t\t\tconst otherCharts: Array<XYChart> = [];\n\t\t\tif (syncWith) {\n\t\t\t\t$array.each(syncWith, (cursor) => {\n\t\t\t\t\tconst chart = cursor.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\totherCharts.push(chart)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tchart._otherCharts = otherCharts;\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tthis._handleSyncWith();\n\n\t\tif (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n\t\t\tconst positionX = this.get(\"positionX\");\n\t\t\tconst positionY = this.get(\"positionY\");\n\n\t\t\tif (positionX == null && positionY == null) {\n\t\t\t\tthis.hide(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\tthis.handleMove();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tlet x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 3);\n\t\tif (this._toX != x) {\n\t\t\tthis.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toX = x;\n\t\t}\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tlet y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 3);\n\t\tif (this._toY != y) {\n\t\t\tthis.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toY = y;\n\t\t}\n\t}\n\n\tprotected _drawLines() {\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, this.height());\n\t\t})\n\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(this.width(), 0);\n\t\t})\n\t}\n\n\tpublic updateCursor() {\n\t\tif (this.get(\"alwaysShow\")) {\n\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t}\n\t\tthis.handleMove();\n\t}\n\n\tpublic _setChart(chart: XYChart): void {\n\t\tthis.chart = chart;\n\n\t\tthis._handleSyncWith();\n\n\t\tconst plotContainer = chart.plotContainer;\n\n\t\tthis.events.on(\"boundschanged\", () => {\n\t\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\t\tthis.updateCursor();\n\t\t\t}, 50))\n\t\t})\n\n\t\t//this._display.interactive = true;\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tthis._disposers.push(plotContainer.events.on(\"click\", (event) => {\n\t\t\t\tif ($utils.isTouchEvent(event.originalEvent)) {\n\t\t\t\t\tthis._handleMove(event);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleCursorDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleCursorUp(event);\n\t\t\tif (!event.native && !this.isHidden()) {\n\t\t\t\tthis._handleMove(event);\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tif (!this.get(\"syncWith\")) {\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\n\t\t\t\t\t// Ignore mouse movement if it originates on outside element and\n\t\t\t\t\t// we're not dragging.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._handleMove(event);\n\n\t\t\tif (Math.hypot(this._lastPoint2.x - event.point.x, this._lastPoint2.y - event.point.y) > 1) {\n\t\t\t\tthis._handleLineBlur();\n\t\t\t\tthis._lastPoint2 = event.point;\n\t\t\t}\n\t\t}));\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this.selection);\n\t\t}\n\t}\n\n\tprotected _inPlot(point: IPoint): boolean {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.inPlot(point);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _handleCursorDown(event: ISpritePointerEvent) {\n\t\tif ((event.originalEvent as any).button == 2) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst rootPoint = event.point;\n\t\tlet local = this._display.toLocal(rootPoint);\n\t\tconst chart = this.chart;\n\n\t\tthis.selection.set(\"draw\", () => { });\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tthis._downPoint = local;\n\n\t\t\tif (this.get(\"behavior\") != \"none\") {\n\t\t\t\tthis.selection.show();\n\n\t\t\t\tconst type = \"selectstarted\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet positionX = this._getPosition(local).x;\n\t\t\tlet positionY = this._getPosition(local).y;\n\n\t\t\tthis.setPrivate(\"downPositionX\", positionX);\n\t\t\tthis.setPrivate(\"downPositionY\", positionY);\n\t\t}\n\t}\n\n\tprotected _handleCursorUp(event: ISpritePointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tif (this._downPoint) {\n\t\t\tconst behavior = this.get(\"behavior\", \"none\");\n\t\t\tif (behavior != \"none\") {\n\t\t\t\tif (behavior.charAt(0) === \"z\") {\n\t\t\t\t\tthis.selection.hide();\n\t\t\t\t}\n\n\t\t\t\tconst rootPoint = event.point;\n\t\t\t\tlet local = this._display.toLocal(rootPoint);\n\n\t\t\t\tconst downPoint = this._downPoint;\n\t\t\t\tconst moveThreshold = this.get(\"moveThreshold\", 1);\n\t\t\t\tif (local && downPoint) {\n\t\t\t\t\tlet dispatch = false;\n\t\t\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.x - downPoint.x) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.y - downPoint.y) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dispatch) {\n\t\t\t\t\t\tconst type = \"selectended\";\n\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconst type = \"selectcancelled\";\n\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handleMove(event: ISpritePointerEvent) {\n\t\tif (this.getPrivate(\"visible\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart && $object.keys(chart.plotContainer._downPoints).length > 1) {\n\t\t\t\tthis.set(\"forceHidden\", true)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"forceHidden\", false)\n\t\t\t}\n\n\t\t\t// TODO: handle multitouch\n\t\t\tconst rootPoint = event.point;\n\t\t\tconst lastPoint = this._lastPoint;\n\n\t\t\tif (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastPoint = rootPoint;\n\t\t\tthis.setPrivate(\"lastPoint\", rootPoint);\n\n\t\t\tthis.handleMove({ x: rootPoint.x, y: rootPoint.y }, false, event.originalEvent);\n\t\t}\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\treturn { x: point.x / this.width(), y: point.y / this.height() };\n\t}\n\n\t/**\n\t * Moves the cursor to X/Y coordinates within chart container (`point`).\n\t *\n\t * If `skipEvent` parameter is set to `true`, the move will not invoke\n\t * the `\"cursormoved\"` event.\n\t *\n\t * @param  point      X/Y to move cursor to\n\t * @param  skipEvent  Do not fire \"cursormoved\" event\n\t */\n\tpublic handleMove(point?: IPoint, skipEvent?: boolean, originalEvent?: IPointerEvent) {\n\t\tif (!point) {\n\t\t\tpoint = this._movePoint;\n\t\t}\n\n\t\tconst alwaysShow = this.get(\"alwaysShow\");\n\n\t\tif (!point) {\n\t\t\tthis.hide(0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._movePoint = point;\n\t\tlet local = this._display.toLocal(point);\n\t\tlet chart = this.chart;\n\n\t\tif (chart && (this._inPlot(local) || this._downPoint)) {\n\t\t\tchart._movePoint = point;\n\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis.show();\n\n\t\t\t\tconst behavior = this.get(\"behavior\", \"\");\n\t\t\t\tif (behavior.charAt(0) == \"z\") {\n\t\t\t\t\tthis.selection.set(\"draw\", () => { });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = local.x;\n\t\t\tlet y = local.y;\n\n\t\t\tlet xyPos = this._getPosition(local);\n\n\t\t\tthis.setPrivate(\"point\", local);\n\n\t\t\tlet snapToSeries = this.get(\"snapToSeries\");\n\n\t\t\tif (this._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\tlet positionX = xyPos.x;\n\n\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\tpositionX = userPositionX;\n\t\t\t}\n\n\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\tlet positionY = xyPos.y;\n\n\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\tpositionY = userPositionY;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"positionX\", positionX);\n\t\t\tthis.setPrivate(\"positionY\", positionY);\n\n\t\t\tconst xy = this._getPoint(positionX, positionY);\n\t\t\tx = xy.x;\n\t\t\ty = xy.y;\n\n\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionX, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionY, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!skipEvent) {\n\t\t\t\tchart._handleCursorPosition();\n\n\t\t\t\tconst type = \"cursormoved\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, point: point, originalEvent: originalEvent });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateLines(x, y);\n\n\t\t\tchart.arrangeTooltips();\n\t\t}\n\t\telse if (!this._downPoint) {\n\t\t\tif (!alwaysShow) {\n\t\t\t\tthis.hide(0);\n\n\t\t\t\tconst type = \"cursorhidden\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._downPoint && this.get(\"behavior\") != \"none\") {\n\t\t\tthis._updateSelection(local)\n\t\t}\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\treturn { x: this.width() * positionX, y: this.height() * positionY };\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis.lineX.set(\"x\", x);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis.lineY.set(\"y\", y);\n\t\t}\n\n\t\tthis._drawLines();\n\t}\n\n\tprotected _updateSelection(point: IPoint) {\n\t\tconst selection = this.selection;\n\t\tconst behavior = this.get(\"behavior\");\n\t\tconst w = this.width();\n\t\tconst h = this.height();\n\n\t\tif (point.x < 0) {\n\t\t\tpoint.x = 0;\n\t\t}\n\n\t\tif (point.x > w) {\n\t\t\tpoint.x = w;\n\t\t}\n\n\t\tif (point.y < 0) {\n\t\t\tpoint.y = 0;\n\t\t}\n\n\t\tif (point.y > h) {\n\t\t\tpoint.y = h;\n\t\t}\n\n\t\tselection.set(\"draw\", (display) => {\n\t\t\tconst downPoint = this._downPoint;\n\t\t\tif (downPoint) {\n\t\t\t\tif (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, downPoint.y);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomX\" || behavior === \"selectX\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, 0);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomY\" || behavior === \"selectY\") {\n\t\t\t\t\tdisplay.moveTo(0, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, point.y);\n\t\t\t\t\tdisplay.lineTo(0, point.y);\n\t\t\t\t\tdisplay.lineTo(0, downPoint.y);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _onHide() {\n\t\tif (this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\tseries.handleCursorHide();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onHide();\n\t}\n\n\tprotected _onShow() {\n\t\tif (!this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onShow();\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis.selection.dispose();\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { Animation } from \"../../../core/util/Entity\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Root } from \"../../../core/Root\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component, IComponentSettings, IComponentPrivate, IComponentEvents, IComponentDataItem } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IAxisSettings<R extends AxisRenderer> extends IComponentSettings {\n\t/**\n\t * A renderer object which is responsible of rendering visible axis elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n\t */\n\trenderer: R;\n\n\t/**\n\t * The initial relative zoom start position of the axis.\n\t *\n\t * E.g. stting it to `0.1` will pre-zoom axis to 10% from the start.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tstart?: number;\n\n\t/**\n\t * The initial relative zoom end position of the axis.\n\t *\n\t * E.g. stting it to `0.9` will pre-zoom axis to 10% from the end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tend?: number;\n\n\t/**\n\t * Maximum number of times the scope of the axis could auto-zoom-in.\n\t *\n\t * This is to prevent axis jumping too drastically when scrolling/zooming.\n\t *\n\t * @default 1000\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Maximum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed out beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tmaxZoomCount?: number;\n\n\t/**\n\t * Minimum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed in beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tminZoomCount?: number;\n\n\t/**\n\t * Base value of the axis.\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * horizontally, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * vertically, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * horizontally, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * vertically, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomY?: boolean;\n\n\t/**\n\t * Set this to `false` to prevent axis from being zoomed.\n\t */\n\tzoomable?: boolean;\n\n\t/**\n\t * A relative distance the axis is allowed to be zoomed/panned beyond its\n\t * actual scope.\n\t *\n\t * @default 0.1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Over_zooming} for more info\n\t */\n\tmaxDeviation?: number;\n\n\t/**\n\t * [[Tooltip]] element to use for axis.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * `tooltipLocation` indicates\n\t * which relative place to snap to: `0` beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\ttooltipLocation?: number;\n\n\t/**\n\t * Should tooltip snap to the `tooltipLocation` (`true`) or follow cursor.\n\t *\n\t * @default true\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * If set to `true` (default) the axis width will stay constant across all\n\t * zooms, even if actual length of all visible labels changes.\n\t *\n\t * @default true\n\t */\n\tfixAxisSize?: boolean;\n\n\t/**\n\t * A function that will be used to create bullets on each cell.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n\t */\n\tbullet?: (root: Root, axis: Axis<AxisRenderer>, dataItem: DataItem<IAxisDataItem>) => AxisBullet;\n\n\t/**\n\t * Specifies how axis fill should be drawn (if fill rule allows it).\n\t *\n\t * @since 5.14.0\n\t */\n\tminorAxisFillsEnabled?: boolean;\n\n\t/**\n\t * If set to `false`, the axis will not be zoomed out when the chart's zoom\n\t * out button is pressed, and vice versa when axis is zoomed, it will not\n\t * trigger the button to appear.\n\t *\n\t * @default true\n\t * @since 5.14.0\n\t */\n\tzoomOut?: boolean;\n}\n\nexport interface IAxisEvents extends IComponentEvents {\n}\n\nexport interface IAxisPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tname?: \"value\" | \"date\" | \"category\";\n\n\t/**\n\t * @ignore\n\t */\n\tupdateScrollbar?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Saves position to which tooltip points.\n\t */\n\ttooltipPosition?: number;\n\n\t/**\n\t * Width in pixels between grid lines (read-only).\n\t * \n\t * It might not be exact, as [[DateAxis]] can have grids at irregular\n\t * intervals.\n\t * \n\t * Could be used to detect when size changes and to adjust labels for them\n\t * not to overlap.\n\t */\n\tcellWidth?: number;\n\n}\n\nexport interface IAxisDataItem extends IComponentDataItem {\n\n\t/**\n\t * Axis label element.\n\t */\n\tlabel?: AxisLabel;\n\n\t/**\n\t * Tick element.\n\t */\n\ttick?: AxisTick;\n\n\t/**\n\t * Grid line element.\n\t */\n\tgrid?: Grid;\n\n\t/**\n\t * Axis fill element.\n\t */\n\taxisFill?: Graphics;\n\n\t/**\n\t * Bullet element.\n\t */\n\tbullet?: AxisBullet;\n\n\t/**\n\t * Indicates if this data item represents an axis range.\n\t */\n\tisRange?: boolean;\n\n\t/**\n\t * If set to `true`, the grid and axis fill of this data item will be drawn\n\t * above series.\n\t *\n\t * NOTE: this needs to be set **before** crating an axis range. Updating this\n\t * dynamically won't have any effect.\n\t *\n\t * NOTE: if you need all grid to be drawn above series, you can brig it to\n\t * front with `chart.gridContainer.toFront();`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Grid_fill_above_series} for more info\n\t * @default false\n\t */\n\tabove?: boolean\n\n}\n\n/**\n * A base class for all axes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\n */\nexport abstract class Axis<R extends AxisRenderer> extends Component {\n\tpublic static className: string = \"Axis\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Axis.className]);\n\n\tdeclare public _settings: IAxisSettings<R>;\n\tdeclare public _privateSettings: IAxisPrivate;\n\tdeclare public _dataItemSettings: IAxisDataItem;\n\tdeclare public _events: IAxisEvents;\n\n\tdeclare public _seriesType: XYSeries;\n\n\tprotected _series: Array<this[\"_seriesType\"]> = [];\n\n\tpublic _isPanning: boolean = false;\n\n\t/**\n\t * Array of minor data items.\n\t */\n\tpublic minorDataItems: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A [[Container]] that holds all the axis label elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelsContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that holds all the axis grid and fill elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds axis grid elements which goes above the series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds all the axis bullet elements.\n\t *\n\t * @default new Container\n\t */\n\tpublic readonly bulletsContainer: Container = this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }));\n\n\t/**\n\t * A referenece to the the chart the axis belongs to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _rangesDirty: Boolean = false;\n\n\tpublic _panStart: number = 0;\n\tpublic _panEnd: number = 1;\n\n\tprotected _sAnimation?: Animation<this[\"_settings\"][\"start\"]>;\n\tprotected _eAnimation?: Animation<this[\"_settings\"][\"end\"]>;\n\n\tpublic _skipSync: boolean = false;\n\n\t/**\n\t * A list of axis ranges.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @default new List()\n\t */\n\tpublic readonly axisRanges: List<DataItem<this[\"_dataItemSettings\"]>> = new List();\n\n\tpublic _seriesAxisRanges: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A control label that is invisible but is used to keep width the width of\n\t * the axis constant.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\n\t */\n\tpublic ghostLabel?: AxisLabel;\n\n\tprotected _cursorPosition: number = -1;\n\n\tprotected _snapToSeries?: Array<XYSeries>;\n\n\tpublic _seriesValuesDirty = false;\n\n\tpublic _seriesAdded = false;\n\n\t/**\n\t * A container above the axis that can be used to add additional stuff into\n\t * it. For example a legend, label, or an icon.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default new Container\n\t */\n\tpublic axisHeader: Container = this.children.push(Container.new(this._root, {\n\t\tthemeTags: [\"axis\", \"header\"],\n\t\tposition: \"absolute\",\n\t\tbackground: Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"header\", \"background\"],\n\t\t\tfill: this._root.interfaceColors.get(\"background\")\n\t\t})\n\t}));\n\n\tpublic _bullets: { [index: string]: AxisBullet } = {};\n\n\tprotected _dispose() {\n\t\t// these could be in other parents, so disposing just in case\n\t\tthis.gridContainer.dispose();\n\t\tthis.topGridContainer.dispose();\n\t\tthis.bulletsContainer.dispose();\n\t\tthis.labelsContainer.dispose();\n\t\tthis.axisHeader.dispose();\n\t\tsuper._dispose();\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"updateScrollbar\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (dataItem) => {\n\t\t\t\t\tdataItem.dispose();\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis.disposeDataItem(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value, [\"range\"]);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tif (renderer) {\n\t\t\trenderer.axis = this;\n\t\t\trenderer.processAxis();\n\t\t}\n\t\tthis.children.push(renderer);\n\t\tthis._createGhostLabel();\n\t}\n\n\tprotected _createGhostLabel() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\n\t\tghostLabel.adapters.disable(\"text\");\n\t\tghostLabel.setAll({ opacity: 0, tooltipText: undefined, tooltipHTML: undefined, interactive: false });\n\t\tghostLabel.events.disable();\n\t\tthis.ghostLabel = ghostLabel;\n\t}\n\n\tprotected _updateFinals(_start: number, _end: number) {\n\n\t}\n\n\t/**\n\t * Zooms the axis to relative locations.\n\t *\n\t * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\n\t *\n\t * @param   start     Relative start\n\t * @param   end       Relative end\n\t * @param   duration  Duration of the zoom animation in milliseconds\n\t * @return            Zoom animation\n\t */\n\tpublic zoom(start: number, end: number, duration?: number, priority?: \"start\" | \"end\"): Animation<this[\"_settings\"][\"start\"]> | Animation<this[\"_settings\"][\"end\"]> | undefined {\n\t\tif (this.get(\"zoomable\", true)) {\n\n\t\t\tthis._updateFinals(start, end);\n\n\t\t\tif (this.get(\"start\") !== start || this.get(\"end\") != end) {\n\t\t\t\tlet sAnimation = this._sAnimation;\n\t\t\t\tlet eAnimation = this._eAnimation;\n\n\t\t\t\tif (start > end) {\n\t\t\t\t\t[start, end] = [end, start];\n\t\t\t\t}\n\n\t\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\t\tif (start < - maxDeviation) {\n\t\t\t\t\tstart = -maxDeviation;\n\t\t\t\t}\n\n\t\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\t}\n\n\t\t\t\tlet maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n\t\t\t\tlet maxZoomFactorReal = maxZoomFactor;\n\n\t\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t\t}\n\n\t\t\t\tif (!priority) {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\n\t\t\t\tif (end === 1 && start !== 0) {\n\t\t\t\t\tif (start < this.get(\"start\", 0)) {\n\t\t\t\t\t\tpriority = \"start\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpriority = \"end\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (start === 0 && end !== 1) {\n\t\t\t\t\tif (end > this.get(\"end\", 1)) {\n\t\t\t\t\t\tpriority = \"end\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpriority = \"start\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet minZoomCount = this.get(\"minZoomCount\", 0);\n\t\t\t\tconst dataItems = this.dataItems;\n\n\t\t\t\tif (dataItems && dataItems.length < minZoomCount) {\n\t\t\t\t\tminZoomCount = dataItems.length;\n\t\t\t\t}\n\n\t\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\", Infinity);\n\n\t\t\t\tif ($type.isNumber(minZoomCount)) {\n\t\t\t\t\tmaxZoomFactor = maxZoomFactorReal / minZoomCount;\n\t\t\t\t}\n\n\t\t\t\tlet minZoomFactor: number = 1;\n\n\t\t\t\tif ($type.isNumber(maxZoomCount)) {\n\t\t\t\t\tminZoomFactor = maxZoomFactorReal / maxZoomCount;\n\t\t\t\t}\n\n\t\t\t\t// need one more\n\t\t\t\tif (start > end) {\n\t\t\t\t\t[start, end] = [end, start];\n\t\t\t\t}\n\n\t\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\n\t\t\t\tif (priority === \"start\") {\n\t\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t\t// add to the end\n\t\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\t\tend = start + 1 / minZoomFactor;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t\t//unless end is > 0\n\t\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t\t//end = 1;\n\t\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// most likely we are dragging right, so we modify left\n\t\t\t\telse {\n\t\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t\t// add to the end\n\t\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// remove from start\n\t\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t\t//start = 0;\n\t\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\n\t\t\t\tif (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\n\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\tchart._handleAxisSelection(this, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (duration > 0) {\n\t\t\t\t\tlet easing = this.get(\"interpolationEasing\");\n\t\t\t\t\tlet sAnimation, eAnimation;\n\t\t\t\t\tif (this.get(\"start\") != start) {\n\t\t\t\t\t\tsAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\n\t\t\t\t\t}\n\t\t\t\t\tif (this.get(\"end\") != end) {\n\t\t\t\t\t\teAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._sAnimation = sAnimation;\n\t\t\t\t\tthis._eAnimation = eAnimation;\n\n\t\t\t\t\tif (sAnimation) {\n\t\t\t\t\t\treturn sAnimation;\n\t\t\t\t\t}\n\t\t\t\t\telse if (eAnimation) {\n\t\t\t\t\t\treturn eAnimation;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.set(\"start\", start);\n\t\t\t\t\tthis.set(\"end\", end);\n\t\t\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\t\t\tthis.markDirtyKey(\"start\");\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._sAnimation) {\n\t\t\t\t\tthis._sAnimation.stop();\n\t\t\t\t}\n\t\t\t\tif (this._eAnimation) {\n\t\t\t\t\tthis._eAnimation.stop();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A list of series using this axis.\n\t *\n\t * @return Series\n\t */\n\tpublic get series(): Array<this[\"_seriesType\"]> {\n\t\treturn this._series;\n\t}\n\n\n\tpublic _processAxisRange(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTags: Array<string>) {\n\t\tdataItem.setRaw(\"isRange\", true);\n\t\tthis._createAssets(dataItem, themeTags);\n\t\tthis._rangesDirty = true;\n\t\tthis._prepareDataItem(dataItem);\n\n\t\tconst above = dataItem.get(\"above\");\n\t\tconst container = this.topGridContainer;\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (above && grid) {\n\t\t\tcontainer.children.moveValue(grid);\n\t\t}\n\n\t\tconst fill = dataItem.get(\"axisFill\");\n\t\tif (above && fill) {\n\t\t\tcontainer.children.moveValue(fill);\n\t\t}\n\t}\n\n\tpublic _prepareDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>, _index?: number) { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getX(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getY(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number, exactLocation?: boolean): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number, exactLocation?: boolean): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t}\n\n\tpublic _calculateTotals() {\n\t}\n\n\tprotected _updateAxisRanges() {\n\t\tthis._bullets = {};\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\n\t\t$array.each(this._seriesAxisRanges, (axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract baseValue(): any;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (ghostLabel) {\n\t\t\tif (this.get(\"fixAxisSize\")) {\n\t\t\t\tghostLabel.set(\"visible\", true);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tghostLabel.set(\"visible\", false);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart._updateCursor();\n\t\t\t}\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < -maxDeviation) {\n\t\t\t\tlet delta = start + maxDeviation;\n\t\t\t\tstart = -maxDeviation;\n\t\t\t\tthis.setRaw(\"start\", start);\n\t\t\t\tif (this.isDirty(\"end\")) {\n\t\t\t\t\tthis.setRaw(\"end\", end - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tlet delta = end - 1 - maxDeviation;\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\tthis.setRaw(\"end\", end);\n\n\t\t\t\tif (this.isDirty(\"start\")) {\n\t\t\t\t\tthis.setRaw(\"start\", start - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\trenderer._start = this.get(\"start\")!;\n\t\trenderer._end = this.get(\"end\")!;\n\t\trenderer._inversed = renderer.get(\"inversed\", false);\n\t\trenderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\t\trenderer._updateLC();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst tooltip = this.get(\"tooltip\");\n\t\t\tif (tooltip) {\n\t\t\t\tconst rendererTags = renderer.get(\"themeTags\");\n\t\t\t\ttooltip.addTag(\"axis\");\n\t\t\t\ttooltip.addTag(this.className.toLowerCase());\n\t\t\t\ttooltip._applyThemes();\n\n\t\t\t\tif (rendererTags) {\n\t\t\t\t\ttooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\t\t\t\t\ttooltip.label._applyThemes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateTooltipBounds() {\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tif (tooltip) {\n\t\t\tthis.get(\"renderer\").updateTooltipBounds(tooltip);\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tsuper._updateBounds();\n\t\tthis._updateTooltipBounds();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processChart(chart: XYChart) {\n\t\tthis.chart = chart;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\trenderer.chart = chart;\n\t\tchart.gridContainer.children.push(this.gridContainer);\n\t\tchart.topGridContainer.children.push(this.topGridContainer);\n\n\t\tchart.axisHeadersContainer.children.push(this.axisHeader);\n\n\t\tthis.on(\"start\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\t\tthis.on(\"end\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\n\t\tchart.plotContainer.onPrivate(\"width\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\t\tchart.plotContainer.onPrivate(\"height\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\n\t\tchart.processAxis(this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hideDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleFHDataItem(dataItem, true);\n\t\treturn super.hideDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic showDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleFHDataItem(dataItem, false);\n\t\treturn super.showDataItem(dataItem);\n\t}\n\n\tpublic _toggleFHDataItem(dataItem: DataItem<IAxisDataItem>, forceHidden: boolean) {\n\t\tconst fh = \"forceHidden\";\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.set(fh, forceHidden);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.set(fh, forceHidden);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.set(fh, forceHidden);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.set(fh, forceHidden);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.set(fh, forceHidden);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _toggleDataItem(dataItem: DataItem<IAxisDataItem>, visible: boolean) {\n\t\tconst label = dataItem.get(\"label\");\n\t\tconst v = \"visible\";\n\t\tif (label) {\n\t\t\tlabel.setPrivate(v, visible);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.setPrivate(v, visible);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.setPrivate(v, visible);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.setPrivate(v, visible);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setPrivate(v, visible);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract basePosition(): number;\n\n\tpublic _createAssets(dataItem: DataItem<this[\"_dataItemSettings\"]>, tags: Array<string>, minor?: boolean) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tlet m = \"minor\";\n\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (!label) {\n\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t}\n\t\telse {\n\t\t\tlet themeTags = label.get(\"themeTags\");\n\t\t\tlet remove = false;\n\t\t\tif (minor) {\n\t\t\t\tif (themeTags?.indexOf(m) == -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (themeTags?.indexOf(m) != -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (remove) {\n\t\t\t\tlabel.parent?.children.removeValue(label);\n\t\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t\t\tlabel.dispose();\n\t\t\t\trenderer.labels.removeValue(label);\n\t\t\t}\n\t\t}\n\n\t\tconst grid = dataItem.get(\"grid\");\n\n\t\tif (!grid) {\n\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t}\n\t\telse {\n\t\t\tlet themeTags = grid.get(\"themeTags\");\n\t\t\tlet remove = false;\n\t\t\tif (minor) {\n\t\t\t\tif (themeTags?.indexOf(m) == -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (themeTags?.indexOf(m) != -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (remove) {\n\t\t\t\tgrid.parent?.children.removeValue(grid);\n\t\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t\t\tgrid.dispose();\n\t\t\t\trenderer.grid.removeValue(grid);\n\t\t\t}\n\t\t}\n\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (!tick) {\n\t\t\trenderer.makeTick(dataItem, tags);\n\t\t}\n\t\telse {\n\t\t\tlet remove = false;\n\t\t\tlet themeTags = tick.get(\"themeTags\");\n\t\t\tif (minor) {\n\t\t\t\tif (themeTags?.indexOf(m) == -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (themeTags?.indexOf(m) != -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (remove) {\n\t\t\t\ttick.parent?.children.removeValue(tick);\n\t\t\t\trenderer.makeTick(dataItem, tags);\n\t\t\t\ttick.dispose();\n\t\t\t\trenderer.ticks.removeValue(tick);\n\t\t\t}\n\t\t}\n\n\t\tif (!minor && !dataItem.get(\"axisFill\")) {\n\t\t\trenderer.makeAxisFill(dataItem, tags);\n\t\t}\n\t\telse if (minor && !dataItem.get(\"axisFill\") && this.get(\"minorAxisFillsEnabled\")) {\n\t\t\trenderer.makeAxisFill(dataItem, tags);\n\t\t}\n\n\t\tthis._processBullet(dataItem);\n\t}\n\n\tprotected _processBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet bullet = dataItem.get(\"bullet\");\n\t\tlet axisBullet = this.get(\"bullet\");\n\n\t\tif (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n\t\t\tbullet = axisBullet(this._root, this, dataItem);\n\t\t}\n\n\t\tif (bullet) {\n\t\t\tbullet.axis = this;\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tdataItem.setRaw(\"bullet\", bullet);\n\t\t\t\tif (!sprite.parent) {\n\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart._updateChartLayout();\n\t\t\tchart.axisHeadersContainer.markDirtySize();\n\t\t}\n\n\t\tthis.get(\"renderer\")._updatePositions();\n\n\t\tthis._seriesAdded = false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\trenderer.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\trenderer.ticks.removeValue(tick);\n\t\t\ttick.dispose();\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\trenderer.grid.removeValue(grid);\n\t\t\tgrid.dispose();\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\trenderer.axisFills.removeValue(axisFill);\n\t\t\taxisFill.dispose();\n\t\t}\n\t\tconst bullet = dataItem.get(\"bullet\");\n\n\t\tif (bullet) {\n\t\t\tbullet.dispose();\n\t\t}\n\t}\n\n\tprotected _updateGhost() {\n\t\tthis.setPrivate(\"cellWidth\", this.getCellWidthPosition() * this.get(\"renderer\").axisLength());\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (ghostLabel) {\n\t\t\tif (!ghostLabel.isHidden()) {\n\t\t\t\tconst bounds = ghostLabel.localBounds();\n\t\t\t\tconst gWidth = Math.ceil(bounds.right - bounds.left);\n\t\t\t\tlet text = ghostLabel.get(\"text\");\n\t\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\t\tif (label && !label.isHidden()) {\n\t\t\t\t\t\tconst bounds = label.localBounds();\n\t\t\t\t\t\tconst w = Math.ceil(bounds.right - bounds.left);\n\n\t\t\t\t\t\tif (w > gWidth) {\n\t\t\t\t\t\t\ttext = label.text._getText();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tghostLabel.set(\"text\", text);\n\t\t\t}\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\t\t\tthis.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition(position: number, snapToSeries?: Array<XYSeries>) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tposition = renderer.toAxisPosition(position);\n\n\t\tthis._cursorPosition = position;\n\t\tthis._snapToSeries = snapToSeries;\n\n\t\tthis.updateTooltip();\n\t}\n\n\t/**\n\t * Can be called when axis zoom changes and you need to update tooltip\n\t * position.\n\t */\n\tpublic updateTooltip() {\n\t\tconst snapToSeries = this._snapToSeries;\n\t\tlet position = this._cursorPosition;\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif ($type.isNumber(position)) {\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tconst dataItem = this.getSeriesItem(series, position!, this.get(\"tooltipLocation\"));\n\n\t\t\t\t\tif (snapToSeries && snapToSeries.indexOf(series) != -1) {\n\t\t\t\t\t\tseries.updateLegendMarker(dataItem);\n\t\t\t\t\t\tseries.updateLegendValue(dataItem);\n\t\t\t\t\t\tseries._settings.tooltipDataItem = dataItem;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.showDataItemTooltip(dataItem);\n\t\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", dataItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (this.get(\"snapTooltip\")) {\n\t\t\t\tposition = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n\t\t\t}\n\n\t\t\tthis.setPrivateRaw(\"tooltipPosition\", position);\n\n\t\t\tif (tooltip) {\n\t\t\t\trenderer.updateTooltipBounds(tooltip);\n\n\t\t\t\tif (!$type.isNaN(position)) {\n\t\t\t\t\tthis._updateTooltipText(tooltip, position);\n\t\t\t\t\trenderer.positionTooltip(tooltip, position);\n\n\t\t\t\t\tif (position < this.get(\"start\", 0) || position > this.get(\"end\", 1)) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position        Position\n\t * @param   adjustPosition  Adjust position\n\t * @return                  Tooltip text\n\t */\n\tpublic abstract getTooltipText(position: number, adjustPosition?: boolean): string | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, _location: number): number {\n\t\treturn position;\n\t}\n\n\tpublic _handleSeriesRemoved() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorShow() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(_dataItem: DataItem<IXYSeriesDataItem>, _fields: Array<string>) {\n\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._rangesDirty = false;\n\t}\n\n\t/**\n\t * Converts pixel coordinate to a relative position on axis.\n\t *\n\t * @param   coordinate  Coordinate\n\t * @return              Relative position\n\t */\n\tpublic coordinateToPosition(coordinate: number): number {\n\t\tconst renderer = this.get(\"renderer\");\n\t\treturn renderer.toAxisPosition(coordinate / renderer.axisLength());\n\t}\n\n\t/**\n\t * Converts relative position of the plot area to relative position of the\n\t * axis with zoom taken into account.\n\t *\n\t * @param position Position\n\t * @return Relative position\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toAxisPosition(position);\n\t}\n\n\t/**\n\t * Converts relative position of the axis to a global position taking current\n\t * zoom into account (opposite to what `toAxisPosition` does).\n\t *\n\t * @since 5.4.2\n\t * @param position Position\n\t * @return Global position\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toGlobalPosition(position);\n\t}\n\n\t/**\n\t * Adjusts position with inversed taken into account.\n\t *\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number): number {\n\t\treturn this.get(\"renderer\").fixPosition(position);\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic abstract getSeriesItem(series: XYSeries, position: number, location?: number): DataItem<IXYSeriesDataItem> | undefined\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(_dataItem: DataItem<IXYSeriesDataItem>, _nextItem: DataItem<IXYSeriesDataItem>, _autoGapCount: number, _fieldName: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): DataItem<this[\"_dataItemSettings\"]> {\n\t\treturn this.axisRanges.push(axisDataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _groupSeriesData(_series: XYSeries) { }\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn 0.05;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract nextPosition(_count?: number): number\n}\n","import type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Axis } from \"./Axis\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\n\nimport { Entity, IEntitySettings, IEntityPrivate } from \"../../../core/util/Entity\";\n\nimport * as $object from \"../../../core/util/Object\";\n\nexport interface IAxisBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Relative location of the bullet within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n\n\t/**\n\t * Indicates if the bullet should be stacked on top of another bullet if it's\n\t * on the same position.\n\t *\n\t * Will work on horizontal or vertical axes only.\n\t *\n\t * @since 5.2.28\n\t * @default false\n\t */\n\tstacked?: boolean;\n\n}\n\nexport interface IAxisBulletPrivate extends IEntityPrivate {\n}\n\n/**\n * Draws a bullet on an axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n */\nexport class AxisBullet extends Entity {\n\n\t/**\n\t * Target axis object.\n\t */\n\tpublic axis: Axis<AxisRenderer> | undefined;\n\n\tdeclare public _settings: IAxisBulletSettings;\n\tdeclare public _privateSettings: IAxisBulletPrivate;\n\n\tpublic static className: string = \"AxisBullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([AxisBullet.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tconst sprite = this.get(\"sprite\");\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"location\")) {\n\t\t\tconst dataItem = sprite.dataItem;\n\t\t\tif (this.axis && sprite && dataItem) {\n\t\t\t\tthis.axis._prepareDataItem(dataItem as any)\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tconst axis = this.axis;\n\t\tif (axis) {\n\t\t\t$object.each(axis._bullets, (key, bullet) => {\n\t\t\t\tif (bullet.uid == this.uid) {\n\t\t\t\t\tdelete axis._bullets[key];\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tsuper._dispose();\n\t}\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { Label, ILabelSettings, ILabelPrivate } from \"../../../core/render/Label\";\n\nexport interface IAxisLabel extends Label {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n\t_tickPoints: Array<IPoint>;\n}\n\n\nexport interface IAxisLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelPrivate extends ILabelPrivate {\n}\n\n/**\n * Draws an axis label.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n * @important\n */\nexport class AxisLabel extends Label implements IAxisLabel {\n\n\tdeclare public _settings: IAxisLabelSettings;\n\tdeclare public _privateSettings: IAxisLabelPrivate;\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([AxisLabel.className]);\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { RadialLabel, IRadialLabelSettings, IRadialLabelPrivate } from \"../../../core/render/RadialLabel\";\n\nexport interface IAxisLabelRadialSettings extends IRadialLabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelRadialPrivate extends IRadialLabelPrivate {\n}\n\n/**\n * Draws a label on a circular axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n */\nexport class AxisLabelRadial extends RadialLabel {\n\n\tdeclare public _settings: IAxisLabelRadialSettings;\n\tdeclare public _privateSettings: IAxisLabelRadialPrivate;\n\n\tpublic static className: string = \"AxisLabelRadial\";\n\tpublic static classNames: Array<string> = RadialLabel.classNames.concat([AxisLabelRadial.className]);\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n}\n","import type { Sprite, ISpritePointerEvent } from \"../../../core/render/Sprite\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\n\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\n\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Re-enable display of skipped grid lines due to lack of space and as per\n\t * the `minGridDistance` setting. Not recommended for CategoryAxis with a lot of data items.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Minor_grid} for more info\n\t * @since 5.6.0\n\t */\n\tminorGridEnabled?: boolean;\n\n\t/**\n\t * Enable labels on minor grid. If you enable labels, grid will be enabled automatically.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Enabling_minor_grid_labels} for more info\n\t * @since 5.6.0\n\t */\n\tminorLabelsEnabled?: boolean;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n\t/**\n\t * If set to `\"zoom\"` will enable axis zoom by panning it in the axis label\n\t * area.\n\t *\n\t * Works on [[AxisRendererX]] and [[AxisRendererY]] only.\n\t *\n\t * For a better result, set `maxDeviation` to `1` or so on the Axis.\n\t *\n\t * Will not work if `inside` is set to `true`.\n\t *\n\t * @since 5.0.7\n\t * @default \"none\"\n\t */\n\tpan?: \"none\" | \"zoom\"\n\n\n\t/**\n\t * Sensitivity of panning. The higher the number, the more sensitive it is.\n\t *\n\t * @default 1\n\t */\n\tpanSensitivity?: number;\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\t/**\n\t * @ignore\n\t */\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\tprotected _thumbDownPoint?: IPoint;\n\n\tprotected _downStart?: number;\n\tprotected _downEnd?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisTick {\n\t\tconst tick = this.ticks.make();\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\ttick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.push(tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t));\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst grid = this.grid.make();\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tgrid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t));\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst axisFill = this.axisFills.make();\n\t\taxisFill._setDataItem(dataItem);\n\t\taxisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(axisFill);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t));\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t));\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\n\t/**\n\t * A thumb Graphics to be used for panning the axis (the one which shows under the labels when hovered)\n\t */\n\tpublic readonly thumb?: Graphics;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\n\t\tconst thumb = this.thumb;\n\t\tif (thumb) {\n\t\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\n\t\t\t\tthis._handleThumbDown(event);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\n\t\t\t\tthis._handleThumbUp(event);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\n\t\t\t\tthis._handleThumbMove(event);\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\t\tif (this.isDirty(\"minGridDistance\")) {\n\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\tthis.axis.markDirtySize();\n\t\t\t})\n\t\t}\n\t}\n\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pan\")) {\n\t\t\tconst thumb = this.thumb;\n\t\t\tif (thumb) {\n\t\t\t\tconst labelsContainer = this.axis.labelsContainer;\n\t\t\t\tconst pan = this.get(\"pan\");\n\t\t\t\tif (pan == \"zoom\") {\n\t\t\t\t\tlabelsContainer.children.push(thumb);\n\t\t\t\t}\n\t\t\t\telse if (pan == \"none\") {\n\t\t\t\t\tlabelsContainer.children.removeValue(thumb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleThumbDown(event: ISpritePointerEvent) {\n\t\tthis._thumbDownPoint = this.toLocal(event.point);\n\t\tconst axis = this.axis;\n\t\tthis._downStart = axis.get(\"start\");\n\t\tthis._downEnd = axis.get(\"end\");\n\t}\n\n\tprotected _handleThumbUp(_event: ISpritePointerEvent) {\n\t\tthis._thumbDownPoint = undefined;\n\t}\n\n\tprotected _handleThumbMove(event: ISpritePointerEvent) {\n\t\tconst downPoint = this._thumbDownPoint;\n\t\tif (downPoint) {\n\t\t\tconst point = this.toLocal(event.point);\n\n\t\t\tconst downStart = this._downStart!;\n\t\t\tconst downEnd = this._downEnd!;\n\t\t\tconst extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2 * this.get(\"panSensitivity\", 1);\n\t\t\tthis.axis.zoom(downStart - extra, downEnd + extra, 0);\n\t\t}\n\t}\n\n\tprotected _getPan(_point1: IPoint, _point2: IPoint): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start);\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\tif (!chart.inPlot(point)) {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { AxisBullet } from \"./AxisBullet\";\n\nimport { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IAxisRendererXSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererXPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render horizontal axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererX extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererX\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererX.className]);\n\n\tdeclare public _settings: IAxisRendererXSettings;\n\tdeclare public _privateSettings: IAxisRendererXPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { width: p100, isMeasured: false, themeTags: [\"axis\", \"x\", \"thumb\", \"zoomgrip\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"X\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"height\", p100);\n\t\tgridTemplate.set(\"width\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, graphics.height());\n\t\t});\n\n\t\tthis.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\tconst ghostLabel = axis.ghostLabel;\n\t\tif (ghostLabel) {\n\t\t\tghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\t\t\tghostLabel.set(\"x\", -1000);\n\t\t}\n\n\t\tconst opposite = \"opposite\"\n\t\tconst inside = \"inside\";\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.topAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this);\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.bottomAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel?._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tthis.thumb.setPrivate(\"height\", axis.labelsContainer.height());\n\t}\n\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point2.x - point1.x) / this.width();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start) * this._lc\n\n\t\tposition += this._ls;\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst w = parent.innerWidth();\n\t\t\tthis._lc = this.axisLength() / w;\n\t\t\tthis._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\tconst x = axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent!.get(\"paddingLeft\", 0);\n\t\taxis.gridContainer.set(\"x\", x);\n\t\taxis.topGridContainer.set(\"x\", x);\n\t\taxis.bulletsContainer.set(\"y\", this.y());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet width = axis.get(\"marginLeft\", 0);\n\n\t\t\tlet x = axis.x() - width;\n\n\t\t\tconst parent = axis.parent;\n\t\t\tif (parent) {\n\t\t\t\tx -= parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\twidth = axis.axisHeader.width();\n\t\t\t\taxis.set(\"marginLeft\", width + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"width\", width);\n\t\t\t}\n\t\t\taxisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"width\") == null) {\n\t\t\taxis.set(\"width\", p100);\n\t\t};\n\t\tconst verticalLayout = this._root.verticalLayout;\n\t\taxis.set(\"layout\", verticalLayout);\n\t\taxis.labelsContainer.set(\"width\", p100);\n\t\taxis.axisHeader.setAll({ layout: verticalLayout });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.width();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"y\", p100);\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttick.set(\"y\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, length);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tif (opposite) {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t\tlabel.set(\"y\", p100);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"y\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"x\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = -1;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\td = 1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"y\", previousSprite.y() + previousSprite.height() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"y\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\t\t\t\tsprite.set(\"x\", this.positionToCoordinate(position));\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet x0 = this.positionToCoordinate(position);\n\t\t\tlet x1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, x0, x1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, x0: number, x1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t//display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst h = this.axis!.gridContainer.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x1 < x0) {\n\t\t\t\t[x1, x0] = [x0, x1];\n\t\t\t}\n\t\t\tif (x0 > w || x1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n\t\t\tconst limit = 10000;\n\n\t\t\tx0 = Math.max(-limit, x0);\n\t\t\tx1 = Math.min(limit, x1);\n\t\t\t*/\n\n\t\t\tdisplay.moveTo(x0, 0);\n\t\t\tdisplay.lineTo(x1, 0);\n\t\t\tdisplay.lineTo(x1, h);\n\t\t\tdisplay.lineTo(x0, h);\n\t\t\tdisplay.lineTo(x0, 0);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 })\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet x = global.x;\n\t\tlet y = 0;\n\t\tlet w = this.axisLength();\n\t\tlet h = num;\n\n\t\tlet pointerOrientation: \"up\" | \"down\" = \"up\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\n\nimport { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IAxisRendererYSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererYPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render vertical axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererY extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererY\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererY.className]);\n\n\tdeclare public _settings: IAxisRendererYSettings;\n\tdeclare public _privateSettings: IAxisRendererYPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tprotected _downY?: number;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\", \"zoomgrip\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\n\t\tif (this._settings.opposite) {\n\t\t\tthis._settings.themeTags.push(\"opposite\");\n\t\t}\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"Y\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"width\", p100);\n\t\tgridTemplate.set(\"height\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\n\t\tthis.set(\"draw\", (display, renderer) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, renderer.height());\n\t\t});\n\t}\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point1.y - point2.y) / this.height();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\tconst ghostLabel = axis.ghostLabel;\n\t\tif (ghostLabel) {\n\t\t\tghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\t\t\tghostLabel.set(\"y\", -1000);\n\t\t}\n\n\t\tconst thumb = this.thumb;\n\t\tconst opposite = \"opposite\";\n\t\tconst inside = \"inside\";\n\t\tconst chart = this.chart;\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.rightAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis, 0);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.leftAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel?._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tconst w = axis.labelsContainer.width();\n\n\t\tif (chart) {\n\t\t\tif (this.get(opposite)) {\n\t\t\t\tthumb.set(\"centerX\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthumb.set(\"centerX\", w);\n\t\t\t}\n\t\t}\n\n\t\tthumb.setPrivate(\"width\", w);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"height\") == null) {\n\t\t\taxis.set(\"height\", p100);\n\t\t}\n\t\tconst horizontalLayout = this._root.horizontalLayout;\n\t\taxis.set(\"layout\", horizontalLayout);\n\t\taxis.labelsContainer.set(\"height\", p100);\n\t\taxis.axisHeader.set(\"layout\", horizontalLayout);\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\tconst y = axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height());\n\t\taxis.gridContainer.set(\"y\", y);\n\t\taxis.topGridContainer.set(\"y\", y);\n\t\taxis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet height = axis.get(\"marginTop\", 0);\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\theight = axis.axisHeader.height();\n\t\t\t\taxis.set(\"marginTop\", height + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"height\", height);\n\t\t\t}\n\t\t\taxisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.innerHeight();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (opposite) {\n\t\t\t\tlabel.set(\"x\", 0);\n\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"x\", 0);\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"x\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"x\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(length, 0);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = 1;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\td = -1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"x\", previousSprite.x() + previousSprite.width() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"x\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\n\n\t\t\t\tsprite.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet y0 = this.positionToCoordinate(position);\n\t\t\tlet y1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, y0, y1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, y0: number, y1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst w = this.axis!.gridContainer.width();\n\t\t\tconst h = this.height();\n\n\t\t\tif (y1 < y0) {\n\t\t\t\t[y1, y0] = [y0, y1];\n\t\t\t}\n\n\t\t\tif (y0 > h || y1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//y0 = Math.max(0, y0);\n\t\t\t//y1 = Math.min(h, y1);\n\n\t\t\tdisplay.moveTo(0, y0);\n\t\t\tdisplay.lineTo(w, y0);\n\t\t\tdisplay.lineTo(w, y1);\n\t\t\tdisplay.lineTo(0, y1);\n\t\t\tdisplay.lineTo(0, y0);\n\t\t})\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (!this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet y = global.y;\n\t\tlet x = 0;\n\t\tlet h = this.axisLength();\n\t\tlet w = num;\n\n\t\tlet pointerOrientation: \"left\" | \"right\" = \"right\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst h = parent.innerHeight();\n\t\t\tthis._lc = this.axisLength() / h;\n\t\t\tthis._ls = axis.y() / h;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start) * this._lc\n\n\t\tposition += this._ls;\n\n\t\treturn position;\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (!this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { Tick, ITickSettings, ITickPrivate } from \"../../../core/render/Tick\";\n\n\nexport interface IAxisTickSettings extends ITickSettings {\n\n\t/**\n\t * Relative location of the tick within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the tick within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the tick will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that tick will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that tick will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t * @default 1\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisTickPrivate extends ITickPrivate {\n}\n\n/**\n * Draws an axis tick.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\n * @important\n */\nexport class AxisTick extends Tick {\n\n\tdeclare public _settings: IAxisTickSettings;\n\tdeclare public _privateSettings: IAxisTickPrivate;\n\n\tprotected _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisTick\";\n\tpublic static classNames: Array<string> = Tick.classNames.concat([AxisTick.className]);\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\n\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport { ValueAxis } from \"./ValueAxis\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * A key to look up in data for an id of the data item.\n\t */\n\tidField?: string;\n\n\t/**\n\t * A key to look up in data for a relative size value of the data item. \n\t */\n\tcellSizeField?: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n\t/**\n\t * A size of the category cell.\n\t *\n\t * NOTE: This value is used only if `cellSizeField` is set on the series.\n\t */\n\tcellSize?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tfinalCellSize?: number;\n\n\t/**\n\t * A unique id of the data item.\n\t */\n\tid?: string;\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\", \"id\", \"cellSize\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _afterDataChange(): void {\n\t\tsuper._afterDataChange();\n\t\tconst len = this.dataItems.length;\n\t\tif (len > 0) {\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\t// fix final indexes\t\t\n\t\tthis.setPrivateRaw(\"startIndex\", Math.min(this.getPrivate(\"startIndex\", 0), len));\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(this.getPrivate(\"endIndex\", len), 1));\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\tthis._itemMap = {};\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tlet start = this.get(\"start\", 0);\n\t\tlet end = this.get(\"end\", 1);\n\t\t\n\t\tlet indices = this._getIndices(start, end);\n\n\t\tthis.setPrivateRaw(\"startIndex\", indices.startIndex);\n\t\tthis.setPrivateRaw(\"endIndex\", indices.endIndex);\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic adjustZoom(): void {\n\t\tconst len = this.dataItems.length;\n\t\tif (len > 1) {\n\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\", this.dataItems.length);\n\t\t\tlet minZoomCount = this.get(\"minZoomCount\", 1);\n\n\t\t\tlet count = 0;\n\t\t\tlet startIndex = this.getPrivate(\"startIndex\", 0);\n\t\t\tlet endIndex = this.getPrivate(\"endIndex\", 0);\n\n\t\t\tconst sAnimation = this._sAnimation;\n\t\t\tconst eAnimation = this._eAnimation;\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet getIndices = false;\n\t\t\tif (sAnimation && !sAnimation.stopped) {\n\t\t\t\tstart = Number(sAnimation.to);\n\t\t\t\tgetIndices = true;\n\t\t\t}\n\t\t\tlet end = this.get(\"end\", 1);\n\t\t\tif (eAnimation && !eAnimation.stopped) {\n\t\t\t\tend = Number(eAnimation.to);\n\t\t\t\tgetIndices = true;\n\t\t\t}\n\n\t\t\tif (getIndices) {\n\t\t\t\tconst indices = this._getIndices(start, end);\n\t\t\t\tstartIndex = indices.startIndex;\n\t\t\t\tendIndex = indices.endIndex;\n\t\t\t}\n\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tconst dataItem = this.dataItems[i];\n\t\t\t\tcount += dataItem.get(\"finalCellSize\", 1);\n\t\t\t};\n\n\t\t\tif (count <= minZoomCount) {\n\t\t\t\t// need to zoom out\n\t\t\t\tlet c = 0;\n\n\t\t\t\tfor (let i = startIndex; i < len; i++) {\n\t\t\t\t\tconst dataItem = this.dataItems[i];\n\t\t\t\t\tc += dataItem.get(\"finalCellSize\", 1);\n\n\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\tif (c >= minZoomCount) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (c < minZoomCount) {\n\t\t\t\t\t// still not enough, try to extend at the start\n\t\t\t\t\tfor (let i = startIndex - 1; i >= 0; i--) {\n\t\t\t\t\t\tconst dataItem = this.dataItems[i];\n\t\t\t\t\t\tc += dataItem.get(\"finalCellSize\", 1);\n\t\t\t\t\t\tstartIndex = i;\n\t\t\t\t\t\tif (c >= minZoomCount) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.zoomToIndexes(startIndex, endIndex);\n\t\t\t}\n\t\t\telse if (count >= maxZoomCount) {\n\t\t\t\tlet c = count;\n\t\t\t\tfor (let i = endIndex - 1; i >= startIndex; i--) {\n\t\t\t\t\tconst dataItem = this.dataItems[i];\n\t\t\t\t\tc -= dataItem.get(\"finalCellSize\", 1);\n\t\t\t\t\tif (c <= maxZoomCount) {\n\t\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.zoomToIndexes(startIndex, endIndex);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\")!;\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\")!;\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis instanceof ValueAxis) {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfunction findDataItem(\n\t\t\t\t\t\t\tseries: XYSeries,\n\t\t\t\t\t\t\tcategoryAxis: CategoryAxis<any>,\n\t\t\t\t\t\t\tkey: string | undefined,\n\t\t\t\t\t\t\topenKey: string | undefined,\n\t\t\t\t\t\t\tcategory: string,\n\t\t\t\t\t\t\tdirection: \"previous\" | \"next\"\n\t\t\t\t\t\t): DataItem<IXYSeriesDataItem> | undefined {\n\t\t\t\t\t\t\tlet dataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\t\tlet idx = categoryAxis.categoryToIndex(category!);\n\n\t\t\t\t\t\t\twhile (!dataItem && idx >= 0 && idx < categoryAxis.dataItems.length) {\n\t\t\t\t\t\t\t\tlet searchCategory = categoryAxis.dataItems[idx].get(\"category\");\n\t\t\t\t\t\t\t\tif (direction == \"previous\") {\n\t\t\t\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\t\t\t\tlet item = series.dataItems[i];\n\t\t\t\t\t\t\t\t\t\tif (key && item.get(key as any) === searchCategory) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem = item;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (openKey && item.get(openKey as any) === searchCategory) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem = item;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\t\t\t\tlet item = series.dataItems[i];\n\t\t\t\t\t\t\t\t\t\tif (key && item.get(key as any) === searchCategory) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem = item;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (openKey && item.get(openKey as any) === searchCategory) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem = item;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (!dataItem) {\n\t\t\t\t\t\t\t\t\tidx += direction === \"previous\" ? -1 : 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn dataItem;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstartDataItem = findDataItem(series, this, key, openKey, startCategory, \"next\");\n\t\t\t\t\t\tendDataItem = findDataItem(series, this, key, openKey, endCategory, \"previous\");\n\n\t\t\t\t\t\tlet startIndex = 0;\n\t\t\t\t\t\tlet endIndex = series.dataItems.length;\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tstartIndex = series.dataItems.indexOf(startDataItem);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tendIndex = series.dataItems.indexOf(endDataItem) + 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\n\t\t\t\t\t\tlet hasValue = false;\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\n\t\t\t\t\t\t\t$array.each(series.__valueXShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(series.__valueYShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\tif (hasValue) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tseries.setPrivate(\"outOfSelection\", !hasValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\n\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1);\n\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\tlet count = frequency;\n\t\t\tif (minorGridEnabled) {\n\t\t\t\tcount = 1;\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, count);\n\n\t\t\tf++;\n\t\t}\n\n\t\tif (renderer.get(\"minorGridEnabled\")) {\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tif (i % frequency != 0) {\n\t\t\t\t\tthis._createAssets(dataItem, [\"minor\"], true);\n\t\t\t\t\tthis._toggleDataItem(dataItem, true);\n\t\t\t\t\tthis._prepareDataItem(dataItem, 0, 1);\n\n\t\t\t\t\tif (!minorLabelsEnabled) {\n\t\t\t\t\t\tdataItem.get(\"label\")?.setPrivate(\"visible\", false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\n\t\t\tif (!$type.isNumber(index)) {\n\t\t\t\tthis._toggleDataItem(dataItem, false);\n\t\t\t\treturn;\t\t\t\t\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number, final?: boolean): number {\n\t\tlet len = this.dataItems.length;\n\t\tlet position = 0;\n\n\t\tif (len == 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (index >= len) {\n\t\t\tindex = len - 1;\n\t\t\tlocation = 1;\n\t\t}\n\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tif (!this.get(\"cellSizeField\")) {\n\t\t\tlen -= startLocation;\n\t\t\tlen -= (1 - endLocation);\n\n\t\t\tposition = (index + location - startLocation) / len;\n\t\t}\n\t\telse {\n\t\t\tlet name: \"finalCellSize\" | \"cellSize\" = final ? \"finalCellSize\" : \"cellSize\";\n\n\t\t\tconst dataItems = this.dataItems;\n\n\t\t\t// Calculate total modified count (sum of cell sizes)\n\t\t\tlet modCount = 0;\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tmodCount += dataItem.get(name, 1);\n\t\t\t});\n\n\t\t\tmodCount -= startLocation * dataItems[0].get(name, 1);\n\t\t\tmodCount -= (1 - endLocation) * dataItems[dataItems.length - 1].get(name, 1);\n\n\t\t\t// Calculate the position based on cell sizes\n\t\t\tlet acc = 0;\n\t\t\tfor (let i = 0; i < index; i++) {\n\t\t\t\tacc += dataItems[i].get(name, 1);\n\t\t\t}\n\t\t\tlet cellSizeAtIndex = dataItems[index].get(name, 1);\n\n\t\t\tposition = (acc + location * cellSizeAtIndex - startLocation * dataItems[0].get(name, 1)) / modCount;\n\t\t}\n\n\t\tif (!final) {\n\t\t\tlet dataItem = this.dataItems[index];\n\t\t\tif (dataItem) {\n\t\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t\t}\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns a position of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Position\n\t */\n\tpublic categoryToPosition(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tposition += (0.5 - location) / this.dataItems.length;\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\tif (len === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Calculate total modified length (sum of cell sizes)\n\t\tif (this.get(\"cellSizeField\")) {\n\t\t\tlet modifiedLen = 0;\n\t\t\tlet cellSizes: number[] = [];\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst cellSize = dataItem.get(\"cellSize\", 1);\n\t\t\t\tcellSizes.push(cellSize);\n\t\t\t\tmodifiedLen += cellSize;\n\t\t\t});\n\t\t\t// Adjust for startLocation and endLocation\n\t\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\t\tlet endLocation = this.get(\"endLocation\", 1);\n\t\t\tmodifiedLen -= startLocation;\n\t\t\tmodifiedLen -= (1 - endLocation);\n\n\t\t\t// Find which cell the position falls into\n\t\t\tlet rel = position * modifiedLen + startLocation;\n\t\t\tlet acc = 0;\n\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\tconst cellSize = cellSizes[i];\n\t\t\t\tif (rel < acc + cellSize) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t\tacc += cellSize;\n\t\t\t}\n\t\t\treturn len - 1;\n\t\t}\n\t\telse {\n\t\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);\n\t\t}\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif (label) {\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _getIndices(start: number, end: number): { startIndex: number, endIndex: number } {\n\t\tlet len = this.dataItems.length;\n\t\tlet startIndex = 0;\n\t\tlet endIndex = len;\n\t\tlet name: \"cellSize\" | \"finalCellSize\" = \"cellSize\";\n\n\t\tif (this.get(\"cellSizeField\")) {\n\t\t\tlet count = 0;\n\t\t\tconst dataItems = this.dataItems;\n\t\t\tif(dataItems.length == 0){\n\t\t\t\treturn { startIndex: 0, endIndex: 0 };\n\t\t\t}\n\n\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\tcount += dataItem.get(name, 1);\n\t\t\t});\n\n\t\t\tcount -= this.get(\"startLocation\", 0) * dataItems[0].get(name, 1);\n\t\t\tcount -= (1 - this.get(\"endLocation\", 1)) * dataItems[dataItems.length - 1].get(name, 1);\n\n\t\t\tlet c = 0;\n\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\tc += this.dataItems[i].get(name, 1);\n\t\t\t\tif (Math.round(c) > Math.round(start * count)) {\n\t\t\t\t\tstartIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let i = startIndex + 1; i < len; i++) {\n\t\t\t\tc += this.dataItems[i].get(name, 1);\n\t\t\t\tif (Math.round(c) >= Math.round(end * count)) {\n\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstartIndex = Math.max(startIndex, 0);\n\t\t\tendIndex = Math.min(endIndex, len);\n\t\t}\n\t\telse {\n\t\t\tstartIndex = Math.max(Math.round(this.get(\"start\", 0) * len), 0);\n\t\t\tendIndex = Math.min(Math.round(this.get(\"end\", 1) * len), len);\n\t\t}\n\n\t\treturn { startIndex, endIndex };\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tif (this.get(\"cellSizeField\")) {\n\t\t\tstart = Math.min(Math.max(start, 0), len);\n\t\t\tend = Math.max(Math.min(end, len), 1);\n\t\t\tthis.setPrivateRaw(\"startIndex\", start);\n\t\t\tthis.setPrivateRaw(\"endIndex\", end);\n\t\t\tthis.zoom(this.indexToPosition(start, 0, true), this.indexToPosition(end, 0, true), duration);\n\t\t}\n\t\telse {\n\t\t\tthis.zoom(start / len, end / len, duration);\n\t\t}\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n\n\t/**\n\t * Returns position span between start and end of a single cell in axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn this._frequency / this.dataItems.length / (this.get(\"end\", 1) - this.get(\"start\", 0));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic nextPosition(count?: number) {\n\t\tif (count == null) {\n\t\t\tcount = 1;\n\t\t}\n\n\t\tif (this.get(\"renderer\").getPrivate(\"letter\") == \"Y\") {\n\t\t\tcount *= -1;\n\t\t}\n\n\t\tconst position = this.getPrivate(\"tooltipPosition\", 0);\n\n\t\tconst index = $math.fitToRange(this.axisPositionToIndex(position) + count, 0, this.dataItems.length - 1);\n\t\treturn this.toGlobalPosition(this.indexToPosition(index));\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport type { TimeUnit } from \"../../../core/util/Time\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IMinMaxStep, IValueAxisEvents } from \"./ValueAxis\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $order from \"../../../core/util/Order\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $time from \"../../../core/util/Time\";\n\nexport interface IDateAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * IMPORTANT: `startLocation` is not supported by [[GaplessDateAxis]].\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * IMPORTANT: `endLocation` is not supported by [[GaplessDateAxis]].\n\t * \n\t * @default 1\n\t */\n\tendLocation?: number;\n\n\t/**\n\t * Should axis group data items togeter dynamically?\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupData?: boolean;\n\n\t/**\n\t * Maximum number of data items in the view before data grouping kicks in.\n\t *\n\t * @default 500\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupCount?: number;\n\n\t/**\n\t * Force data item grouping to specific interval. This interval must be within groupIntervals array for this to work.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to group data items into.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for minor grid labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Minor_grid_formats} for more info\n\t * @since 5.6.0\n\t */\n\tminorDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t */\n\ttooltipDateFormat?: string | Intl.DateTimeFormatOptions;\n\n\t/**\n\t * Time unit-specific formats to use for axis tooltip.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A value which indicates relative position within axis cell to get timestamp\n\t * for the tooltip from.\n\t *\n\t * Values are from `-1` to `1`.\n\t *\n\t * If not set, it will use `tooltipLocation` value, if `tooltipLocation`` is\n\t * not set, it will use -0.5.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipIntervalOffset?: number;\n\n\t/**\n\t * If set to `true`, the axis will skip the first minor grid line and label.\n\t * \n\t * @default true\n\t * @since 5.14.0\n\t */\n\tskipFirstMinor?: boolean;\n\n\t/**\n\t * A relative location of weekly labels.\n\t *\n\t * @default 0\n\t * @since 5.14.0\n\t */\n\tweekLabelLocation?: number;\n\n}\n\nexport interface IDateAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDateAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * Current group interval.\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Current grid interval.\n\t */\n\tgridInterval: ITimeInterval;\n}\n\nexport interface IDateAxisEvents extends IValueAxisEvents {\n\n\t/**\n\t * Kicks in when data grouping is on, and current group interval changes, e.g. via zooming the chart.\n\t *\n\t * @since 5.2.43\n\t */\n\tgroupintervalchanged: {}\n\n}\n\n/**\n * Creates a date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\n * @important\n */\nexport class DateAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DateAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DateAxis.className]);\n\n\tdeclare public _settings: IDateAxisSettings<R>;\n\tdeclare public _privateSettings: IDateAxisPrivate;\n\tdeclare public _dataItemSettings: IDateAxisDataItem;\n\tdeclare public _events: IDateAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _seriesDataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\tprotected _baseDuration: number = 1;\n\n\tprotected _intervalMax: { [index: string]: number } = {};\n\tprotected _intervalMin: { [index: string]: number } = {};\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\tthis.on(\"baseInterval\", () => {\n\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t})\n\t}\n\n\tprotected _setBaseInterval(interval: ITimeInterval) {\n\t\tthis.setPrivateRaw(\"baseInterval\", interval);\n\t\tthis._baseDuration = $time.getIntervalDuration(interval);\n\t}\n\n\tprotected _fixZoomFactor() {\n\t\tconst maxZoomFactor = this.get(\"maxZoomFactor\");\n\t\tif (maxZoomFactor != null && maxZoomFactor != Infinity) {\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", maxZoomFactor);\n\t\t}\n\t\telse {\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\n\t\t}\n\t}\n\n\tprotected _groupData() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif (($type.isNumber(min) && $type.isNumber(max))) {\n\n\t\t\tthis._fixZoomFactor();\n\n\t\t\tconst groupInterval = this.getPrivate(\"groupInterval\")!;\n\t\t\tif (groupInterval) {\n\t\t\t\tthis._setBaseInterval(groupInterval);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t\t}\n\n\n\t\t\tif (this.isDirty(\"groupInterval\")) {\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\")!;\n\t\t\t\tif (groupInterval) {\n\t\t\t\t\tthis.setRaw(\"groupIntervals\", [groupInterval]);\n\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"groupData\")) {\n\t\t\t\tif (!this._dataGrouped) {\n\t\t\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tthis._groupSeriesData(series);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\t\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tseries.setDataSet(mainDataSetId);\n\t\t\t\t\t\t\tseries.resetGrouping();\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._setBaseInterval(baseInterval);\n\t\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", undefined);\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t\tthis._dataGrouped = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _groupSeriesData(series: XYSeries) {\n\t\tif (this.get(\"groupData\") && !series.get(\"groupDataDisabled\")) {\n\t\t\tthis._dataGrouped = true; // helps to avoid double grouping\n\n\t\t\tthis._seriesDataGrouped = true;\n\n\t\t\t// make array of intervals which will be used;\n\t\t\tlet intervals: ITimeInterval[] = [];\n\t\t\tlet baseDuration = this.baseMainDuration();\n\n\t\t\tlet groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\tif (groupIntervals) { }\n\t\t\t$array.each(groupIntervals, (interval) => {\n\t\t\t\tlet intervalDuration = $time.getIntervalDuration(interval);\n\t\t\t\tif (intervalDuration > baseDuration) {\n\t\t\t\t\tintervals.push(interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tseries._dataSets = {};\n\n\t\t\tconst key = this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!;\n\t\t\tlet fields: Array<string>;\n\n\t\t\tconst baseAxis = series.get(\"baseAxis\");\n\n\t\t\tif (series.get(\"xAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueYFields;\n\t\t\t}\n\t\t\telse if (series.get(\"yAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueXFields;\n\t\t\t}\n\n\t\t\tlet dataItems = series._mainDataItems;\n\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\n\t\t\tseries._dataSets[mainDataSetId] = dataItems;\n\n\t\t\tconst groupCallback = series.get(\"groupDataCallback\");\n\t\t\tlet groupOriginals = series.get(\"groupDataWithOriginals\", false);\n\t\t\tif (groupCallback) {\n\t\t\t\tgroupOriginals = true;\n\t\t\t}\n\n\t\t\t$array.each(intervals, (interval) => {\n\t\t\t\tlet previousTime = -Infinity;\n\t\t\t\tlet dataSetId = interval.timeUnit + interval.count;\n\t\t\t\tseries._dataSets[dataSetId] = [];\n\n\t\t\t\tlet newDataItem: DataItem<IXYSeriesDataItem>;\n\n\t\t\t\tlet sum: { [index: string]: number } = {};\n\t\t\t\tlet count: { [index: string]: number } = {};\n\n\t\t\t\tlet groupFieldValues: { [index: string]: string } = {};\n\t\t\t\tlet workingFields: { [index: string]: string } = {};\n\n\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\tgroupFieldValues[field] = series.get((field + \"Grouped\") as any);\n\t\t\t\t\tworkingFields[field] = field + \"Working\";\n\t\t\t\t})\n\n\t\t\t\tlet intervalDuration = $time.getDuration(interval.timeUnit);\n\n\t\t\t\tlet firstItem = dataItems[0];\n\t\t\t\tlet firstTime: any;\n\t\t\t\tif (firstItem) {\n\t\t\t\t\tfirstTime = dataItems[0].get(key as any);\n\t\t\t\t}\n\n\t\t\t\tlet prevNewDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tlet time = dataItem.get(key as any);\n\t\t\t\t\t//let roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, firstDay, utc, firstDate, timezone).getTime();\n\t\t\t\t\tlet roundedTime = $time.roun(time, interval.timeUnit, interval.count, this._root, firstTime);\n\t\t\t\t\tlet dataContext: any;\n\n\t\t\t\t\tif (previousTime < roundedTime - intervalDuration / 24) {\n\t\t\t\t\t\tdataContext = $object.copy(dataItem.dataContext);\n\n\t\t\t\t\t\tnewDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\n\t\t\t\t\t\tnewDataItem.setRaw(key as any, roundedTime);\n\n\t\t\t\t\t\tseries._dataSets[dataSetId].push(newDataItem);\n\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\t\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, value);\n\t\t\t\t\t\t\t\tcount[field] = 1;\n\t\t\t\t\t\t\t\tsum[field] = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.set(\"originals\", [dataItem]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprevNewDataItem = newDataItem;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet groupKey = groupFieldValues[field];\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\n\t\t\t\t\t\t\tif (value != null) {\n\n\t\t\t\t\t\t\t\tlet currentValue = newDataItem.get(field as any);\n\n\t\t\t\t\t\t\t\tswitch (groupKey) {\n\t\t\t\t\t\t\t\t\tcase \"close\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"sum\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, currentValue + value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"open\":\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"low\":\n\t\t\t\t\t\t\t\t\t\tif (value < currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"high\":\n\t\t\t\t\t\t\t\t\t\tif (value > currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"average\":\n\t\t\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t\t\t\tlet average = sum[field] / count[field];\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, average);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"extreme\":\n\t\t\t\t\t\t\t\t\t\tif (Math.abs(value) > Math.abs(currentValue)) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, newDataItem.get(field as any));\n\t\t\t\t\t\t\t\tlet dataContext: any = $object.copy(dataItem.dataContext);\n\t\t\t\t\t\t\t\tdataContext[key as any] = roundedTime;\n\t\t\t\t\t\t\t\tnewDataItem.dataContext = dataContext;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.get(\"originals\")!.push(dataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpreviousTime = roundedTime;\n\t\t\t\t})\n\n\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (series._dataSetId) {\n\t\t\t\tseries.setDataSet(series._dataSetId);\n\t\t\t}\n\t\t\tthis.markDirtySize();\n\t\t\t// solves problem if new series was added\n\t\t\tif (this._seriesAdded) {\n\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\tthis.markDirtySize();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._groupingCalculated = false;\n\t\tthis._dataGrouped = false;\n\t}\n\n\t/**\n\t * Returns a time interval axis would group data to for a specified duration.\n\t *\n\t * @since 5.2.1\n\t */\n\tpublic getGroupInterval(duration: number): ITimeInterval {\n\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\tlet groupInterval = $time.chooseInterval(0, duration, this.get(\"groupCount\", Infinity), this.get(\"groupIntervals\")!);\n\t\tif ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\n\t\t\tgroupInterval = { ...baseInterval };\n\t\t}\n\t\treturn groupInterval;\n\t}\n\n\t/**\n\t * Return `max` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Max\n\t */\n\tpublic getIntervalMax(interval: ITimeInterval): number {\n\t\treturn this._intervalMax[interval.timeUnit + interval.count];\n\t}\n\n\t/**\n\t * Return `min` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Min\n\t */\n\tpublic getIntervalMin(interval: ITimeInterval): number {\n\t\treturn this._intervalMin[interval.timeUnit + interval.count];\n\t}\n\n\tprotected _handleRangeChange() {\n\t\tsuper._handleRangeChange();\n\n\t\tlet selectionMin = Math.round(this.getPrivate(\"selectionMin\")! as number);\n\t\tlet selectionMax = Math.round(this.getPrivate(\"selectionMax\")! as number);\n\n\t\tif ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\n\n\t\t\tif (this.get(\"endLocation\") == 0) {\n\t\t\t\tselectionMax += 1;\n\t\t\t}\n\n\t\t\tif (this.get(\"groupData\") && !this._groupingCalculated) {\n\t\t\t\tthis._groupingCalculated = true;\n\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\");\n\t\t\t\tlet current = this.getPrivate(\"groupInterval\");\n\n\t\t\t\tlet modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\n\n\t\t\t\tif (current) {\n\t\t\t\t\tlet duration = $time.getIntervalDuration(current);\n\t\t\t\t\tmodifiedDifference = Math.ceil(modifiedDifference / duration) * duration;\n\t\t\t\t}\n\n\t\t\t\tif (!groupInterval) {\n\t\t\t\t\tgroupInterval = this.getGroupInterval(modifiedDifference);\n\t\t\t\t}\n\n\t\t\t\tif (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count) || this._seriesDataGrouped)) {\n\t\t\t\t\tthis._seriesDataGrouped = false;\n\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", groupInterval);\n\t\t\t\t\tthis._setBaseInterval(groupInterval)\n\n\t\t\t\t\tlet newId = groupInterval.timeUnit + groupInterval.count;\n\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\t\t\tseries.setDataSet(newId);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tthis.markDirtyExtremes();\n\n\t\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\t\t\tconst type = \"groupintervalchanged\";\n\t\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\n\t\t\t\t\tconst start = $array.getFirstSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMin);\n\t\t\t\t\t});\n\n\t\t\t\t\tlet startIndex = start.index;\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex -= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tselectionMax += this.baseDuration() * (1 - this.get(\"endLocation\", 1));\n\n\t\t\t\t\tconst end = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMax);\n\t\t\t\t\t});\n\n\t\t\t\t\tlet endIndex = end.index;\n\t\t\t\t\tlet endIndex2 = endIndex;\n\n\t\t\t\t\tif (endIndex2 > 1) {\n\t\t\t\t\t\tendIndex2--;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst firstDataItem = series.dataItems[startIndex];\n\t\t\t\t\tconst lastDataItem = series.dataItems[endIndex2];\n\n\t\t\t\t\tlet lastDate: number | undefined;\n\t\t\t\t\tlet firstDate: number | undefined;\n\t\t\t\t\tif (firstDataItem) {\n\t\t\t\t\t\tfirstDate = firstDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lastDataItem) {\n\t\t\t\t\t\tlastDate = lastDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet outOfSelection = false;\n\t\t\t\t\tif (lastDate != null && firstDate != null) {\n\t\t\t\t\t\tif (lastDate < selectionMin || firstDate > selectionMax) {\n\t\t\t\t\t\t\toutOfSelection = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tseries.setPrivate(\"outOfSelection\", outOfSelection);\n\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\tseries.setPrivate(\"adjustedStartIndex\", series._adjustStartIndex(startIndex));\n\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\t\t\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\t\t\tseries._markDirtyPrivateKey(\"adjustedStartIndex\");\n\t\t\t\t\t})\n\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, _strictMode?: boolean): IMinMaxStep {\n\t\treturn { min: min, max: max, step: (max - min) / gridCount };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic intervalDuration(): number {\n\t\treturn this._intervalDuration;\n\t}\n\n\tprotected _saveMinMax(min: number, max: number) {\n\t\tlet groupInterval = this.getPrivate(\"groupInterval\");\n\n\t\tif (!groupInterval) {\n\t\t\tgroupInterval = this.get(\"baseInterval\");\n\t\t}\n\n\t\tlet id = groupInterval.timeUnit + groupInterval.count;\n\t\tthis._intervalMin[id] = min;\n\t\tthis._intervalMax[id] = max;\n\t}\n\n\tprotected _getM(timeUnit: TimeUnit) {\n\t\tif (timeUnit == \"day\" || timeUnit == \"month\" || timeUnit == \"year\") {\n\t\t\treturn 1.05;\n\t\t}\n\t\treturn 1.01;\n\t}\n\n\tprotected _getMinorInterval(interval: ITimeInterval): ITimeInterval | undefined {\n\t\tlet minorGridInterval: ITimeInterval | undefined;\n\t\tlet count = interval.count;\n\t\tlet timeUnit = interval.timeUnit;\n\t\tif (count > 1) {\n\t\t\tif (count == 10) {\n\t\t\t\tcount = 5;\n\t\t\t}\n\t\t\telse if (count == 15) {\n\t\t\t\tcount = 5;\n\t\t\t}\n\t\t\telse if (count == 12) {\n\t\t\t\tcount = 2;\n\t\t\t}\n\t\t\telse if (count == 6) {\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t\telse if (count == 30) {\n\t\t\t\tcount = 10;\n\t\t\t}\n\t\t\telse if (count < 10) {\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t\tminorGridInterval = { timeUnit: timeUnit, count: count };\n\t\t}\n\t\tif (timeUnit == \"week\") {\n\t\t\tif (this.getPrivate(\"baseInterval\")?.timeUnit != \"week\") {\n\t\t\t\tminorGridInterval = { timeUnit: \"day\", count: 1 };\n\t\t\t}\n\t\t\telse {\n\t\t\t\tminorGridInterval = { timeUnit: \"week\", count: 1 };\n\t\t\t}\n\t\t}\n\n\t\tif (timeUnit == \"year\" && count == 1 && this.getPrivate(\"selectionMax\", 0) - this.getPrivate(\"selectionMin\", 0) < 4 * 366 * 24 * 60 * 60 * 1000) {\n\t\t\tminorGridInterval = { timeUnit: \"month\", count: 1 };\n\t\t}\n\t\treturn minorGridInterval;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tconst root = this._root;\n\t\t\tconst selectionMin = Math.round(this.getPrivate(\"selectionMin\")! as number);\n\t\t\tconst selectionMax = Math.round(this.getPrivate(\"selectionMax\")! as number);\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\t\tlet value = selectionMin;\n\t\t\tlet i = 0;\n\n\t\t\tconst intervals = this.get(\"gridIntervals\")!;\n\t\t\tlet gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\n\n\t\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\t\tgridInterval = { ...baseInterval };\n\t\t\t}\n\n\t\t\tconst intervalDuration = $time.getIntervalDuration(gridInterval);\n\t\t\tthis._intervalDuration = intervalDuration;\n\n\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\t\tconst utc = root.utc;\n\t\t\tconst timezone = root.timezone;\n\n\t\t\t//value = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, firstDay, utc, new Date(min), timezone).getTime();\n\t\t\tvalue = $time.roun(selectionMin - intervalDuration, gridInterval.timeUnit, gridInterval.count, root, min);\n\t\t\tlet previousValue = value - intervalDuration;\n\t\t\tlet format: string | Intl.DateTimeFormatOptions;\n\t\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\t\tthis.setPrivateRaw(\"gridInterval\", gridInterval);\n\n\t\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\n\t\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\n\n\t\t\tlet minorGridInterval: ITimeInterval | undefined;\n\t\t\tlet minorDuration = 0;\n\n\t\t\tif (minorGridEnabled) {\n\t\t\t\tminorGridInterval = this._getMinorInterval(gridInterval);\n\t\t\t\tminorDuration = $time.getIntervalDuration(minorGridInterval);\n\t\t\t}\n\n\t\t\tlet m = 0;\n\n\t\t\twhile (value < selectionMax + intervalDuration) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\t\t\t\tdataItem.setRaw(\"labelEndValue\", undefined);\n\n\t\t\t\tlet endValue = value + $time.getDuration(gridInterval.timeUnit, gridInterval.count * this._getM(gridInterval.timeUnit));\n\t\t\t\t//endValue = $time.round(new Date(endValue), gridInterval.timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\tendValue = $time.roun(endValue, gridInterval.timeUnit, 1, root);\n\n\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\n\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, utc, timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\n\t\t\t\tlet count = gridInterval.count;\n\t\t\t\t// so that labels of week would always be at the beginning of the grid\n\t\t\t\tif (gridInterval.timeUnit == \"week\") {\n\t\t\t\t\tlabel?.set(\"location\", this.get(\"weekLabelLocation\", 0));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel?.set(\"location\", renderer.labels.template.get(\"location\"));\n\t\t\t\t}\n\n\t\t\t\tif (minorGridEnabled) {\n\t\t\t\t\tcount = 1;\n\t\t\t\t\tlet timeUnit = gridInterval.timeUnit;\n\t\t\t\t\tif (timeUnit == \"week\" && this.get(\"skipFirstMinor\")) {\n\t\t\t\t\t\ttimeUnit = \"day\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet labelEndValue = value + $time.getDuration(timeUnit, this._getM(timeUnit));\n\t\t\t\t\t//labelEndValue = $time.round(new Date(labelEndValue), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\t\tlabelEndValue = $time.roun(labelEndValue, timeUnit, 1, root);\n\t\t\t\t\tdataItem.setRaw(\"labelEndValue\", labelEndValue);\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem, count);\n\n\t\t\t\tpreviousValue = value;\n\t\t\t\tvalue = endValue;\n\n\t\t\t\t// min grid\n\t\t\t\tif (minorGridInterval) {\n\t\t\t\t\tconst minorTimeUnit = minorGridInterval.timeUnit;\n\t\t\t\t\tconst minorCount = minorGridInterval.count;\n\t\t\t\t\tconst mmm = this._getM(minorTimeUnit);\n\n\t\t\t\t\tif (!this.get(\"skipFirstMinor\")) {\n\t\t\t\t\t\tpreviousValue -= minorDuration * mmm;\n\t\t\t\t\t}\n\n\n\t\t\t\t\t//let minorValue = $time.round(new Date(previousValue + minorDuration * this._getM(minorGridInterval.timeUnit)), minorGridInterval.timeUnit, minorGridInterval.count, firstDay, utc, new Date(previousValue), timezone).getTime();\n\t\t\t\t\tlet minorValue = $time.roun(previousValue + minorDuration * mmm, minorTimeUnit, minorCount, root, previousValue);\n\n\t\t\t\t\tlet previousMinorValue: number | undefined;\n\t\t\t\t\tlet minorFormats = this.get(\"minorDateFormats\", this.get(\"dateFormats\"))!;\n\n\t\t\t\t\twhile (minorValue < value - 0.01 * minorDuration) {\n\t\t\t\t\t\tlet minorDataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\t\t\tif (this.minorDataItems.length < m + 1) {\n\t\t\t\t\t\t\tminorDataItem = new DataItem(this, undefined, {});\n\t\t\t\t\t\t\tthis.minorDataItems.push(minorDataItem);\n\t\t\t\t\t\t\tthis.processDataItem(minorDataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tminorDataItem = this.minorDataItems[m];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._createAssets(minorDataItem, [\"minor\"], true);\n\n\t\t\t\t\t\tthis._toggleDataItem(minorDataItem, true);\n\n\t\t\t\t\t\tminorDataItem.setRaw(\"value\", minorValue);\n\n\t\t\t\t\t\tlet minorEndValue = minorValue + $time.getDuration(minorTimeUnit, minorCount * mmm);\n\t\t\t\t\t\t//minorEndValue = $time.round(new Date(minorEndValue), minorGridInterval.timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\t\t\tminorEndValue = $time.roun(minorEndValue, minorTimeUnit, 1, root);\n\n\t\t\t\t\t\tminorDataItem.setRaw(\"endValue\", minorEndValue);\n\n\t\t\t\t\t\tlet date = new Date(minorValue);\n\n\t\t\t\t\t\tformat = minorFormats[minorTimeUnit];\n\n\t\t\t\t\t\tconst minorLabel = minorDataItem.get(\"label\");\n\n\t\t\t\t\t\tif (minorLabel) {\n\t\t\t\t\t\t\tif (minorLabelsEnabled) {\n\t\t\t\t\t\t\t\tminorLabel.set(\"text\", root.dateFormatter.format(date, format!));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tminorLabel.setPrivate(\"visible\", false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._prepareDataItem(minorDataItem, 1);\n\n\t\t\t\t\t\tif (minorValue == previousMinorValue) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!minorDataItem.get(\"isRange\")) {\n\t\t\t\t\t\t\tconst fillRule = this.get(\"fillRule\");\n\t\t\t\t\t\t\tif (fillRule) {\n\t\t\t\t\t\t\t\tfillRule(minorDataItem)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpreviousMinorValue = minorValue;\n\t\t\t\t\t\tminorValue = minorEndValue;\n\t\t\t\t\t\tm++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (value == previousValue) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t\t}\n\n\t\t\tfor (let j = m; j < this.minorDataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.minorDataItems[j], false);\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\tprotected _updateFinals(start: number, end: number) {\n\t\tthis.setPrivateRaw(\"selectionMinFinal\", this.positionToValue(start));\n\t\tthis.setPrivateRaw(\"selectionMaxFinal\", this.positionToValue(end));\n\t}\n\n\tprotected _getDelta() {\n\t\tthis._deltaMinMax = this.baseDuration() / 2;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t//let startTime = $time.round(new Date(min), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\n\t\tlet startTime = $time.roun(min, timeUnit, baseInterval.count, this._root);\n\n\t\tlet endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit))\n\t\t//endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\tendTime = $time.roun(endTime, timeUnit, 1, this._root);\n\t\treturn startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t//let startTime = $time.round(new Date(max), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\n\t\tlet startTime = $time.roun(max, timeUnit, baseInterval.count, this._root);\n\t\tlet endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit))\n\t\t//endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\tendTime = $time.roun(endTime, timeUnit, 1, this._root);\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\n\t}\n\n\tprotected _updateDates(_date: number, _series: XYSeries) {\n\n\t}\n\n\tpublic _handleSeriesRemoved() {\n\t\tthis.setPrivate(\"baseInterval\", this.get(\"baseInterval\"));\n\t\tthis.setPrivate(\"min\", undefined);\n\t\tthis.setPrivate(\"minFinal\", undefined);\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t * \n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn this._baseDuration;\n\t\t//return $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\t/**\n\t * Returns a duration of user-defined `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseMainDuration(): number {\n\t\treturn $time.getIntervalDuration(this.get(\"baseInterval\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(dataItem: DataItem<IXYSeriesDataItem>, fields: Array<string>) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif (!dataItem.open) {\n\t\t\tdataItem.open = {};\n\t\t}\n\t\tif (!dataItem.close) {\n\t\t\tdataItem.close = {};\n\t\t}\n\n\t\t$array.each(fields, (field) => {\n\t\t\tlet value = dataItem.get(field as any);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet startTime = dataItem.open![field];\n\t\t\t\tlet endTime = dataItem.close![field];\n\t\t\t\t// this is done to save cpu, as rounding is quite expensive, especially with timezone set. \n\t\t\t\t// if value is between prev start and end, it means it didn't change, all is fine.\n\t\t\t\tif (value >= startTime && value <= endTime) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t\t\t\tconst count = baseInterval.count;\n\t\t\t\t\t//startTime = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\t\tstartTime = $time.roun(value, timeUnit, count, this._root);\n\t\t\t\t\tendTime = startTime + $time.getDuration(timeUnit, count * this._getM(timeUnit));\n\t\t\t\t\t//endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\t\tendTime = $time.roun(endTime, timeUnit, 1, this._root);\n\n\t\t\t\t\tdataItem.open![field] = startTime;\n\t\t\t\t\tdataItem.close![field] = endTime;\n\t\t\t\t}\n\n\t\t\t\tthis._updateDates(startTime, dataItem.component as XYSeries);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _handleSizeDirty() {\n\t\t// void \n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number, exactLocation?: boolean): number {\n\n\t\tlet openValue;\n\t\tlet closeValue;\n\t\tlet value;\n\n\t\tif (exactLocation) {\n\t\t\tvalue = dataItem.get(field as any);\n\t\t}\n\t\telse {\n\t\t\tif (dataItem.open && dataItem.close) {\n\t\t\t\topenValue = dataItem.open[field];\n\t\t\t\tcloseValue = dataItem.close[field];\n\t\t\t}\n\t\t\telse {\n\t\t\t\topenValue = dataItem.get(field as any)\n\t\t\t\tcloseValue = openValue;\n\t\t\t}\n\n\t\t\tvalue = openValue + (closeValue - openValue) * cellLocation;\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number, exactLocation?: boolean): number {\n\t\tlet openValue;\n\t\tlet closeValue;\n\t\tlet value;\n\t\tif (exactLocation) {\n\t\t\tvalue = dataItem.get(field as any);\n\t\t}\n\t\telse {\n\t\t\tif (dataItem.open && dataItem.close) {\n\t\t\t\topenValue = dataItem.open[field];\n\t\t\t\tcloseValue = dataItem.close[field];\n\t\t\t}\n\t\t\telse {\n\t\t\t\topenValue = dataItem.get(field as any)\n\t\t\t\tcloseValue = openValue;\n\t\t\t}\n\n\t\t\tvalue = openValue + (closeValue - openValue) * cellLocation;\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tlet value = this.positionToValue(position);\n\t\tvalue = value - (location - 0.5) * this.baseDuration();\n\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tif (!$type.isNaN(value)) {\n\t\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t\tconst utc = this._root.utc;\n\t\t\tconst timezone = this._root.timezone;\n\t\t\tconst count = baseInterval.count;\n\n\t\t\t//value = $time.round(new Date(value), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\n\t\t\tvalue = $time.roun(value, timeUnit, count, this._root, this.getPrivate(\"min\", 0));\n\n\t\t\tlet duration = $time.getDateIntervalDuration(baseInterval, new Date(value), firstDay, utc, timezone);\n\t\t\tif (timezone) {\n\t\t\t\t//value = $time.round(new Date(value + this.baseDuration() * 0.05), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\n\t\t\t\tvalue = $time.roun(value + this.baseDuration() * 0.05, timeUnit, count, this._root, this.getPrivate(\"min\", 0));\n\t\t\t\tduration = $time.getDateIntervalDuration(baseInterval, new Date(value + duration * location), firstDay, utc, timezone);\n\t\t\t}\n\n\t\t\treturn this.valueToPosition(value + duration * location);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * NOTE: Unless `adjustPosition` (2nd parameter) is set to `false`, the method\n\t * will adjust position by `tooltipIntervalOffset`.\n\t *\n\t * @param  position        Position\n\t * @param  adjustPosition  Adjust position\n\t * @return                 Tooltip text\n\t */\n\tpublic getTooltipText(position: number, adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tif (this.getPrivate(\"min\") != null) {\n\t\t\tlet format = this.get(\"tooltipDateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\tlet value = this.positionToValue(position);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\t\t\tlet duration = $time.getDateIntervalDuration(baseInterval, date, this._root.locale.firstDayOfWeek, this._root.utc, this._root.timezone);\n\n\t\t\t\tif (adjustPosition !== false) {\n\t\t\t\t\tdate = new Date(value + this.get(\"tooltipIntervalOffset\", -this.get(\"tooltipLocation\", 0.5)) * duration)\n\t\t\t\t}\n\n\t\t\t\treturn this._root.dateFormatter.format(date, this.get(\"tooltipDateFormat\", format));\n\t\t\t}\n\n\t\t}\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number, location?: number, snap?: boolean): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tif (location == null) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tvalue = value - (location - 0.5) * this.baseDuration();\n\n\t\tconst result = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\tlet diValue = 0;\n\t\t\tif (dataItem.open) {\n\t\t\t\tdiValue = dataItem.open[fieldName];\n\t\t\t}\n\n\t\t\treturn $order.compare(diValue, value);\n\t\t});\n\n\t\tif (snap || series.get(\"snapTooltip\")) {\n\t\t\tlet first = series.dataItems[result.index - 1];\n\t\t\tlet second = series.dataItems[result.index];\n\n\t\t\tif (first && second) {\n\t\t\t\tif (first.open && second.close) {\n\t\t\t\t\tlet open = first.open[fieldName];\n\t\t\t\t\tlet close = second.close[fieldName];\n\n\t\t\t\t\tif (Math.abs(value - open) > Math.abs(value - close)) {\n\t\t\t\t\t\treturn second;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (first) {\n\t\t\t\treturn first;\n\t\t\t}\n\n\t\t\tif (second) {\n\t\t\t\treturn second;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst dataItem = series.dataItems[result.index - 1];\n\n\t\t\tif (dataItem) {\n\t\t\t\tif (dataItem.open && dataItem.close) {\n\t\t\t\t\tlet open = dataItem.open[fieldName];\n\t\t\t\t\tlet close = dataItem.close[fieldName];\n\n\t\t\t\t\tif (value >= open && value <= close) {\n\t\t\t\t\t\treturn dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(dataItem: DataItem<IXYSeriesDataItem>, nextItem: DataItem<IXYSeriesDataItem>, autoGapCount: number, fieldName: string): boolean {\n\t\tconst value1 = dataItem.get(fieldName as any);\n\t\tconst value2 = nextItem.get(fieldName as any);\n\n\t\tif (value2 - value1 > this.baseDuration() * autoGapCount) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` dates.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start Date\n\t * @param  end       End Date\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\n\t\tthis.zoomToValues(start.getTime(), end.getTime(), duration);\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", this.getPrivate(\"min\", 0));\n\t\tconst max = this.getPrivate(\"maxFinal\", this.getPrivate(\"max\", 0));\n\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\tconst futureGroupInterval = this.getGroupInterval(end - start);\n\t\t\t\tconst baseInterval = this.get(\"baseInterval\");\n\n\t\t\t\tlet baseMin = this.getIntervalMin(baseInterval);\n\t\t\t\tlet baseMax = this.getIntervalMax(baseInterval) - 1;\n\t\t\t\tbaseMax = $time.roun(baseMax, futureGroupInterval.timeUnit, futureGroupInterval.count, this.root);\n\t\t\t\tbaseMax += this._getM(futureGroupInterval.timeUnit) * $time.getIntervalDuration(futureGroupInterval);\n\t\t\t\tbaseMax = $time.roun(baseMax, futureGroupInterval.timeUnit, futureGroupInterval.count, this.root);\n\n\t\t\t\tlet futureMin = $time.roun(baseMin, futureGroupInterval.timeUnit, futureGroupInterval.count, this.root);\n\t\t\t\tlet futureMax = $time.roun(baseMax, futureGroupInterval.timeUnit, futureGroupInterval.count, this.root);\n\n\t\t\t\tlet s = (start - futureMin) / (futureMax - futureMin);\n\t\t\t\tlet e = (end - futureMin) / (futureMax - futureMin);\n\n\t\t\t\tthis.zoom(s, e, duration);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns a `Date` object corresponding to specific position within plot\n\t * area.\n\t *\n\t * @param   position  Pposition\n\t * @return            Date\n\t */\n\tpublic positionToDate(position: number): Date {\n\t\treturn new Date(this.positionToValue(position));\n\t}\n\n\t/**\n\t * Returns a relative position within plot area that corresponds to specific\n\t * date.\n\t *\n\t * @param   date  Date\n\t * @return        Position\n\t */\n\tpublic dateToPosition(date: Date): number {\n\t\treturn this.valueToPosition(date.getTime());\n\t}\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\tlet max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\n\t\tlet min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\n\n\t\tif ($type.isNumber(max) && $type.isNumber(min)) {\n\t\t\treturn this._intervalDuration / (max - min);\n\t\t}\n\t\treturn 0.05;\n\t}\n\n\tpublic nextPosition(count?: number) {\n\t\tif (count == null) {\n\t\t\tcount = 1;\n\t\t}\n\n\t\tlet dtime = this.get(\"tooltipLocation\", 0.5) * this.baseDuration();\n\t\tif (this.get(\"renderer\").getPrivate(\"letter\") == \"Y\") {\n\t\t\tcount *= -1;\n\t\t}\n\n\t\tlet tooltipValue = this.positionToValue(this.getPrivate(\"tooltipPosition\", 0));\n\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet time = this._nextTime(tooltipValue, count, baseInterval);\n\n\t\tlet selectionMin = this.getPrivate(\"selectionMin\", 0);\n\t\tlet selectionMax = this.getPrivate(\"selectionMax\", 0);\n\n\t\tlet min = $time.roun(selectionMin, baseInterval.timeUnit, baseInterval.count, this._root);\n\t\tlet max = $time.roun(selectionMax, baseInterval.timeUnit, baseInterval.count, this._root);\n\n\t\ttime += dtime;\n\t\ttime = $math.fitToRange(time, min + dtime, max - dtime);\n\n\t\treturn this.toGlobalPosition(this.valueToPosition(time));\n\t}\n\n\tprotected _nextTime(time: number, count: number, baseInterval: ITimeInterval) {\n\t\treturn $time.roun(time + count * this.baseDuration(), baseInterval.timeUnit, baseInterval.count, this._root);\n\t}\n}\n","import type { IAxisLabel } from \"./AxisLabel\";\r\nimport type { IPoint } from \"../../../core/util/IPoint\";\r\n\r\nimport { EditableLabel, IEditableLabelPrivate, IEditableLabelSettings } from \"../../../core/render/EditableLabel\";\r\n\r\nexport interface IEditableAxisLabelSettings extends IEditableLabelSettings {\r\n}\r\n\r\nexport interface IEditableAxisLabelPrivate extends IEditableLabelPrivate {\r\n}\r\n\r\n\r\n/**\r\n * Draws an axis label.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\r\n * @important\r\n */\r\nexport class EditableAxisLabel extends EditableLabel implements IAxisLabel {\r\n\r\n\tdeclare public _settings: IEditableAxisLabelSettings;\r\n\tdeclare public _privateSettings: IEditableAxisLabelPrivate;\r\n\tpublic static className: string = \"EditableAxisLabel\";\r\n\tpublic static classNames: Array<string> = EditableLabel.classNames.concat([EditableAxisLabel.className]);\r\n\r\n\tpublic _tickPoints: Array<IPoint> = [];\r\n\r\n}","import type { AxisRenderer } from \"./AxisRenderer\";\r\nimport type { XYSeries } from \"../../xy/series/XYSeries\";\r\nimport type { ITimeInterval } from \"../../../core/util/Time\";\r\n\r\nimport { DateAxis, IDateAxisSettings, IDateAxisPrivate, IDateAxisDataItem, IDateAxisEvents } from \"./DateAxis\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport * as $array from \"../../../core/util/Array\"\r\nimport * as $order from \"../../../core/util/Order\";\r\nimport * as $time from \"../../../core/util/Time\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $math from \"../../../core/util/Math\";\r\n\r\nexport interface IGaplessDateAxisSettings<R extends AxisRenderer> extends IDateAxisSettings<R> {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisDataItem extends IDateAxisDataItem {\r\n\r\n\t/**\r\n\t * An index of a data item.\r\n\t */\r\n\tindex?: number\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisPrivate extends IDateAxisPrivate {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisEvents extends IDateAxisEvents {\r\n}\r\n\r\n/**\r\n * A version of a [[DateAxis]] which removes intervals that don't have any data\r\n * items in them.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/gapless-date-axis/} for more info\r\n * @important\r\n */\r\nexport class GaplessDateAxis<R extends AxisRenderer> extends DateAxis<R> {\r\n\tpublic static className: string = \"GaplessDateAxis\";\r\n\tpublic static classNames: Array<string> = DateAxis.classNames.concat([GaplessDateAxis.className]);\r\n\r\n\tdeclare public _settings: IGaplessDateAxisSettings<R>;\r\n\tdeclare public _privateSettings: IGaplessDateAxisPrivate;\r\n\tdeclare public _dataItemSettings: IGaplessDateAxisDataItem;\r\n\tdeclare public _events: IGaplessDateAxisEvents;\r\n\r\n\tprotected _frequency: number = 1;\r\n\tprotected _m: number = 0;\r\n\r\n\tpublic _afterNew() {\r\n\t\tthis.valueFields.push(\"date\");\r\n\t\tsuper._afterNew();\r\n\t}\r\n\r\n\tpublic _dates: Array<number> = [];\r\n\tpublic _customDates?: Array<number>;\r\n\r\n\r\n\tpublic _getDates(): Array<number> {\r\n\t\tif (this._customDates) {\r\n\t\t\treturn this._customDates;\r\n\t\t}\r\n\t\treturn this._dates;\r\n\t}\r\n\r\n\tprotected _updateDates(date: number, series: XYSeries) {\r\n\t\tif (!series.get(\"ignoreMinMax\")) {\r\n\t\t\tconst dates = this._getDates();\r\n\t\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, date));\r\n\t\t\tif (!result.found) {\r\n\t\t\t\t$array.insertIndex(dates, result.index, date);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateAllDates() {\r\n\t\tif (!this._customDates) {\r\n\t\t\tconst dates = this._dates;\r\n\t\t\tdates.length = 0;\r\n\r\n\t\t\t$array.each(this.series, (series) => {\r\n\t\t\t\tlet field = \"valueX\";\r\n\t\t\t\tif (series.get(\"yAxis\") == this) {\r\n\t\t\t\t\tfield = \"valueY\"\r\n\t\t\t\t}\r\n\t\t\t\t$array.each(series.dataItems, (dataItem) => {\r\n\t\t\t\t\tlet value = dataItem.get(field as any);\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\tif (dataItem.open) {\r\n\t\t\t\t\t\t\tthis._updateDates(dataItem.open![field], series);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\r\n\t\t\tconst extraMax = this.get(\"extraMax\", 0);\r\n\t\t\tconst extraMin = this.get(\"extraMin\", 0);\r\n\r\n\t\t\tlet len = dates.length;\r\n\r\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\t\t\tconst baseCount = baseInterval.count;\r\n\t\t\tconst timeUnit = baseInterval.timeUnit;\r\n\r\n\t\t\tif (extraMax > 0) {\r\n\t\t\t\tconst extra = len * extraMax;\r\n\t\t\t\tlet time = dates[len - 1];\r\n\t\t\t\tif ($type.isNumber(time)) {\r\n\t\t\t\t\tfor (let i = len - 1; i < len + extra; i++) {\r\n\t\t\t\t\t\ttime += $time.getDuration(timeUnit, baseCount * this._getM(timeUnit));\r\n\t\t\t\t\t\t//time = $time.round(new Date(time), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\t\t\ttime = $time.roun(time, timeUnit, baseCount, this._root);\r\n\t\t\t\t\t\tdates.push(time);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (extraMin > 0) {\r\n\t\t\t\tconst extra = len * extraMin;\r\n\t\t\t\tlet time = dates[0];\r\n\t\t\t\tif ($type.isNumber(time)) {\r\n\t\t\t\t\tfor (let i = 0; i < extra; i++) {\r\n\t\t\t\t\t\ttime -= $time.getDuration(timeUnit, baseCount);\r\n\t\t\t\t\t\t//time = $time.round(new Date(time), timeUnit, baseCount, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\t\t\ttime = $time.roun(time, timeUnit, baseCount, this._root);\r\n\t\t\t\t\t\tdates.unshift(time);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convers value to a relative position on axis.\r\n\t *\r\n\t * @param   value  Value\r\n\t * @return         Relative position\r\n\t */\r\n\tpublic valueToPosition(value: number): number {\r\n\t\tconst dates = this._getDates();\r\n\t\tconst startLocation = this.get(\"startLocation\", 0);\r\n\t\tconst endLocation = this.get(\"endLocation\", 1);\r\n\t\tconst len = dates.length - startLocation - (1 - endLocation);\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn (index - startLocation) / len;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\tlet itemValue = dates[index];\r\n\t\t\tconst nextDate = dates[index + 1];\r\n\t\t\tif (nextDate) {\r\n\t\t\t\tlet nextItemValue = nextDate;\r\n\t\t\t\t// use next item value if it's closer\r\n\t\t\t\tif (Math.abs(nextItemValue - value) < Math.abs(itemValue - value)) {\r\n\t\t\t\t\titemValue = nextItemValue;\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t/*\r\n\t\t\tlet d = 0;\r\n\t\t\tif (itemValue > value && value > this.getPrivate(\"min\", 0)) {\r\n\t\t\t\td = itemValue - value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\td = value - itemValue;\r\n\t\t\t}\r\n\t\t\t*/\r\n\r\n\t\t\tlet d = value - itemValue;\r\n\r\n\t\t\treturn (index - startLocation) / len + d / this.baseDuration() / len;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts numeric value from axis scale to index.\r\n\t * \r\n\t * @param  value  Value\r\n\t * @return        Index\r\n\t */\r\n\tpublic valueToIndex(value: number): number {\r\n\t\tconst dates = this._getDates();\r\n\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\t\t\treturn index;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a relative position to a corresponding numeric value from axis\r\n\t * scale.\r\n\t *\r\n\t * @param   position  Relative position\r\n\t * @return            Value\r\n\t */\r\n\tpublic positionToValue(position: number): number {\r\n\t\tconst startLocation = this.get(\"startLocation\", 0);\r\n\t\tconst endLocation = this.get(\"endLocation\", 1);\r\n\t\tconst dates = this._getDates();\r\n\t\tlet len = Math.round(dates.length - startLocation - (1 - endLocation));\r\n\t\tlet index = position * len;\r\n\t\tlet findex = Math.floor(index);\r\n\t\tif (findex < 0) {\r\n\t\t\tfindex = 0;\r\n\t\t}\r\n\r\n\t\tif (findex > len - 1) {\r\n\t\t\tfindex = len - 1\r\n\t\t}\r\n\r\n\t\treturn dates[findex] + (index - findex + startLocation) * this.baseDuration();\r\n\t}\r\n\r\n\tprotected _fixZoomFactor() {\r\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", this._getDates().length - this.get(\"startLocation\", 0) - (1 - this.get(\"endLocation\", 1)));\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the axis to specific `start` and `end` dates.\r\n\t *\r\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n\t *\r\n\t * @param  start     Start Date\r\n\t * @param  end       End Date\r\n\t * @param  duration  Duration in milliseconds\r\n\t */\r\n\r\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\r\n\t\tconst dates = this._getDates();\r\n\t\tconst len = dates.length;\r\n\t\tlet result = $array.getSortedIndex(dates, (x) => $order.compare(x, start.getTime()));\r\n\r\n\t\tlet startValue = dates[Math.min(result.index, len - 1)];\r\n\r\n\t\tresult = $array.getSortedIndex(dates, (x) => $order.compare(x, end.getTime()));\r\n\t\tlet endValue = dates[result.index];\r\n\r\n\t\tif (result.index >= len) {\r\n\t\t\tendValue = dates[len - 1] + this.baseDuration();\r\n\t\t}\r\n\r\n\t\tthis.zoomToValues(startValue, endValue, duration);\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the axis to specific `start` and `end` values.\r\n\t *\r\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n\t *\r\n\t * @param  start     Start value\r\n\t * @param  end       End value\r\n\t * @param  duration  Duration in milliseconds\r\n\t */\r\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\r\n\t\tconst min = this.getPrivate(\"min\", 0);\r\n\t\tconst max = this.getPrivate(\"max\", 0);\r\n\t\tstart = $math.fitToRange(start, min, max);\r\n\t\tend = $math.fitToRange(end, min, max);\r\n\t\tthis.zoom(this.valueToPosition(start), this.valueToPosition(end), duration);\r\n\t}\r\n\r\n\r\n\tprotected _prepareAxisItems() {\r\n\t\tlet startTime = this.getPrivate(\"selectionMin\", 0);\r\n\t\tlet endTime = this.getPrivate(\"selectionMax\", 0);\r\n\r\n\t\tif ($type.isNumber(startTime) && $type.isNumber(endTime)) {\r\n\r\n\t\t\tif (this._seriesValuesDirty) {\r\n\t\t\t\tthis._seriesValuesDirty = false;\r\n\t\t\t\tthis._updateAllDates();\r\n\t\t\t}\r\n\r\n\t\t\tconst root = this._root;\r\n\t\t\tconst utc = root.utc;\r\n\t\t\tconst timezone = root.timezone;\r\n\t\t\tconst dates = this._getDates();\r\n\t\t\tconst renderer = this.get(\"renderer\");\r\n\t\t\tconst len = dates.length;\r\n\t\t\tconst baseDuration = this.baseDuration();\r\n\r\n\t\t\tlet startIndex = this.valueToIndex(startTime);\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tstartIndex--;\r\n\t\t\t}\r\n\r\n\t\t\tlet endIndex = this.valueToIndex(endTime);\r\n\t\t\tif (endIndex < len - 1) {\r\n\t\t\t\tendIndex++;\r\n\t\t\t}\r\n\t\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\r\n\t\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\r\n\t\t\tfrequency = Math.max(1, frequency);\r\n\r\n\t\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\r\n\r\n\t\t\tthis._frequency = frequency;\r\n\r\n\t\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\t\tthis._toggleDataItem(dataItem, false);\r\n\t\t\t})\r\n\r\n\t\t\t$array.each(this.minorDataItems, (dataItem) => {\r\n\t\t\t\tthis._toggleDataItem(dataItem, false);\r\n\t\t\t})\r\n\r\n\t\t\tlet realDuration = (endTime - startTime) - ((endTime - startTime) / baseDuration - (endIndex - startIndex)) * baseDuration;\r\n\r\n\t\t\t// if all items are on axis\r\n\t\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\r\n\r\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\t\t\tlet intervalDuration = $time.getIntervalDuration(gridInterval);\r\n\r\n\t\t\tif (intervalDuration < baseDuration) {\r\n\t\t\t\tgridInterval = { ...baseInterval };\r\n\t\t\t\tintervalDuration = $time.getIntervalDuration(gridInterval);\r\n\t\t\t}\r\n\r\n\t\t\tthis._intervalDuration = intervalDuration;\r\n\r\n\t\t\tconst timeUnit = gridInterval.timeUnit;\r\n\t\t\tconst formats = this.get(\"dateFormats\")!;\r\n\r\n\t\t\tlet firstTime = Date.now();\r\n\r\n\t\t\tif (dates[0]) {\r\n\t\t\t\tfirstTime = dates[0];\r\n\t\t\t}\r\n\r\n\t\t\t//let value = $time.round(new Date(this.getPrivate(\"selectionMin\", 0)), timeUnit, gridInterval.count, firstDay, utc, firstDate, timezone).getTime();\r\n\t\t\tlet value = $time.roun(this.getPrivate(\"selectionMin\", 0), timeUnit, gridInterval.count, root, firstTime);\r\n\r\n\t\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\r\n\t\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\r\n\r\n\t\t\tlet minorGridInterval: ITimeInterval | undefined;\r\n\t\t\tlet minorDuration = 0;\r\n\t\t\tlet previousDataItem: DataItem<IGaplessDateAxisDataItem> | undefined;\r\n\r\n\t\t\tif (minorGridEnabled) {\r\n\t\t\t\tminorGridInterval = this._getMinorInterval(gridInterval);\r\n\t\t\t\tminorDuration = $time.getIntervalDuration(minorGridInterval);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tlet selectedItems: Array<number> = this._getIndexes(value, this.getPrivate(\"selectionMax\", value) + intervalDuration, gridInterval, this.getPrivate(\"min\", value));\r\n\t\t\tif (selectedItems.length > 0) {\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tthis._m = 0;\r\n\t\t\t\tlet previousValue = value - intervalDuration * 10;\r\n\t\t\t\tconst nextGridUnit = $time.getNextUnit(timeUnit);\r\n\r\n\t\t\t\t// MINOR GRID\r\n\t\t\t\tif (minorGridInterval) {\r\n\t\t\t\t\tlet first = dates[selectedItems[0]];\r\n\t\t\t\t\tthis._addMinorGrid(first - intervalDuration, first, minorDuration, minorGridInterval);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet minDistance = renderer.axisLength() / renderer.gridCount() * 0.5;\r\n\r\n\t\t\t\t$array.each(selectedItems, (index) => {\r\n\t\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\r\n\t\t\t\t\tif (this.dataItems.length < i + 1) {\r\n\t\t\t\t\t\tdataItem = new DataItem<this[\"_dataItemSettings\"]>(this, undefined, {});\r\n\t\t\t\t\t\tthis._dataItems.push(dataItem);\r\n\t\t\t\t\t\tthis.processDataItem(dataItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdataItem = this.dataItems[i];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet value = dates[index];\r\n\t\t\t\t\tlet date = new Date(value);\r\n\r\n\t\t\t\t\tlet endValue = value;\r\n\t\t\t\t\tif (i < selectedItems.length - 1) {\r\n\t\t\t\t\t\tendValue = dates[selectedItems[i + 1]];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tendValue += intervalDuration;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataItem.setRaw(\"value\", value);\r\n\t\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\r\n\t\t\t\t\tdataItem.setRaw(\"index\", i);\r\n\t\t\t\t\tdataItem.setRaw(\"labelEndValue\", undefined);\r\n\r\n\t\t\t\t\tlet format = formats[timeUnit];\r\n\t\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\r\n\t\t\t\t\t\tif (timeUnit != \"year\") {\r\n\t\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, utc, timezone)) {\r\n\t\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![timeUnit];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._createAssets(dataItem, []);\r\n\r\n\t\t\t\t\tconst label = dataItem.get(\"label\");\r\n\t\t\t\t\tif (label) {\r\n\t\t\t\t\t\tlabel.set(\"text\", root.dateFormatter.format(date, format!));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._toggleDataItem(dataItem, true);\r\n\r\n\t\t\t\t\tlet count = gridInterval.count;\r\n\r\n\t\t\t\t\t// so that labels of week would always be at the beginning of the grid\r\n\t\t\t\t\tif (timeUnit == \"week\") {\r\n\t\t\t\t\t\tdataItem.setRaw(\"labelEndValue\", value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (minorGridEnabled) {\r\n\t\t\t\t\t\tlet timeUnit2 = gridInterval.timeUnit;\r\n\t\t\t\t\t\tif (timeUnit2 == \"week\") {\r\n\t\t\t\t\t\t\ttimeUnit2 = \"day\";\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (count > 1 || gridInterval.timeUnit == \"week\") {\r\n\t\t\t\t\t\t\t//let labelEndValue = $time.round(new Date(value), timeUnit2, 1, firstDay, utc, undefined, timezone).getTime() + $time.getDuration(timeUnit2, this._getM(timeUnit2));\r\n\t\t\t\t\t\t\tlet labelEndValue = $time.roun(value, timeUnit2, 1, root) + $time.getDuration(timeUnit2, this._getM(timeUnit2));\r\n\t\t\t\t\t\t\tlet index = this.valueToIndex(labelEndValue)\r\n\t\t\t\t\t\t\tlabelEndValue = dates[index];\r\n\t\t\t\t\t\t\tif (labelEndValue == value) {\r\n\t\t\t\t\t\t\t\tlet next = dates[index + 1];\r\n\t\t\t\t\t\t\t\tif (next) {\r\n\t\t\t\t\t\t\t\t\tlabelEndValue = next;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tlabelEndValue += minorDuration;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tdataItem.setRaw(\"labelEndValue\", labelEndValue);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcount = 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._prepareDataItem(dataItem, count);\r\n\r\n\t\t\t\t\tif (label && previousDataItem) {\r\n\t\t\t\t\t\tif (renderer.getPrivate(\"letter\") == \"X\") {\r\n\t\t\t\t\t\t\tlet previousLabel = previousDataItem.get(\"label\");\r\n\t\t\t\t\t\t\tif (previousLabel) {\r\n\t\t\t\t\t\t\t\tlet x = label.x();\r\n\t\t\t\t\t\t\t\tlet previousX = previousLabel.x();\r\n\r\n\t\t\t\t\t\t\t\tif (x - previousX < minDistance) {\r\n\t\t\t\t\t\t\t\t\tlet worse = this._pickWorse(previousDataItem, dataItem, gridInterval)\r\n\t\t\t\t\t\t\t\t\tif (worse) {\r\n\t\t\t\t\t\t\t\t\t\tworse.get(\"label\")?.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// todo y?\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// MINOR GRID\r\n\t\t\t\t\tif (minorGridInterval) {\r\n\t\t\t\t\t\tthis._addMinorGrid(value, endValue, minorDuration, minorGridInterval);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ti++;\r\n\r\n\t\t\t\t\tif (label && label.getPrivate(\"visible\")) {\r\n\t\t\t\t\t\tpreviousDataItem = dataItem;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpreviousValue = value;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t$array.each(this.series, (series) => {\r\n\t\t\t\tif (series.inited) {\r\n\t\t\t\t\tseries._markDirtyAxes();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis._updateGhost();\r\n\t}\r\n\r\n\tprotected _pickWorse(dataItemA: DataItem<IGaplessDateAxisDataItem>, dataItemB: DataItem<IGaplessDateAxisDataItem>, interval: ITimeInterval): DataItem<IGaplessDateAxisDataItem> {\r\n\t\tconst timeUnit = interval.timeUnit;\r\n\r\n\t\tconst valueA = dataItemA.get(\"value\", 0);\r\n\t\tconst valueB = dataItemB.get(\"value\", 0);\r\n\r\n\t\tif (timeUnit == \"hour\") {\r\n\t\t\tif (new Date(valueA).getDate() != new Date(valueB).getDate()) {\r\n\t\t\t\treturn dataItemA;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn dataItemB;\r\n\t}\r\n\r\n\tprotected _addMinorGrid(startValue: number, endValue: number, minorDuration: number, gridInterval: ITimeInterval) {\r\n\t\tconst minorFormats = this.get(\"minorDateFormats\", this.get(\"dateFormats\"))!;\r\n\t\tconst mTimeUnit = gridInterval.timeUnit;\r\n\t\tlet value = startValue + $time.getDuration(mTimeUnit, this._getM(mTimeUnit));\r\n\t\t//value = $time.round(new Date(value), mTimeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n\t\tvalue = $time.roun(value, mTimeUnit, 1, this._root);\r\n\r\n\t\tlet maxValue = endValue - minorDuration * 0.5;\r\n\r\n\t\tlet minorSelectedItems: Array<number> = this._getIndexes(value, maxValue, gridInterval, value);\r\n\t\tconst dates = this._getDates();\r\n\r\n\t\t$array.each(minorSelectedItems, (index) => {\r\n\t\t\tlet minorDataItem: DataItem<this[\"_dataItemSettings\"]>;\r\n\t\t\tif (this.minorDataItems.length < this._m + 1) {\r\n\t\t\t\tminorDataItem = new DataItem<this[\"_dataItemSettings\"]>(this, undefined, {});\r\n\t\t\t\tthis.minorDataItems.push(minorDataItem);\r\n\t\t\t\tthis.processDataItem(minorDataItem);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tminorDataItem = this.minorDataItems[this._m];\r\n\t\t\t}\r\n\r\n\t\t\tvalue = dates[index];\r\n\t\t\tminorDataItem.setRaw(\"value\", value);\r\n\t\t\tminorDataItem.setRaw(\"endValue\", value + minorDuration);\r\n\t\t\tminorDataItem.setRaw(\"index\", index);\r\n\r\n\t\t\tthis._createAssets(minorDataItem, [\"minor\"], true);\r\n\r\n\t\t\tconst label = minorDataItem.get(\"label\");\r\n\t\t\tif (label) {\r\n\t\t\t\tif (this.get(\"renderer\").get(\"minorLabelsEnabled\")) {\r\n\t\t\t\t\tlet date = new Date(value);\r\n\t\t\t\t\tlet format = minorFormats[mTimeUnit];\r\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlabel.setPrivate(\"visible\", false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._toggleDataItem(minorDataItem, true);\r\n\t\t\tthis._prepareDataItem(minorDataItem, 1);\r\n\t\t\tthis._m++;\r\n\t\t})\r\n\t}\r\n\r\n\r\n\tprotected _getIndexes(value: number, maxValue: number, interval: ITimeInterval, firstValue: number): Array<number> {\r\n\t\tconst items: Array<number> = [];\r\n\t\tconst timeUnit = interval.timeUnit;\r\n\t\tconst count = interval.count;\r\n\t\tconst mmm = this._getM(timeUnit);\r\n\r\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\r\n\t\tconst root = this._root;\r\n\t\tconst dates = this._getDates();\r\n\r\n\t\tlet c = count - 1;\r\n\t\tlet previousValue = -Infinity;\r\n\r\n\t\tlet duration = $time.getDuration(timeUnit, mmm);\r\n\t\tlet fullDuration = $time.getDuration(timeUnit, count * mmm);\r\n\t\tlet originalValue = value;\r\n\r\n\t\tif (timeUnit == \"day\") {\r\n\t\t\tvalue = firstValue;\r\n\t\t}\r\n\r\n\t\twhile (value <= maxValue) {\r\n\t\t\t//value = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\tvalue = $time.roun(value, timeUnit, count, root);\r\n\r\n\t\t\tlet index = this.valueToIndex(value);\r\n\t\t\tlet realValue = dates[index];\r\n\r\n\t\t\tif (timeUnit == \"day\" && baseInterval.timeUnit == \"day\") {\r\n\t\t\t\tif (this._hasDate(value)) {\r\n\t\t\t\t\tc++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (c == count) {\r\n\t\t\t\t\tif (value >= originalValue - fullDuration * 2) {\r\n\t\t\t\t\t\t$array.move(items, index);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tc = 0;\r\n\t\t\t\t}\r\n\t\t\t\tvalue += duration;\r\n\t\t\t\t//value = $time.round(new Date(value), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\tvalue = $time.roun(value, timeUnit, 1, root);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (realValue < value) {\r\n\t\t\t\t\tfor (let i = index, len = dates.length; i < len; i++) {\r\n\t\t\t\t\t\trealValue = dates[i];\r\n\t\t\t\t\t\tif (realValue >= value) {\r\n\t\t\t\t\t\t\tindex = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$array.move(items, index);\r\n\r\n\t\t\t\tvalue += fullDuration;\r\n\t\t\t\t//value = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\tvalue = $time.roun(value, timeUnit, count, root);\r\n\t\t\t}\r\n\r\n\t\t\tif (value == previousValue) {\r\n\t\t\t\tvalue += fullDuration + duration;\r\n\t\t\t\t//value = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\tvalue = $time.roun(value, timeUnit, count, root);\r\n\t\t\t}\r\n\t\t\tif (value == previousValue) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tpreviousValue = value;\r\n\t\t}\r\n\r\n\t\treturn items;\r\n\t}\r\n\r\n\tprotected _hasDate(time: number) {\r\n\t\tconst result = $array.getSortedIndex(this._getDates(), (date) => {\r\n\t\t\treturn $order.compareNumber(date, time);\r\n\t\t});\r\n\r\n\t\treturn result.found;\r\n\t}\r\n\tprotected _nextTime(time: number, count: number, _baseInterval: ITimeInterval) {\r\n\t\tlet index = $math.fitToRange(this.valueToIndex(time) + count, 0, this._dates.length - 1);\r\n\t\treturn this._dates[index];\r\n\t}\r\n}","import { Graphics, IGraphicsPrivate, IGraphicsSettings } from \"../../../core/render/Graphics\";\n\nexport interface IGridSettings extends IGraphicsSettings {\n\n\t/**\n\t * Relative location of the grid line within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n}\n\nexport interface IGridPrivate extends IGraphicsPrivate {\n}\n\n/**\n * Creates an axis grid line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\n * @important\n */\nexport class Grid extends Graphics {\n\n\tdeclare public _settings: IGridSettings;\n\tdeclare public _privateSettings: IGridPrivate;\n\n\tpublic static className: string = \"Grid\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Grid.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IValueAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * Override minimum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the minimum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmin?: number;\n\n\t/**\n\t * Override maximum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the maximum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmax?: number;\n\n\t/**\n\t * Force axis scale to be precisely at values as set in `min` and/or `max`.\n\t *\n\t * In case `min` and/or `max` is not set, the axis will fix its scale to\n\t * precise lowest and highest values available through all of the series\n\t * attached to it.\n\t *\n\t * This effectively locks the axis from auto-zooming itself when chart\n\t * is zoomed in.\n\t *\n\t * If you need to zoom to actual low/high values within currently visible\n\t * scope, use `strictMinMaxSelection` instead.\n\t *\n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tstrictMinMax?: boolean;\n\n\t/**\n\t * Force axis to auto-zoom to exact lowest and highest values from attached\n\t * series' data items within currently visible range.\n\t * \n\t * This is a good feature when your series is plotted from derivative values,\n\t * like `valueYChangeSelection` as it helps to avoid frequent jumping of\n\t * series to adjusted min and max of the axis.\n\t * \n\t * This will not work if strictMinMax is set to true (the axis will not zoom at all in this case).\n\t * \n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @since 5.1.11\n\t */\n\tstrictMinMaxSelection?: boolean;\n\n\t/**\n\t * If set to `true` axis will use logarithmic scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * Treat zero values as some other value.\n\t *\n\t * Useful in situations where zero would result in error, i.e. logarithmic\n\t * scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\ttreatZeroAs?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated minimum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000` and\n\t * minimum value is `0`, the new minimum value will be `-100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMin?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated maximum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000`, the\n\t * axis will now show maximum value of `1100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMax?: number;\n\n\t/**\n\t * Base value, which indicates the threshold between \"positive\" and \"negative\"\n\t * values.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Base_value} for more info\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * Maximum number of decimals to allow in axis labels.\n\t *\n\t * This setting not only affects formatting of the labels, but also where and\n\t * how many grid/labels are placed on the axis.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tmaxPrecision?: number;\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<IValueAxisDataItem>) => void;\n\n\t/**\n\t * Number format to use for axis labels.\n\t *\n\t * If not set, will use format set in global number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tnumberFormat?: string;\n\n\t/**\n\t * A numeric format used for numbers displayed in axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\ttooltipNumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * If set, will use greater precision for the axis tooltip than the one for\n\t * axis' actual labels.\n\t *\n\t * E.g. if axis displays labels with one decimal (`1.0`, `1.1`, `1.2`) setting\n\t * this setting to `1` would allow two decimals in axis tooltip, e.g. `1.15`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\textraTooltipPrecision?: number;\n\n\t/**\n\t * If your series relies on dynamically calculated values, like value\n\t * changes, percents, or total sums, set this to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Calculated_values} for more info\n\t */\n\tcalculateTotals?: boolean;\n\n\t/**\n\t * This setting can be set to an instance of another [[ValueAxis]].\n\t *\n\t * If set the grid of this axis will be synced with grid of the target axis.\n\t *\n\t * NOTE: this is not 100% guaranteed to work. In some rare cases perfect\n\t * sync might not be possible.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Syncing_grid} for more info\n\t */\n\tsyncWithAxis?: ValueAxis<AxisRenderer>;\n\n\t/**\n\t * If set to `false`, the axis won't be auto-zoomed to a selection (this\n\t * works only if the other axis is a `DateAxis` or a `CategoryAxis`).\n\t * \n\t * IMPORTANT: This setting will be ignored if both X and Y axes are\n\t * a `ValueAxis`.\n\t *\n\t * @since 5.2.20\n\t * @default true\n\t */\n\tautoZoom?: boolean;\n\n}\n\nexport interface IValueAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Value of the data item.\n\t */\n\tvalue?: number;\n\n\t/**\n\t * End value for axis items that span multiple values, like axis ranges.\n\t */\n\tendValue?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tlabelEndValue?: number;\n\n\t/**\n\t * If set to `true` the values fo this data item will be factored in when\n\t * calculating scale of the [[ValueAxis]]. Useful for axis ranges.\n\t * \n\t * @since 5.1.4\n\t */\n\taffectsMinMax?: boolean;\n\n}\n\nexport interface IMinMaxStep {\n\tmin: number;\n\tmax: number;\n\tstep: number;\n}\n\nexport interface IValueAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Calculated current minimum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmin?: number;\n\n\t/**\n\t * Calculated current maximum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmax?: number;\n\n\t/**\n\t * A minimum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `min` is reflecting current intermediate value, whereas `minFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tminFinal?: number;\n\n\t/**\n\t * A maximum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `max` is reflecting current intermediate value, whereas `maxFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tmaxFinal?: number;\n\n\t/**\n\t * Calculated minimum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMin?: number;\n\n\t/**\n\t * Calculated maximum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMax?: number;\n\n\t/**\n\t * A target minimum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMin` is reflecting current intermediate value,\n\t * whereas `selectionMinFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMinFinal?: number;\n\n\t/**\n\t * A target maximum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMax` is reflecting current intermediate value,\n\t * whereas `selectionMaxFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMaxFinal?: number;\n\n\t/**\n\t * When selection step changes, it might change during axis zoom animation.\n\t *\n\t * `selectionStepFinal` will show what step will be when animation is\n\t * finished.\n\t * \n\t * @readonly\n\t */\n\tselectionStepFinal?: number;\n\n\t/**\n\t * Value step between grid lines.\n\t * \n\t * @readonly\n\t */\n\tstep?: number;\n\n\t/**\n\t * Decimal places used when formatting axis labels.\n\t * \n\t * @readonly\n\t */\n\tstepDecimalPlaces?: number;\n\n}\n\nexport interface IValueAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a value axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\n * @important\n */\nexport class ValueAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"ValueAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([ValueAxis.className]);\n\n\tdeclare public _settings: IValueAxisSettings<R>;\n\tdeclare public _privateSettings: IValueAxisPrivate;\n\tdeclare public _dataItemSettings: IValueAxisDataItem;\n\tdeclare public _events: IValueAxisEvents;\n\n\tprotected _dirtyExtremes: boolean = false;\n\tprotected _dirtySelectionExtremes: boolean = false;\n\tprotected _dseHandled = false;\n\tprotected _deltaMinMax: number = 1;\n\tpublic _minReal: number | undefined;\n\tpublic _maxReal: number | undefined;\n\n\tprotected _minRealLog: number | undefined;\n\n\tprotected _baseValue: number = 0;\n\tprotected _syncDp?: MultiDisposer;\n\tprotected _minLogAdjusted: number = 1;\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t\tthis._dirtyExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t\tthis._dirtySelectionExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.setPrivateRaw(\"name\", \"value\");\n\t\tthis.addTag(\"value\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"syncWithAxis\")) {\n\t\t\tlet previousValue = this._prevSettings.syncWithAxis;\n\t\t\tif (previousValue) {\n\t\t\t\tif (this._syncDp) {\n\t\t\t\t\tthis._syncDp.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tthis._syncDp = new MultiDisposer([\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMinFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t}),\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t}\n\n\t\tlet someDirty = false;\n\t\tif (this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\n\t\t\tsomeDirty = true;\n\t\t\tthis.ghostLabel?.set(\"text\", \"\");\n\t\t}\n\n\t\t//if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\n\t\tif (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || someDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\")) {\n\t\t\tthis._getMinMax();\n\t\t\tthis._dirtyExtremes = false;\n\t\t}\n\n\t\tthis._handleSizeDirty();\n\n\t\tif (this._dirtySelectionExtremes && !this._isPanning && this.get(\"autoZoom\", true)) {\n\t\t\tconst chart = this.chart;\n\t\t\tlet getMM = false;\n\t\t\t// #1563\n\t\t\tif (chart) {\n\t\t\t\tconst letter = this.get(\"renderer\").getPrivate(\"letter\");\n\t\t\t\tif (letter == \"Y\") {\n\t\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.className != \"ValueAxis\") {\n\t\t\t\t\t\t\tgetMM = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse if (letter == \"X\") {\n\t\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.className != \"ValueAxis\") {\n\t\t\t\t\t\t\tgetMM = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (getMM) {\n\t\t\t\tthis._getSelectionMinMax();\n\t\t\t}\n\t\t\tthis._dirtySelectionExtremes = false;\n\t\t}\n\n\t\tthis._groupData();\n\n\t\tif (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\n\t\t\tthis._handleRangeChange();\n\t\t\tthis._prepareAxisItems();\n\t\t\tthis._updateAxisRanges();\n\t\t}\n\n\t\tthis._baseValue = this.baseValue();\n\n\t}\n\n\tprotected _handleSizeDirty() {\n\t\tif (this._sizeDirty && !this._dseHandled) {\n\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\tthis._dseHandled = true;\n\n\t\t\tif (this.getPrivate(\"selectionMinFinal\") != this.getPrivate(\"selectionMin\") || this.getPrivate(\"selectionMaxFinal\") != this.getPrivate(\"selectionMax\")) {\n\t\t\t\tthis._dirtySelectionExtremes = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _clearDirty(): void {\n\t\tsuper._clearDirty();\n\t\tthis._dseHandled = false;\n\t}\n\n\tprotected _groupData() {\n\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst numberFormat = this.get(\"numberFormat\");\n\t\tconst formatter = this.getNumberFormatter();\n\n\t\tlet text = \"\";\n\n\t\tif (numberFormat) {\n\t\t\ttext = formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\ttext = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\n\t\t}\n\t\treturn text;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t\tconst step = this.getPrivate(\"step\")!;\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")!;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! + step;\n\n\t\t\tlet value = selectionMin - step;\n\t\t\tlet differencePower = 1;\n\t\t\tlet minLog: number = min;\n\n\t\t\tif (logarithmic) {\n\t\t\t\tvalue = this._minLogAdjusted;\n\n\t\t\t\tif (value < selectionMin) {\n\t\t\t\t\twhile (value < selectionMin) {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tminLog = value;\n\n\t\t\t\tif (minLog <= 0) {\n\t\t\t\t\tlet minRealLog = this._minRealLog;\n\t\t\t\t\tif (!$type.isNumber(minRealLog)) {\n\t\t\t\t\t\tminRealLog = 1;\n\t\t\t\t\t}\n\t\t\t\t\tminLog = Math.pow(10, Math.log(minRealLog) * Math.LOG10E);\n\n\t\t\t\t\tif (step < 1) {\n\t\t\t\t\t\tif ($type.isNumber(this._minRealLog)) {\n\t\t\t\t\t\t\tminLog = this._minRealLog;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tminLog = Math.pow(10, -50);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdifferencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\n\n\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E - 50);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/// minor grid\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\n\t\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\n\n\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t\tconst stepAdjusted = Math.round(step / stepPower);\n\n\t\t\tlet minorGridCount = 2;\n\n\t\t\tif ($math.round(stepAdjusted / 5, 10) % 1 == 0) {\n\t\t\t\tminorGridCount = 5;\n\t\t\t}\n\n\t\t\tif ($math.round(stepAdjusted / 10, 10) % 1 == 0) {\n\t\t\t\tminorGridCount = 10;\n\t\t\t}\n\n\t\t\tlet minorStep = step / minorGridCount;\n\n\t\t\t// end of minor grid\n\t\t\tlet i = 0;\n\t\t\tlet m = 0;\n\t\t\tlet previous = -Infinity;\n\n\t\t\twhile (value < selectionMax) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._formatText(value));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem);\n\n\t\t\t\tlet nextValue = value;\n\t\t\t\tif (!logarithmic) {\n\t\t\t\t\tnextValue += step;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\tnextValue = Math.pow(10, Math.log(minLog) * Math.LOG10E + i - 50);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnextValue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// minor grid\n\t\t\t\tif (minorGridEnabled) {\n\t\t\t\t\tlet minorValue = value + minorStep;\n\n\t\t\t\t\tif (logarithmic) {\n\t\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\t\tlet minorMinMaxStep = this._adjustMinMax(value, nextValue, 10);\n\t\t\t\t\t\t\tminorStep = minorMinMaxStep.step;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tminorValue = value + minorStep;\n\t\t\t\t\t}\n\n\t\t\t\t\twhile (minorValue < nextValue - step * 0.00000000001) {\n\t\t\t\t\t\tlet minorDataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\t\t\tif (this.minorDataItems.length < m + 1) {\n\t\t\t\t\t\t\tminorDataItem = new DataItem(this, undefined, {});\n\t\t\t\t\t\t\tthis.minorDataItems.push(minorDataItem);\n\t\t\t\t\t\t\tthis.processDataItem(minorDataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tminorDataItem = this.minorDataItems[m];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._createAssets(minorDataItem, [\"minor\"], true);\n\t\t\t\t\t\tthis._toggleDataItem(minorDataItem, true);\n\t\t\t\t\t\tminorDataItem.setRaw(\"value\", minorValue);\n\n\t\t\t\t\t\tconst minorLabel = minorDataItem.get(\"label\");\n\t\t\t\t\t\tif (minorLabel) {\n\t\t\t\t\t\t\tif (minorLabelsEnabled) {\n\t\t\t\t\t\t\t\tminorLabel.set(\"text\", this._formatText(minorValue));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tminorLabel.setPrivate(\"visible\", false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._prepareDataItem(minorDataItem);\n\t\t\t\t\t\tminorValue += minorStep;\n\t\t\t\t\t\tm++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvalue = nextValue;\n\n\t\t\t\tif (previous == value) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\t\t\t\tif (stepPower < 1 && !logarithmic) {\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\n\t\t\t\t\t// round value to avoid floating point issues\n\t\t\t\t\tvalue = $math.round(value, decCount);\n\t\t\t\t}\n\t\t\t\ti++;\n\n\t\t\t\t// #103520\n\t\t\t\tif (logarithmic && differencePower <= 2) {\n\t\t\t\t\tif (value - step < step) {\n\t\t\t\t\t\tvalue = step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprevious = value;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t\t}\n\n\t\t\tfor (let j = m; j < this.minorDataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.minorDataItems[j], false);\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis._updateGhost();\n\t\t}\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\t\tlet value = dataItem.get(\"value\")!;\n\t\tlet endValue = dataItem.get(\"endValue\");\n\n\t\tlet position = this.valueToPosition(value);\n\n\t\tlet endPosition = position;\n\t\tlet fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\")!);\n\n\t\tif ($type.isNumber(endValue)) {\n\t\t\tendPosition = this.valueToPosition(endValue);\n\t\t\tfillEndPosition = endPosition;\n\t\t}\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tif (endValue == null) {\n\t\t\t\tfillEndPosition = position;\n\t\t\t}\n\t\t}\n\n\t\tlet labelEndPosition = endPosition;\n\n\t\tlet labelEndValue = dataItem.get(\"labelEndValue\");\n\t\tif (labelEndValue != null) {\n\t\t\tlabelEndPosition = this.valueToPosition(labelEndValue);\n\t\t}\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, labelEndPosition, count);\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\trenderer.updateGrid(grid, position, endPosition);\n\t\tif (grid) {\n\t\t\tif (value == this.get(\"baseValue\", 0)) {\n\t\t\t\tgrid.addTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t\telse if (grid.hasTag(\"base\")) {\n\t\t\t\tgrid.removeTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, labelEndPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tif (!dataItem.get(\"isRange\")) {\n\t\t\tconst fillRule = this.get(\"fillRule\");\n\t\t\tif (fillRule) {\n\t\t\t\tfillRule(dataItem)\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleRangeChange() {\n\t\tlet selectionMin: number = this.positionToValue(this.get(\"start\", 0));\n\t\tlet selectionMax: number = this.positionToValue(this.get(\"end\", 1));\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\n\t\tthis.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\n\n\t\tselectionMin = $math.round(selectionMin, stepDecimalPlaces);\n\t\tselectionMax = $math.round(selectionMax, stepDecimalPlaces);\n\n\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet step = minMaxStep.step;\n\t\tselectionMin = minMaxStep.min;\n\t\tselectionMax = minMaxStep.max;\n\n\t\tif (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\n\t\t\t// do not change to setPrivate, will cause SO\n\t\t\tthis.setPrivateRaw(\"selectionMin\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMax\", selectionMax);\n\n\t\t\tthis.setPrivateRaw(\"step\", step);\n\t\t}\n\t}\n\n\t/**\n\t * Converts a relative position to a corresponding numeric value from axis\n\t * scale.\n\t *\n\t * @param   position  Relative position\n\t * @return            Value\n\t */\n\tpublic positionToValue(position: number): number {\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn position * (max - min) + min;\n\t\t}\n\t\telse {\n\t\t\treturn Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\n\t\t}\n\t}\n\n\t/**\n\t * Convers value to a relative position on axis.\n\t *\n\t * @param   value  Value\n\t * @return         Relative position\n\t */\n\tpublic valueToPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic valueToFinalPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"minFinal\")!;\n\t\tconst max = this.getPrivate(\"maxFinal\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getX(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value);\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getY(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value)\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number) {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * Returns relative position of axis' `baseValue`.\n\t *\n\t * @return  Base value position\n\t */\n\tpublic basePosition(): number {\n\t\treturn this.valueToPosition(this.baseValue());\n\t}\n\n\t/**\n\t * Base value of the [[ValueAxis]], which determines positive and negative\n\t * values.\n\t *\n\t * @return Base value\n\t */\n\tpublic baseValue(): number {\n\t\tconst min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\n\t\tconst max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\n\t\tlet baseValue = this.get(\"baseValue\", 0);\n\n\t\tif (baseValue < min) {\n\t\t\tbaseValue = min;\n\t\t}\n\n\t\tif (baseValue > max) {\n\t\t\tbaseValue = max\n\t\t}\n\n\t\treturn baseValue;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic cellEndValue(value: number): number {\n\t\treturn value;\n\t}\n\n\tprotected fixSmallStep(step: number): number {\n\t\t// happens because of floating point error\n\t\tif (1 + step === 1) {\n\t\t\tstep *= 2;\n\t\t\treturn this.fixSmallStep(step);\n\t\t}\n\t\treturn step;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\treturn min;\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\treturn max;\n\t}\n\n\tpublic _calculateTotals() {\n\t\tif (this.get(\"calculateTotals\")) {\n\t\t\tlet series = this.series[0];\n\t\t\tif (series) {\n\t\t\t\tlet startIndex = series.startIndex();\n\n\t\t\t\tif (series.dataItems.length > 0) {\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t}\n\t\t\t\t\tlet endIndex = series.endIndex();\n\t\t\t\t\tif (endIndex < series.dataItems.length) {\n\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet field: string | undefined;\n\t\t\t\t\tlet vc: string | undefined;\n\n\t\t\t\t\tif (series.get(\"yAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueY\";\n\t\t\t\t\t\tvc = \"vcy\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"xAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueX\";\n\t\t\t\t\t\tvc = \"vcx\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet fieldWorking = field + \"Working\";\n\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tlet sum = 0;\n\t\t\t\t\t\t\tlet total = 0;\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Total\") as any, total);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Sum\") as any, sum);\n\t\t\t\t\t\t\t\t\t\t\tlet totalPercent = value / total * 100;\n\t\t\t\t\t\t\t\t\t\t\tif (total == 0) {\n\t\t\t\t\t\t\t\t\t\t\t\ttotalPercent = 0;\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"TotalPercent\") as any, totalPercent);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getSelectionMinMax() {\n\t\tconst min = this.getPrivate(\"minFinal\");\n\t\tconst max = this.getPrivate(\"maxFinal\");\n\n\t\tconst minDefined = this.get(\"min\");\n\t\tconst maxDefined = this.get(\"max\");\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tconst selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\n\t\tlet strictMinMax = this.get(\"strictMinMax\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tlet selectionMin = max;\n\t\t\tlet selectionMax = min;\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\t\tconst outOfSelection = series.getPrivate(\"outOfSelection\");\n\n\t\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\t\tlet minX = series.getPrivate(\"minX\");\n\t\t\t\t\t\t\tlet maxX = series.getPrivate(\"maxX\");\n\n\t\t\t\t\t\t\t// solves #90085\n\t\t\t\t\t\t\tif (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\n\t\t\t\t\t\t\t\tminX = undefined;\n\t\t\t\t\t\t\t\tmaxX = undefined;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinX\", minX);\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxX\", maxX);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\n\t\t\t\t\t\t\tlet minY = series.getPrivate(\"minY\");\n\t\t\t\t\t\t\tlet maxY = series.getPrivate(\"maxY\");\n\n\t\t\t\t\t\t\t// solves #90085\n\t\t\t\t\t\t\tif (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\n\t\t\t\t\t\t\t\tminY = undefined;\n\t\t\t\t\t\t\t\tmaxY = undefined;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinY\", minY);\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxY\", maxY);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!series.isHidden() && !series.isShowing()) {\n\t\t\t\t\t\tif ($type.isNumber(seriesMin)) {\n\t\t\t\t\t\t\tselectionMin = Math.min(selectionMin, seriesMin);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(seriesMax)) {\n\t\t\t\t\t\t\tselectionMax = Math.max(selectionMax, seriesMax);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.axisRanges.each((range) => {\n\t\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (selectionMin > selectionMax) {\n\t\t\t\t[selectionMin, selectionMax] = [selectionMax, selectionMin]\n\t\t\t}\n\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._minReal)) {\n\t\t\t\t\tselectionMin = this._minReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._maxReal)) {\n\t\t\t\t\tselectionMax = this._maxReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionMin === selectionMax) {\n\t\t\t\tlet smin = selectionMin;\n\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\tselectionMax += this._deltaMinMax;\n\n\t\t\t\tif (selectionMin < min) {\n\t\t\t\t\tlet d = smin - min;\n\t\t\t\t\tif (d == 0) {\n\t\t\t\t\t\td = this._deltaMinMax;\n\t\t\t\t\t}\n\n\t\t\t\t\tselectionMin = smin - d;\n\t\t\t\t\tselectionMax = smin + d;\n\n\t\t\t\t\tstrictMinMax = true;\n\t\t\t\t}\n\n\t\t\t\tlet minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\n\t\t\t\tselectionMin = minMaxStep2.min;\n\t\t\t\tselectionMax = minMaxStep2.max;\n\t\t\t}\n\n\t\t\tlet selectionMinReal = selectionMin;\n\t\t\tlet selectionMaxReal = selectionMax;\n\n\t\t\tlet delta = selectionMax - selectionMin;\n\n\t\t\tselectionMin -= delta * extraMin;\n\t\t\tselectionMax += delta * extraMax;\n\n\t\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\n\n\t\t\tselectionMin = minMaxStep.min;\n\t\t\tselectionMax = minMaxStep.max;\n\n\t\t\tselectionMin = $math.fitToRange(selectionMin, min, max);\n\t\t\tselectionMax = $math.fitToRange(selectionMax, min, max);\n\n\t\t\t// do it for the second time !important\t\t\t\n\t\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\t\tif (!strictMinMax) {\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tminMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\n\n\t\t\t\tif (minMaxStep.min < min) {\n\t\t\t\t\tminMaxStep.min = min;\n\t\t\t\t}\n\n\t\t\t\tif (minMaxStep.max > max) {\n\t\t\t\t\tminMaxStep.max = max;\n\t\t\t\t}\n\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = Math.max(selectionMin, minDefined);\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = Math.min(selectionMax, maxDefined);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionStrictMinMax) {\n\t\t\t\tselectionMin = selectionMinReal - (selectionMaxReal - selectionMinReal) * extraMin;\n\t\t\t\tselectionMax = selectionMaxReal + (selectionMaxReal - selectionMinReal) * extraMax;\n\t\t\t}\n\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = selectionMinReal;\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = selectionMaxReal;\n\t\t\t\t}\n\n\t\t\t\tif (selectionMax - selectionMin <= 0.00000001) {\n\t\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\t\tselectionMax += this._deltaMinMax;\n\t\t\t\t}\n\n\t\t\t\tlet delta = selectionMax - selectionMin;\n\n\t\t\t\tselectionMin -= delta * extraMin;\n\t\t\t\tselectionMax += delta * extraMax;\n\t\t\t}\n\n\t\t\tif (this.get(\"logarithmic\")) {\n\n\t\t\t\tif (selectionMin <= 0) {\n\t\t\t\t\tselectionMin = selectionMinReal * (1 - Math.min(extraMin, 0.99));\n\t\t\t\t}\n\n\t\t\t\tif (selectionMin < min) {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t\tif (selectionMax > max) {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet len = Math.min(20, Math.ceil(Math.log(this.getPrivate(\"maxZoomFactor\", 100) + 1) / Math.LN10) + 2);\n\n\t\t\tlet start = $math.round(this.valueToFinalPosition(selectionMin), len);\n\t\t\tlet end = $math.round(this.valueToFinalPosition(selectionMax), len);\n\n\t\t\tthis.setPrivateRaw(\"selectionMinFinal\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\n\n\t\t\tthis.zoom(start, end);\n\t\t}\n\t}\n\n\n\tprotected _getMinMax() {\n\t\tlet minDefined = this.get(\"min\");\n\t\tlet maxDefined = this.get(\"max\");\n\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (!this.get(\"strictMinMax\")) {\n\t\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\t\textraMin = 0.1;\n\t\t\t\t}\n\t\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\t\textraMax = 0.2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet minDiff = Infinity;\n\n\t\t$array.each(this.series, (series) => {\n\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minX\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxX\");\n\t\t\t\t}\n\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minY\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxY\");\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\n\t\t\t\t\tmin = Math.min(min, seriesMin);\n\t\t\t\t\tmax = Math.max(max, seriesMax);\n\n\t\t\t\t\tlet diff = seriesMax - seriesMin;\n\n\t\t\t\t\tif (diff <= 0) {\n\t\t\t\t\t\tdiff = Math.abs(seriesMax / 100);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff < minDiff) {\n\t\t\t\t\t\tminDiff = diff;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.axisRanges.each((range) => {\n\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\tif (min <= 0) {\n\t\t\t\t\tmin = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (min <= 0) {\n\t\t\t\tnew Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t}\n\t\t}\n\n\t\tif (min === 0 && max === 0) {\n\t\t\tmax = 0.9;\n\t\t\tmin = -0.9;\n\t\t}\n\n\t\tif ($type.isNumber(minDefined)) {\n\t\t\tmin = minDefined;\n\t\t}\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tmax = maxDefined;\n\t\t}\n\n\t\t// meaning no min/max found on series/ranges and no min/max was defined\n\t\tif (min === Infinity || max === -Infinity) {\n\t\t\tthis.setPrivate(\"minFinal\", undefined);\n\t\t\tthis.setPrivate(\"maxFinal\", undefined);\n\t\t\treturn;\n\t\t}\n\n\t\tif (min > max) {\n\t\t\t[min, max] = [max, min];\n\t\t}\n\n\t\tconst initialMin = min;\n\t\tconst initialMax = max;\n\n\t\t// adapter\n\t\tlet minAdapted = this.adapters.fold(\"min\", min);\n\t\tlet maxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tthis._minRealLog = min;\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\t// DateAxis does some magic here\n\t\tmin = this._fixMin(min);\n\t\tmax = this._fixMax(max);\n\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\t\t\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\n\t\t\tif (max - min !== 0) {\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getDelta(max);\n\t\t\t}\n\n\t\t\tmin -= this._deltaMinMax;\n\t\t\tmax += this._deltaMinMax;\n\t\t}\n\n\t\t// add extras\n\t\tmin -= (max - min) * extraMin;\n\t\tmax += (max - min) * extraMax;\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\t// don't let min go below 0 if real min is >= 0\n\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\tmin = 0;\n\t\t\t}\n\t\t\t// don't let max go above 0 if real max is <= 0\n\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\tmax = 0;\n\t\t\t}\n\t\t}\n\n\t\tthis._minReal = min;\n\t\tthis._maxReal = max;\n\n\t\tlet strictMinMax = this.get(\"strictMinMax\");\n\t\tlet strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\n\t\tif (strictMinMaxSelection) {\n\t\t\tstrictMinMax = strictMinMaxSelection;\n\t\t}\n\n\t\tlet strict = strictMinMax;\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tstrict = true;\n\t\t}\n\n\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(min, max, gridCount, strict);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// do it for the second time with strict true (importat!)\n\t\tminMaxStep = this._adjustMinMax(min, max, gridCount, true);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// return min max if strict\n\t\tif (strictMinMax) {\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tmin = minDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = this._minReal;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tmax = maxDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = this._maxReal;\n\t\t\t}\n\n\t\t\tif (max - min <= 0.00000001) {\n\t\t\t\tmin -= this._deltaMinMax;\n\t\t\t\tmax += this._deltaMinMax;\n\t\t\t}\n\n\t\t\tlet delta = max - min;\n\t\t\tmin -= delta * extraMin;\n\t\t\tmax += delta * extraMax;\n\t\t}\n\n\t\tminAdapted = this.adapters.fold(\"min\", min);\n\t\tmaxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\tif (minDiff == Infinity) {\n\t\t\tminDiff = (max - min)\n\t\t}\n\n\t\t// this is to avoid floating point number error\n\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(max - min)) * Math.LOG10E)) + 5;\n\n\t\tmin = $math.round(min, decCount);\n\t\tmax = $math.round(max, decCount);\n\n\n\n\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\tif (syncWithAxis) {\n\t\t\tminMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\n\t\t\tmin = minMaxStep.min;\n\t\t\tmax = minMaxStep.max;\n\t\t}\n\n\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.max(1, Math.ceil((max - min) / minDiff * this.get(\"maxZoomFactor\", 100))));\n\t\tthis._fixZoomFactor();\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tthis._minLogAdjusted = min;\n\t\t\tmin = this._minReal;\n\t\t\tmax = this._maxReal;\n\n\t\t\tif (min <= 0) {\n\t\t\t\tmin = initialMin * (1 - Math.min(extraMin, 0.99));\n\t\t\t}\n\t\t}\n\n\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tif (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\n\n\t\t\t\tthis.setPrivate(\"minFinal\", min);\n\t\t\t\tthis.setPrivate(\"maxFinal\", max);\n\t\t\t\tthis._saveMinMax(min, max);\n\n\t\t\t\tconst duration = this.get(\"interpolationDuration\", 0);\n\t\t\t\tconst easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tthis.animatePrivate({ key: \"min\", to: min, duration, easing });\n\t\t\t\tthis.animatePrivate({ key: \"max\", to: max, duration, easing });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _fixZoomFactor() {\n\t}\n\n\tprotected _getDelta(max: number) {\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tthis._deltaMinMax = power;\n\t}\n\n\tprotected _saveMinMax(_min: number, _max: number) {\n\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\t// will fail if 0\n\t\tif (gridCount <= 1) {\n\t\t\tgridCount = 1;\n\t\t}\n\n\t\tgridCount = Math.round(gridCount);\n\n\t\tlet initialMin: number = min;\n\t\tlet initialMax: number = max;\n\n\t\tlet difference = max - min;\n\n\t\t// in case min and max is the same, use max\n\t\tif (difference === 0) {\n\t\t\tdifference = Math.abs(max);\n\t\t}\n\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tlet extra: number = power;\n\t\tif (strictMode) {\n\t\t\textra = 0;\n\t\t}\n\n\t\t// round down min\n\t\tif (strictMode) {\n\t\t\tmin = Math.floor(min / power) * power;\n\t\t\t// round up max\n\t\t\tmax = Math.ceil(max / power) * power;\n\t\t}\n\t\telse {\n\t\t\tmin = Math.ceil(min / power) * power - extra;\n\t\t\t// round up max\n\t\t\tmax = Math.floor(max / power) * power + extra;\n\t\t}\n\n\t\t// don't let min go below 0 if real min is >= 0\n\t\tif (min < 0 && initialMin >= 0) {\n\t\t\tmin = 0;\n\t\t}\n\t\t// don't let max go above 0 if real max is <= 0\n\t\tif (max > 0 && initialMax <= 0) {\n\t\t\tmax = 0;\n\t\t}\n\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\n\t\tpower = Math.pow(10, Math.floor(exponent));\n\t\tpower = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\n\n\t\t// approximate difference between two grid lines\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t// the step should divide by  2, 5, and 10.\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\n\n\n\t\tif (stepDivisor > 5) {\n\t\t\tstepDivisor = 10;\n\t\t}\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\n\t\t\tstepDivisor = 5;\n\t\t}\n\n\t\t// now get real step\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\n\n\n\t\tlet maxPrecision = this.get(\"maxPrecision\");\n\t\tif ($type.isNumber(maxPrecision)) {\n\n\t\t\tlet ceiledStep = $math.ceil(step, maxPrecision);\n\t\t\tif (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\n\t\t\t\tstep = ceiledStep;\n\t\t\t\tif (step == 0) {\n\t\t\t\t\tstep = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet decCount: number = 0;\n\t\t// in case numbers are smaller than 1\n\t\tif (stepPower < 1) {\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\n\t\t\t// round step\n\t\t\tstep = $math.round(step, decCount);\n\t\t}\n\n\t\t// final min and max\n\t\tlet minCount = Math.floor(min / step);\n\n\t\tmin = $math.round(step * minCount, decCount);\n\n\t\tlet maxCount: number;\n\n\t\tif (!strictMode) {\n\t\t\tmaxCount = Math.ceil(max / step);\n\t\t}\n\t\telse {\n\t\t\tmaxCount = Math.floor(max / step);\n\t\t}\n\n\t\tif (maxCount === minCount) {\n\t\t\tmaxCount++;\n\t\t}\n\n\t\tmax = $math.round(step * maxCount, decCount);\n\n\t\tif (max < initialMax) {\n\t\t\tmax = max + step;\n\t\t}\n\n\t\tif (min > initialMin) {\n\t\t\tmin = min - step;\n\t\t}\n\n\n\t\tstep = this.fixSmallStep(step);\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\tconst numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\n\t\tconst formatter = this.getNumberFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\tif (numberFormat) {\n\t\t\treturn formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\treturn formatter.format(value, undefined, decimals);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tlet index: number | undefined = undefined;\n\t\tlet oldDiff: number;\n\t\t$array.each(series.dataItems, (dataItem, i) => {\n\t\t\tconst diff = Math.abs(dataItem.get(fieldName) - value);\n\t\t\tif (index === undefined || diff < oldDiff) {\n\t\t\t\tindex = i;\n\t\t\t\toldDiff = diff;\n\t\t\t}\n\t\t});\n\n\t\tif (index != null) {\n\t\t\treturn series.dataItems[index];\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", this.getPrivate(\"min\", 0));\n\t\tconst max = this.getPrivate(\"maxFinal\", this.getPrivate(\"max\", 1));\n\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t}\n\t}\n\n\n\t/**\n\t * Syncs with a target axis.\n\t *\n\t * @param  min  Min\n\t * @param  max  Max\n\t * @param  step Step\n\t */\n\tprotected _syncAxes(min: number, max: number, step: number, syncMin: number, syncMax: number, syncStep: number) {\n\t\tlet axis = this.get(\"syncWithAxis\");\n\t\tif (axis) {\n\t\t\tlet count: number = Math.round(syncMax - syncMin) / syncStep;\n\t\t\tlet currentCount = Math.round((max - min) / step);\n\n\t\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\n\t\t\t\tlet synced = false;\n\t\t\t\tlet c = 0\n\t\t\t\tlet diff = (max - min) * 0.01;\n\t\t\t\tlet omin = min;\n\t\t\t\tlet omax = max;\n\t\t\t\tlet ostep = step;\n\n\t\t\t\twhile (synced != true) {\n\t\t\t\t\tsynced = this._checkSync(omin, omax, ostep, count);\n\t\t\t\t\tc++;\n\t\t\t\t\tif (c > 500) {\n\t\t\t\t\t\tsynced = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!synced) {\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\n\t\t\t\t\t\t\tomin = min - diff * c;\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\n\t\t\t\t\t\t\t\tomin = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tomax = max + diff * c;\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\n\t\t\t\t\t\t\t\tomax = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\n\t\t\t\t\t\tomin = minMaxStep.min;\n\t\t\t\t\t\tomax = minMaxStep.max;\n\t\t\t\t\t\tostep = minMaxStep.step;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmin = omin;\n\t\t\t\t\t\tmax = omax;\n\t\t\t\t\t\tstep = ostep;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns `true` if axis needs to be resunced with some other axis.\n\t */\n\tprotected _checkSync(min: number, max: number, step: number, count: number): boolean {\n\t\tlet currentCount = (max - min) / step;\n\t\tfor (let i = 1; i < count; i++) {\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\tlet max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\n\t\tlet min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\n\n\t\tif ($type.isNumber(max) && $type.isNumber(min)) {\n\t\t\treturn this.getPrivate(\"step\", 1) / (max - min);\n\t\t}\n\t\treturn 0.05;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic nextPosition(count?: number) {\n\t\tif (count == null) {\n\t\t\tcount = 1;\n\t\t}\n\n\t\tif (this.get(\"renderer\").getPrivate(\"letter\") == \"Y\") {\n\t\t\tcount *= -1;\n\t\t}\n\n\t\tlet value = this.positionToValue(this.getPrivate(\"tooltipPosition\", 0));\n\t\tvalue += this.getPrivate(\"step\", 1) * count;\n\t\tvalue = $math.fitToRange(value, this.getPrivate(\"selectionMin\", 0), this.getPrivate(\"selectionMax\", 1));\n\n\t\treturn this.toGlobalPosition(this.valueToPosition(value));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { IAxisDataItem } from \"../axes/Axis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n\t/**\n\t * Whether positions of bullets should be calculated based on portion of\n\t * column currently visual (`true`) or the whole length/height of the\n\t * column (`false`).\n\t *\n\t * @default true\n\t */\n\tadjustBulletPosition?: boolean;\n\n\t/**\n\t * If set to `true` will use color of the last visible column for legend\n\t * marker. Otherwise, series `fill`/`stroke` will be used.\n\t *\n\t * @since 5.1.13\n\t */\n\tuseLastColorForLegendMarker?: boolean\n\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tprotected _columnsUpdated: boolean = false;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst len = this.dataItems.length;\n\t\tconst startIndex = Math.max(0, this.startIndex() - 2);\n\t\tconst endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tthis._createGraphics(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"fillPattern\")) {\n\t\t\tif (columnsTemplate.get(\"fillPattern\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fillPattern\", this.get(\"fillPattern\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.startIndex() - 2);\n\t\t\t\tlet endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\tif (i > 0 && startIndex > 0) {\n\t\t\t\t\t\t\tfor (let j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\t\t\tlet dataItem = this.dataItems[j];\n\t\t\t\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._beforeColumnsDraw();\n\n\t\t\t\tlet axisCase: 0 | 1 | 2 = 0;\n\n\t\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\t\t\t\t\taxisCase = 2;\n\t\t\t\t}\n\t\t\t\telse if (xAxis === baseAxis) {\n\t\t\t\t\taxisCase = 0;\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\taxisCase = 1;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous, axisCase);\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._afterColumnsDraw();\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t\tthis._columnsUpdated = true;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\t\tif (!this.getPrivate(\"doNotUpdateLegend\")) {\n\t\t\tthis.updateLegendMarker(this.get(\"tooltipDataItem\"));\n\t\t}\n\t\tsuper._updateChildren();\n\t}\n\n\tpublic _afterChanged(): void {\n\t\tsuper._afterChanged();\n\t\tthis._columnsUpdated = false;\n\t}\n\tprotected _beforeColumnsDraw() {\n\n\t}\n\n\tprotected _afterColumnsDraw() {\n\n\t}\n\n\n\tprotected _createGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\t\tif (!graphics) {\n\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tconst ds = markerRectangle.states.lookup(\"default\")!;\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tconst value = graphics!.get(setting, this.get(setting));\n\t\t\t\t\t\tmarkerRectangle.set(setting, value);\n\t\t\t\t\t\tds.set(setting, value);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet graphicsArray: Array<Graphics> | undefined = dataItem.get(\"rangeGraphics\");\n\t\t\tif (graphicsArray) {\n\t\t\t\t$array.each(graphicsArray, (graphics) => {\n\t\t\t\t\tgraphics.dispose();\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tgraphicsArray = [];\n\t\t\tdataItem.setRaw(\"rangeGraphics\", graphicsArray);\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tif (graphicsArray) {\n\t\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\t}\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tconst graphics = dataItem.get(\"graphics\");\n\t\t\tif (graphics) {\n\t\t\t\tgraphics.dispose();\n\t\t\t\tdataItem.set(\"graphics\", undefined);\n\t\t\t}\n\t\t})\n\n\t\treturn super.createAxisRange(axisDataItem);\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>, axisCase: 0 | 1 | 2) {\n\t\tlet graphics = dataItem.get(\"graphics\")!;\n\n\t\t//if (!graphics) {\n\t\t//\tthis._createGraphics(dataItem);\n\t\t//\tgraphics = dataItem.get(\"graphics\")!;\n\t\t//}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tconst exactLocationX = this.get(\"exactLocationX\", false);\n\t\t//const exactLocationY = this.get(\"exactLocationY\", false);\t\t\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\n\t\t\tif (axisCase == 0) {\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx, exactLocationX);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx, exactLocationX);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (axisCase == 1) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx, exactLocationX);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx, exactLocationX);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"), exactLocationX);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (axisCase == 2) {\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b <= yStart) || (t >= yEnd && b > yEnd) || $type.isNaN(l) || $type.isNaN(t)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tconst tooltipPoint = dataItem.get(\"point\");\n\n\t\tif (tooltipPoint) {\n\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n\t\t\ttooltipPoint.x = point.x + this._x;\n\t\t\ttooltipPoint.y = point.y + this._y;\n\t\t}\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif (this.get(\"adjustBulletPosition\")) {\n\t\t\tif (fitW) {\n\t\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t\t}\n\n\t\t\tif (fitH) {\n\t\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tpublic _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tlet legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (this.get(\"useLastColorForLegendMarker\")) {\n\t\t\tif (!dataItem) {\n\t\t\t\tconst lastDataItem = this.dataItems[this.endIndex() - 1];\n\t\t\t\tif (lastDataItem) {\n\t\t\t\t\tdataItem = lastDataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\tconst ds = markerRectangle.states.lookup(\"default\")!;\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tconst value = graphics.get(setting, this.get(setting));\n\t\t\t\t\t\tmarkerRectangle.set(setting, value);\n\t\t\t\t\t\tds.set(setting, value);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\treturn super._getTooltipTarget(dataItem);\n\t\t}\n\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n","import { RoundedRectangle, IRoundedRectangleSettings, IRoundedRectanglePrivate } from \"../../../core/render/RoundedRectangle\";\n\n\nexport interface ICandlestickSettings extends IRoundedRectangleSettings {\n\n\t/**\n\t * X0 position of the low value in pixels.\n\t */\n\tlowX0?: number;\n\n\t/**\n\t * Y0 position of the low value in pixels.\n\t */\n\tlowY0?: number;\n\n\t/**\n\t * X2 position of the low value in pixels.\n\t */\n\tlowX1?: number;\n\n\t/**\n\t * Y1 position of the low value in pixels.\n\t */\n\tlowY1?: number;\n\n\t/**\n\t * X0 position of the high value in pixels.\n\t */\n\thighX0?: number;\n\n\t/**\n\t * Y0 position of the high value in pixels.\n\t */\n\thighY0?: number;\n\n\t/**\n\t * Xz position of the high value in pixels.\n\t */\n\thighX1?: number;\n\n\t/**\n\t * Y1 position of the high value in pixels.\n\t */\n\thighY1?: number;\n\n\t/**\n\t * Orientation of the cnadlestick.\n\t */\n\torientation?: \"horizontal\" | \"vertical\"\n\n}\n\nexport interface ICandlestickPrivate extends IRoundedRectanglePrivate {\n}\n\n/**\n * A candle element used in a [[CandlestickSeries]].\n */\nexport class Candlestick extends RoundedRectangle {\n\n\tdeclare public _settings: ICandlestickSettings;\n\tdeclare public _privateSettings: ICandlestickPrivate;\n\n\tpublic static className: string = \"Candlestick\";\n\tpublic static classNames: Array<string> = RoundedRectangle.classNames.concat([Candlestick.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"lowX0\") || this.isDirty(\"lowY0\") || this.isDirty(\"lowX1\") || this.isDirty(\"lowY1\") || this.isDirty(\"highX0\") || this.isDirty(\"highX1\") || this.isDirty(\"highY0\") || this.isDirty(\"highY1\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _draw() {\n\t\tsuper._draw();\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX0\", 0), this.get(\"lowY0\", 0));\n\t\tdisplay.lineTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\n\t\tdisplay.moveTo(this.get(\"highX0\", 0), this.get(\"highY0\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { ColumnSeries, IColumnSeriesPrivate, IColumnSeriesSettings, IColumnSeriesDataItem, IColumnSeriesAxisRange } from \"./ColumnSeries\";\nimport { Candlestick } from \"./Candlestick\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $array from \"../../../core/util/Array\";\n\nexport interface ICandlestickSeriesDataItem extends IColumnSeriesDataItem {\n}\n\nexport interface ICandlestickSeriesSettings extends IColumnSeriesSettings {\n}\n\nexport interface ICandlestickSeriesPrivate extends IColumnSeriesPrivate {\n}\n\nexport interface ICandlestickSeriesAxisRange extends IColumnSeriesAxisRange {\n\n\t/**\n\t * A list of [[Candlestick]] element in series.\n\t *\n\t * @readonly\n\t */\n\tcolumns: ListTemplate<Candlestick>\n\n}\n\n/**\n * Candlestick series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class CandlestickSeries extends ColumnSeries {\n\n\tdeclare public _settings: ICandlestickSeriesSettings;\n\tdeclare public _privateSettings: ICandlestickSeriesPrivate;\n\tdeclare public _dataItemSettings: ICandlestickSeriesDataItem;\n\tdeclare public _axisRangeType: ICandlestickSeriesAxisRange;\n\n\tpublic static className: string = \"CandlestickSeries\";\n\tpublic static classNames: Array<string> = ColumnSeries.classNames.concat([CandlestickSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Candlestick>): Candlestick {\n\t\tconst column = listTemplate.make();\n\t\tif (!this.get(\"turboMode\")) {\n\t\t\tthis.mainContainer.children.push(column);\n\t\t}\n\t\telse {\n\t\t\tcolumn.virtualParent = this.chart;\n\t\t}\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of candles in the series.\n\t *\n\t * `columns.template` can be used to configure candles.\n\t *\n\t * @default new ListTemplate<Candlestick>\n\t */\n\tpublic readonly columns: ListTemplate<Candlestick> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => Candlestick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t));\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>, axisCase: 0 | 1 | 2) {\n\t\tsuper._updateGraphics(dataItem, previousDataItem, axisCase);\n\n\t\tconst xAxis = this.getRaw(\"xAxis\");\n\t\tconst yAxis = this.getRaw(\"yAxis\");\n\n\t\tlet vcy = this.get(\"vcy\", 1);\n\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\tlet lx0: number;\n\t\tlet lx1: number;\n\t\tlet ly0: number;\n\t\tlet ly1: number;\n\n\t\tlet hx0: number;\n\t\tlet hx1: number;\n\t\tlet hy0: number;\n\t\tlet hy1: number;\n\n\t\tlet locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\tlet locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\tlet openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\tlet openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\tlet orientation: \"horizontal\" | \"vertical\";\n\n\t\tif (axisCase == 0) {\n\t\t\tlet open = yAxis.getDataItemPositionY(dataItem, this._yOpenField, 1, vcy);\n\t\t\tlet close = yAxis.getDataItemPositionY(dataItem, this._yField, 1, vcy);\n\n\t\t\tly1 = yAxis.getDataItemPositionY(dataItem, this._yLowField, 1, vcy);\n\t\t\thy1 = yAxis.getDataItemPositionY(dataItem, this._yHighField, 1, vcy);\n\n\t\t\thy0 = Math.max(open, close);\n\t\t\tly0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\tlx0 = xAxis.getDataItemPositionX(dataItem, this._xField, startLocation + (endLocation - startLocation) / 2, vcx);\n\t\t\tlx1 = lx0;\n\t\t\thx0 = lx0;\n\t\t\thx1 = lx0;\n\n\t\t\torientation = \"vertical\";\n\t\t}\n\t\telse {\n\t\t\tlet open = xAxis.getDataItemPositionX(dataItem, this._xOpenField, 1, vcx);\n\t\t\tlet close = xAxis.getDataItemPositionX(dataItem, this._xField, 1, vcx);\n\n\t\t\tlx1 = xAxis.getDataItemPositionX(dataItem, this._xLowField, 1, vcx);\n\t\t\thx1 = xAxis.getDataItemPositionX(dataItem, this._xHighField, 1, vcx);\n\n\t\t\thx0 = Math.max(open, close);\n\t\t\tlx0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\tly0 = yAxis.getDataItemPositionY(dataItem, this._yField, startLocation + (endLocation - startLocation) / 2, vcy);\n\t\t\tly1 = ly0;\n\t\t\thy0 = ly0;\n\t\t\thy1 = ly0;\n\n\t\t\torientation = \"horizontal\";\n\t\t}\n\n\t\tthis._updateCandleGraphics(dataItem, lx0, lx1, ly0, ly1, hx0, hx1, hy0, hy1, orientation)\n\t}\n\n\tprotected _updateCandleGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, lx0: number, lx1: number, ly0: number, ly1: number, hx0: number, hx1: number, hy0: number, hy1: number, orientation: \"horizontal\" | \"vertical\") {\n\t\tlet column = dataItem.get(\"graphics\") as Candlestick;\n\n\t\tif (column) {\n\t\t\tlet pl0 = this.getPoint(lx0, ly0);\n\t\t\tlet pl1 = this.getPoint(lx1, ly1);\n\n\t\t\tlet ph0 = this.getPoint(hx0, hy0);\n\t\t\tlet ph1 = this.getPoint(hx1, hy1);\n\n\t\t\tif (this.get(\"turboMode\")) {\n\t\t\t\tconst currentDI = this.allColumnsData[this.allColumnsData.length - 1];\n\t\t\t\tcurrentDI.lowX0 = pl0.x;\n\t\t\t\tcurrentDI.lowY0 = pl0.y;\n\n\t\t\t\tcurrentDI.lowX1 = pl1.x;\n\t\t\t\tcurrentDI.lowY1 = pl1.y;\n\n\t\t\t\tcurrentDI.highX0 = ph0.x;\n\t\t\t\tcurrentDI.highY0 = ph0.y;\n\n\t\t\t\tcurrentDI.highX1 = ph1.x;\n\t\t\t\tcurrentDI.highY1 = ph1.y;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet x = column.x();\n\t\t\t\tlet y = column.y();\n\n\t\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\t\tcolumn.set(\"orientation\", orientation);\n\n\t\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\t\tif (rangeGraphics) {\n\t\t\t\t\t$array.each(rangeGraphics, (column: any) => {\n\t\t\t\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\t\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\t\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\t\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\t\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\t\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\t\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\t\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\t\t\t\tcolumn.set(\"orientation\", orientation);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _afterColumnsDraw() {\n\t\tif (this.get(\"turboMode\")) {\n\n\t\t\tthis.allColumns.set(\"draw\", (display) => {\n\t\t\t\tdisplay.clear();\n\t\t\t\t$array.each(this.allColumnsData, (column) => {\n\t\t\t\t\tdisplay.beginPath();\n\t\t\t\t\tconst w = column.width;\n\t\t\t\t\tconst h = column.height;\n\t\t\t\t\tconst x = column.x;\n\t\t\t\t\tconst y = column.y;\n\t\t\t\t\tconst stroke = column.stroke;\n\t\t\t\t\tconst fill = column.fill;\n\t\t\t\t\tconst strokeWidth = column.strokeWidth;\n\t\t\t\t\tconst strokeOpacity = column.strokeOpacity;\n\t\t\t\t\tconst fillOpacity = column.fillOpacity;\n\n\t\t\t\t\tconst lowX0 = column.lowX0!;\n\t\t\t\t\tconst lowY0 = column.lowY0!;\n\t\t\t\t\tconst lowX1 = column.lowX1!;\n\t\t\t\t\tconst lowY1 = column.lowY1!;\n\n\t\t\t\t\tconst highX0 = column.highX0!;\n\t\t\t\t\tconst highY0 = column.highY0!;\n\t\t\t\t\tconst highX1 = column.highX1!;\n\t\t\t\t\tconst highY1 = column.highY1!;\n\n\t\t\t\t\tdisplay.beginFill(fill, fillOpacity);\n\t\t\t\t\tdisplay.beginPath();\n\t\t\t\t\tdisplay.lineStyle(strokeWidth, stroke, strokeOpacity);\n\t\t\t\t\tdisplay.drawRect(x, y, w, h);\n\n\t\t\t\t\tdisplay.moveTo(lowX0, lowY0);\n\t\t\t\t\tdisplay.lineTo(lowX1, lowY1);\n\t\t\t\t\tdisplay.moveTo(highX0, highY0);\n\t\t\t\t\tdisplay.lineTo(highX1, highY1);\n\n\t\t\t\t\tdisplay.endStroke();\n\t\t\t\t\tdisplay.endFill();\n\t\t\t\t});\n\t\t\t})\n\t\t}\n\t}\n\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Candlestick._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\r\nimport type { Color } from \"../../../core/util/Color\";\r\n\r\nimport { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\nimport { Graphics } from \"../../../core/render/Graphics\";\r\n\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings {\r\n\r\n\t/**\r\n\t * Enables \"turbo mode\" of rendering.\r\n\t * \r\n\t * If enabled, the columsn will be drawn directly on canvas, rather than\r\n\t * each individually, significantly speeding up the rendering. Especially\r\n\t * on column-heavy charts.\r\n\t *\r\n\t * NOTE: this is an experimental feature and may not work in all setups. Some\r\n\t * features might be disabled, too, e.g. pointer events and rounded corners.\r\n\t *\r\n\t * @since 5.14.0\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Turbo_mode} for more info\r\n\t */\r\n\tturboMode?: boolean;\r\n\r\n}\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\t/**\r\n\t * A list of actual columns in a range.\r\n\t */\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\tpublic allColumns: Graphics = this.children.push(Graphics.new(this._root, {}));\r\n\tpublic allColumnsData: Array<{ width: number, height: number, x: number, y: number, lowX0?: number, lowY0?: number, lowX1?: number, lowY1?: number, highX0?: number, highY0?: number, highX1?: number, highY1?: number, stroke?: Color, fill?: Color, strokeWidth: number, strokeOpacity: number, fillOpacity: number }> = [];\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = listTemplate.make();\r\n\t\tif (!this.get(\"turboMode\")) {\r\n\t\t\tthis.mainContainer.children.push(column);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcolumn.virtualParent = this.chart;\r\n\t\t}\r\n\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = this.addDisposer(new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t));\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [this.columns.template, axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n\r\n\tprotected _beforeColumnsDraw() {\r\n\t\tthis.allColumnsData = [];\r\n\t}\r\n\r\n\tprotected _afterColumnsDraw() {\r\n\t\tif (this.get(\"turboMode\")) {\r\n\r\n\t\t\tthis.allColumns.set(\"draw\", (display) => {\r\n\t\t\t\tdisplay.clear();\r\n\r\n\t\t\t\t$array.each(this.allColumnsData, (column) => {\r\n\t\t\t\t\tconst w = column.width;\r\n\t\t\t\t\tconst h = column.height;\r\n\t\t\t\t\tconst x = column.x;\r\n\t\t\t\t\tconst y = column.y;\r\n\t\t\t\t\tconst stroke = column.stroke;\r\n\t\t\t\t\tconst fill = column.fill;\r\n\t\t\t\t\tconst strokeWidth = column.strokeWidth;\r\n\t\t\t\t\tconst strokeOpacity = column.strokeOpacity;\r\n\t\t\t\t\tconst fillOpacity = column.fillOpacity;\r\n\r\n\t\t\t\t\tdisplay.beginFill(fill, fillOpacity);\r\n\t\t\t\t\tdisplay.beginPath();\r\n\t\t\t\t\tdisplay.lineStyle(strokeWidth, stroke, strokeOpacity);\r\n\t\t\t\t\tdisplay.drawRect(x, y, w, h);\r\n\t\t\t\t\tdisplay.endStroke();\r\n\t\t\t\t\tdisplay.endFill();\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\r\n\t\tif (this.get(\"turboMode\")) {\r\n\t\t\tconst stroke = graphics.get(\"stroke\");\r\n\t\t\tconst fillOpacity = graphics.get(\"fillOpacity\", 1);\r\n\t\t\tconst strokeOpacity = graphics.get(\"strokeOpacity\", 1);\r\n\t\t\tconst strokWidth = graphics.get(\"strokeWidth\", 1);\r\n\t\t\tconst fill = graphics.get(\"fill\");\r\n\r\n\t\t\tconst ptl = this.getPoint(l, t);\r\n\t\t\tconst pbr = this.getPoint(r, b);\r\n\r\n\t\t\tconst tooltipPoint = dataItem.get(\"point\");\r\n\r\n\t\t\tif (tooltipPoint) {\r\n\t\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\r\n\t\t\t\ttooltipPoint.x = point.x + this._x;\r\n\t\t\t\ttooltipPoint.y = point.y + this._y;\r\n\t\t\t}\r\n\r\n\t\t\tl = ptl.x;\r\n\t\t\tr = pbr.x;\r\n\r\n\t\t\tt = ptl.y;\r\n\t\t\tb = pbr.y;\r\n\r\n\t\t\tdataItem.setRaw(\"left\", l);\r\n\t\t\tdataItem.setRaw(\"right\", r);\r\n\t\t\tdataItem.setRaw(\"top\", t);\r\n\t\t\tdataItem.setRaw(\"bottom\", b);\r\n\r\n\t\t\tthis.allColumnsData.push({ width: r - l, height: b - t, x: l, y: t, stroke: stroke, fill: fill, strokeWidth: strokWidth, strokeOpacity: strokeOpacity, fillOpacity: fillOpacity });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsuper._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\r\n\t\t}\r\n\t}\r\n}\r\n","import type { Axis } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport { CurveFactory, line, area } from \"d3-shape\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { color } from \"../../../core/util/Color\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IPointOptions {\n}\n\nexport interface ILineSeriesDataItem extends IXYSeriesDataItem {\n}\n\nexport interface ILineSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * If set to `true` the line will connect over \"gaps\" - categories or time\n\t * intervals with no data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Gaps} for more info\n\t * @default true\n\t */\n\tconnect?: boolean;\n\n\t/**\n\t * If there are more than `autoGapCount` base time intervals (e.g. days) with\n\t * no data, the line will break and will display gap.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Auto_gaps_with_dates} for more info\n\t * @default 1.1\n\t */\n\tautoGapCount?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcurveFactory?: CurveFactory;\n\n\t/**\n\t * Allows simplifying the line with many points.\n\t *\n\t * If set, the series will skip points that are closer than X pixels to each\n\t * other.\n\t *\n\t * With many data points, this allows having smoother, less cluttered lines.\n\t *\n\t * @default 0\n\t * @since 5.2.7\n\t */\n\tminDistance?: number;\n\n\n}\n\nexport interface ILineSeriesPrivate extends IXYSeriesPrivate {\n}\n\n/**\n * Interface representing a [[LineSeries]] axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface ILineSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list template to use when applying line settings to the line segments covered\n\t * by an axis range.\n\t */\n\tstrokes?: ListTemplate<Graphics>;\n\n\t/**\n\t * A list template to use when applying fill settings to the fill segments covered\n\t * by an axis range.\n\t */\n\tfills?: ListTemplate<Graphics>;\n}\n\n/**\n * Used to plot line and/or area series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\n * @important\n */\nexport class LineSeries extends XYSeries {\n\n\tdeclare public _settings: ILineSeriesSettings;\n\tdeclare public _privateSettings: ILineSeriesPrivate;\n\tdeclare public _dataItemSettings: ILineSeriesDataItem;\n\tdeclare public _axisRangeType: ILineSeriesAxisRange;\n\n\tpublic static className: string = \"LineSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([LineSeries.className]);\n\n\tprotected _endIndex!: number;\n\n\tprotected _strokeGenerator = line();\n\tprotected _fillGenerator = area();\n\n\tprotected _legendStroke?: Graphics;\n\tprotected _legendFill?: Graphics;\n\n\tprotected _afterNew() {\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeStroke(strokes: ListTemplate<Graphics>): Graphics {\n\t\tconst stroke = this.mainContainer.children.push(strokes.make());\n\t\tstrokes.push(stroke);\n\t\treturn stroke;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all line segments in series.\n\t *\n\t * `strokes.template` can be used to set default settings for all line\n\t * segments, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly strokes: ListTemplate<Graphics> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n\t\t}, [this.strokes.template]),\n\t));\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeFill(fills: ListTemplate<Graphics>): Graphics {\n\t\tconst fill = this.mainContainer.children.push(fills.make());\n\t\tfills.push(fill);\n\t\treturn fill;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all segment fills in series.\n\t *\n\t * `fills.template` can be used to set default settings for all segment\n\t * fills, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly fills: ListTemplate<Graphics> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n\t\t}, [this.fills.template]),\n\t));\n\n\t// custom set from data\n\tprotected _fillTemplate: Template<Graphics> | undefined;\n\tprotected _strokeTemplate: Template<Graphics> | undefined;\n\n\tprotected _previousPoint: Array<number> = [0, 0, 0, 0];\n\n\tprotected _dindex = 0;\n\tprotected _sindex = 0;\n\n\tpublic _updateChildren() {\n\n\t\tthis._strokeTemplate = undefined;\n\t\tthis._fillTemplate = undefined;\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tconst stroke = this.get(\"stroke\");\n\t\t\tthis.strokes.template.set(\"stroke\", stroke);\n\t\t\tconst legendStroke = this._legendStroke;\n\t\t\tif (legendStroke) {\n\t\t\t\tlegendStroke.states.lookup(\"default\")!.set(\"stroke\", stroke);\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tthis.fills.template.set(\"fill\", fill);\n\t\t\tconst legendFill = this._legendFill;\n\t\t\tif (legendFill) {\n\t\t\t\tlegendFill.states.lookup(\"default\")!.set(\"fill\", fill);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"fillPattern\")) {\n\t\t\tconst fillPattern = this.get(\"fillPattern\");\n\t\t\tthis.fills.template.set(\"fillPattern\", fillPattern);\n\t\t\tconst legendFill = this._legendFill;\n\t\t\tif (legendFill) {\n\t\t\t\tlegendFill.states.lookup(\"default\")!.set(\"fillPattern\", fillPattern);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"curveFactory\")) {\n\t\t\tconst curveFactory = this.get(\"curveFactory\")!;\n\t\t\tif (curveFactory) {\n\t\t\t\tthis._strokeGenerator.curve(curveFactory);\n\t\t\t\tthis._fillGenerator.curve(curveFactory);\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\n\n\t\t\t\tthis.fills.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.strokes.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tlet fills = axisRange.fills;\n\t\t\t\t\tif (fills) {\n\t\t\t\t\t\tfills.each((fill) => {\n\t\t\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tlet strokes = axisRange.strokes;\n\t\t\t\t\tif (strokes) {\n\t\t\t\t\t\tstrokes.each((stroke) => {\n\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet startIndex = this.startIndex();\n\n\t\t\t\tlet strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\t\t\tlet fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\t\t\tlet strokeTemplateFound = true;\n\t\t\t\tlet fillTemplateFound = true;\n\n\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\tstrokeTemplateFound = false;\n\t\t\t\t}\n\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\tfillTemplateFound = false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex - 1; i >= 0; i--) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\tlet dataContext = dataItem.dataContext as any;\n\t\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\t\tif (dataContext[strokeTemplateField]) {\n\t\t\t\t\t\t\tstrokeTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\t\tif (dataContext[fillTemplateField]) {\n\t\t\t\t\t\t\tfillTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tif (hasValues && strokeTemplateFound && fillTemplateFound) {\n\t\t\t\t\t\tstartIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tlet len = this.dataItems.length;\n\t\t\t\tlet endIndex = this.endIndex();\n\n\t\t\t\tif (endIndex < len) {\n\t\t\t\t\tendIndex++;\n\t\t\t\t\tfor (let i = endIndex; i < len; i++) {\n\t\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (hasValues) {\n\t\t\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\tstartIndex--;\n\t\t\t\t}\n\n\t\t\t\tthis._endIndex = endIndex;\n\n\t\t\t\tthis._clearGraphics();\n\t\t\t\tthis._sindex = 0;\n\t\t\t\tthis._dindex = startIndex;\n\t\t\t\tif (this.dataItems.length == 1) {\n\t\t\t\t\tthis._startSegment(0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// this is done to avoid recursion with a lot of segments\n\t\t\t\t\twhile (this._dindex < endIndex - 1) {\n\t\t\t\t\t\tthis._startSegment(this._dindex);\n\t\t\t\t\t\tthis._sindex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _clearGraphics() {\n\t\tthis.strokes.clear();\n\t\tthis.fills.clear();\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\taxisRange.fills!.clear();\n\t\t\taxisRange.strokes!.clear();\n\t\t})\n\t}\n\n\tprotected _startSegment(dataItemIndex: number) {\n\t\tlet endIndex = this._endIndex;\n\t\tlet currentEndIndex = endIndex;\n\n\t\tconst autoGapCount = this.get(\"autoGapCount\")!;\n\t\tconst connect = this.get(\"connect\");\n\n\t\tconst fill = this.makeFill(this.fills);\n\n\t\tconst fillTemplate = this._fillTemplate;\n\t\tconst originalTemplate = this.fills.template;\n\t\tif (fillTemplate && fillTemplate != originalTemplate) {\n\t\t\tfill.template = fillTemplate;\n\t\t}\n\n\t\tfill.setPrivate(\"visible\", true);\n\n\t\tconst stroke = this.makeStroke(this.strokes);\n\n\t\tconst strokeTemplate = this._strokeTemplate;\n\t\tif (strokeTemplate && strokeTemplate != this.strokes.template) {\n\t\t\tstroke.template = strokeTemplate;\n\t\t}\n\n\t\tstroke.setPrivate(\"visible\", true);\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\t\tlet baseAxis = this.get(\"baseAxis\")!;\n\n\t\tlet vcx = this.get(\"vcx\", 1);\n\t\tlet vcy = this.get(\"vcy\", 1);\n\n\t\tlet xField = this._xField;\n\t\tlet yField = this._yField;\n\n\t\tlet xOpenField = this._xOpenField;\n\t\tlet yOpenField = this._yOpenField;\n\n\t\tconst xOpenFieldValue = this.get(\"openValueXField\");\n\t\tconst yOpenFieldValue = this.get(\"openValueYField\");\n\n\t\tif (!xOpenFieldValue) {\n\t\t\txOpenField = this._xField;\n\t\t}\n\n\t\tif (!yOpenFieldValue) {\n\t\t\tyOpenField = this._yField;\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tconst basePosX = xAxis.basePosition();\n\t\tconst basePosY = yAxis.basePosition();\n\n\t\tlet baseField: string;\n\t\tif (baseAxis === yAxis) {\n\t\t\tbaseField = this._yField;\n\t\t}\n\t\telse {\n\t\t\tbaseField = this._xField;\n\t\t}\n\n\t\tconst segments: Array<Array<Array<number>>> = [];\n\t\tlet points: Array<Array<number>> = [];\n\t\tsegments.push(points);\n\n\t\tconst strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\tconst fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\tlet locationX = this.get(\"locationX\", 0.5);\n\t\tlet locationY = this.get(\"locationY\", 0.5);\n\n\t\tlet openLocationX = this.get(\"openLocationX\", locationX);\n\t\tlet openLocationY = this.get(\"openLocationY\", locationY);\n\n\t\tconst minDistance = this.get(\"minDistance\", 0);\n\n\t\tlet i: number;\n\n\t\tlet fillVisible = this.fills.template.get(\"visible\");\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tfillVisible = true;\n\t\t}\n\n\t\tlet getOpen = false;\n\t\tif (stacked || xOpenFieldValue || yOpenFieldValue) {\n\t\t\tgetOpen = true;\n\t\t}\n\n\t\tconst o = {\n\t\t\tpoints, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY, minDistance\n\t\t}\n\n\n\t\tlet rangeStrokeTemplate = this._strokeTemplate;\n\t\tlet rangeFillTemplate = this._fillTemplate;\n\n\t\tfor (i = dataItemIndex; i < currentEndIndex; i++) {\n\t\t\tthis._dindex = i;\n\t\t\tconst dataItem = this._dataItems[i];\n\n\t\t\tlet valueX = dataItem.get(xField as any);\n\t\t\tlet valueY = dataItem.get(yField as any);\n\n\t\t\tif (valueX == null || valueY == null) {\n\t\t\t\tif (!connect) {\n\t\t\t\t\tpoints = [];\n\t\t\t\t\tsegments.push(points);\n\t\t\t\t\to.points = points;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getPoints(dataItem, o);\n\t\t\t}\n\n\t\t\tif (strokeTemplateField) {\n\t\t\t\tlet strokeTemplate = (dataItem.dataContext as any)[strokeTemplateField]\n\t\t\t\tif (strokeTemplate) {\n\t\t\t\t\tif (!(strokeTemplate instanceof Template)) {\n\t\t\t\t\t\tstrokeTemplate = Template.new(strokeTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._strokeTemplate = strokeTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\trangeStrokeTemplate = strokeTemplate;\n\t\t\t\t\t\tstroke.template = strokeTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fillTemplateField) {\n\t\t\t\tlet fillTemplate = (dataItem.dataContext as any)[fillTemplateField]\n\t\t\t\tif (fillTemplate) {\n\t\t\t\t\tif (!(fillTemplate instanceof Template)) {\n\t\t\t\t\t\tfillTemplate = Template.new(fillTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._fillTemplate = fillTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\trangeFillTemplate = fillTemplate;\n\t\t\t\t\t\tfill.template = fillTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!connect) {\n\t\t\t\tlet nextItem = this.dataItems[i + 1];\n\t\t\t\tif (nextItem) {\n\t\t\t\t\tif (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\n\t\t\t\t\t\tpoints = [];\n\t\t\t\t\t\tsegments.push(points);\n\t\t\t\t\t\to.points = points;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\n\t\tif (i === endIndex) {\n\t\t\tthis._endLine(points, segments[0][0]);\n\t\t}\n\n\t\tif (stroke) {\n\t\t\tthis._drawStroke(stroke, segments);\n\t\t}\n\n\t\tif (fill) {\n\t\t\tthis._drawFill(fill, segments);\n\t\t}\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tconst container = axisRange.container;\n\t\t\tconst fills = axisRange.fills!;\n\t\t\tconst fill = this.makeFill(fills);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(fill);\n\t\t\t}\n\n\t\t\tfill.setPrivate(\"visible\", true);\n\t\t\tthis._drawFill(fill, segments);\n\n\t\t\tconst strokes = axisRange.strokes!;\n\t\t\tconst stroke = this.makeStroke(strokes);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(stroke);\n\t\t\t}\n\n\t\t\tif (rangeStrokeTemplate && rangeStrokeTemplate != this.strokes.template) {\n\t\t\t\tstroke.template = rangeStrokeTemplate;\n\t\t\t}\n\n\t\t\tif (rangeFillTemplate && rangeFillTemplate != this.fills.template) {\n\t\t\t\tfill.template = rangeFillTemplate;\n\t\t\t}\n\n\t\t\tstroke.setPrivate(\"visible\", true);\n\t\t\tthis._drawStroke(stroke, segments);\n\n\t\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t})\n\t}\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number, minDistance: number }) {\n\t\tlet points = o.points;\n\n\t\tlet itemLocationX = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY = dataItem.get(\"locationY\", o.locationY);\n\n\t\tconst exactLocationX = this.get(\"exactLocationX\", false);\n\t\tconst exactLocationY = this.get(\"exactLocationY\", false);\n\n\t\tlet xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx, exactLocationX);\n\t\tlet yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy, exactLocationY);\n\n\t\tif (this._shouldInclude(xPos)) {\n\n\t\t\tconst iPoint = this.getPoint(xPos, yPos);\n\t\t\tconst point = [iPoint.x, iPoint.y];\n\n\t\t\tiPoint.x += this._x;\n\t\t\tiPoint.y += this._y;\n\n\t\t\tdataItem.set(\"point\", iPoint);\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xPos0: number = xPos;\n\t\t\t\tlet yPos0: number = yPos;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"), exactLocationX);\n\t\t\t\t\t\t\t\tif ($type.isNaN(xPos0)) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx, exactLocationX);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"), exactLocationY);\n\t\t\t\t\t\t\t\tif ($type.isNaN(yPos0)) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy, exactLocationY);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx, exactLocationX);\n\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy, exactLocationY);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint = this.getPoint(xPos0, yPos0);\n\n\t\t\t\tpoint[2] = closeIPoint.x;\n\t\t\t\tpoint[3] = closeIPoint.y;\n\t\t\t}\n\n\t\t\tif (o.minDistance > 0) {\n\t\t\t\tconst p0 = point[0];\n\t\t\t\tconst p1 = point[1];\n\t\t\t\tconst p2 = point[2];\n\t\t\t\tconst p3 = point[3];\n\n\t\t\t\tconst prev = this._previousPoint;\n\n\t\t\t\tconst pp0 = prev[0];\n\t\t\t\tconst pp1 = prev[1];\n\t\t\t\tconst pp2 = prev[2];\n\t\t\t\tconst pp3 = prev[3];\n\n\t\t\t\tif (Math.hypot(p0 - pp0, p1 - pp1) > o.minDistance || (p2 && p3 && Math.hypot(p2 - pp2, p3 - pp3) > o.minDistance)) {\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t\tthis._previousPoint = point;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpoints.push(point);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _endLine(_points: Array<Array<number>>, _firstPoint: Array<number>) {\n\n\t}\n\n\tprotected _drawStroke(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._strokeGenerator.context(display as any);\n\t\t\t\t\tthis._strokeGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _drawFill(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._fillGenerator.context(display as any);\n\t\t\t\t\tthis._fillGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.fills = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.fills!.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\n\t\t\t}, [this.fills.template, axisRange.fills!.template]),\n\t\t);\n\n\t\taxisRange.strokes = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.strokes!.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\n\t\t\t}, [this.strokes.template, axisRange.strokes!.template])\n\t\t);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\t\t\tconst marker = legendDataItem.get(\"marker\");\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\tif (markerRectangle) {\n\t\t\t\tmarkerRectangle.setPrivate(\"visible\", false);\n\t\t\t}\n\n\t\t\tmarker.set(\"background\", Rectangle.new(marker._root, { fillOpacity: 0, fill: color(0x000000) }))\n\n\t\t\tconst legendStroke = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"], interactive: false\n\t\t\t}, [this.strokes.template]));\n\n\t\t\tthis._legendStroke = legendStroke;\n\n\t\t\tconst legendFill = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\n\t\t\t}, [this.fills.template]));\n\n\t\t\tthis._legendFill = legendFill;\n\n\t\t\tconst disabledColor = this._root.interfaceColors.get(\"disabled\");\n\n\t\t\tlegendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\tlegendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\n\t\t\tif (this.bullets.length > 0) {\n\t\t\t\tconst bulletFunction = this.bullets.getIndex(0);\n\t\t\t\tif (bulletFunction) {\n\t\t\t\t\tconst bullet = bulletFunction(marker._root, this, new DataItem(this, { legend: true }, {}));\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite instanceof Graphics) {\n\t\t\t\t\t\t\tsprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (sprite) {\n\n\t\t\t\t\t\t\tsprite.setAll({\n\t\t\t\t\t\t\t\ttooltipText: undefined,\n\t\t\t\t\t\t\t\ttooltipHTML: undefined,\n\t\t\t\t\t\t\t\tfocusable: undefined,\n\t\t\t\t\t\t\t\tfocusableGroup: undefined,\n\t\t\t\t\t\t\t\tariaLabel: undefined\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tmarker.children.push(sprite);\n\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\n\t\t\t\t\t\t\tmarker.events.on(\"boundschanged\", () => {\n\t\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\n//import type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport type { IDisposer } from \"../../../core/util/Disposer\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../../core/render/Series\";\nimport { List } from \"../../../core/util/List\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\nexport interface IXYSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Kicks in when axis starts using different data set, e.g. data\n\t * of different granularit on [[DateAxis]].\n\t *\n\t * @since 5.1.1\n\t */\n\tdatasetchanged: {\n\t\tid: string\n\t}\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tlowValueX?: number;\n\tlowValueXWorking?: number;\n\tlowValueXChange?: number;\n\tlowValueXChangePercent?: number;\n\tlowValueXChangeSelection?: number;\n\tlowValueXChangeSelectionPercent?: number;\n\tlowValueXChangePrevious?: number;\n\tlowValueXChangePreviousPercent?: number;\n\tlowValueXWorkingOpen?: number;\n\tlowValueXWorkingClose?: number;\n\n\thighValueX?: number;\n\thighValueXWorking?: number;\n\thighValueXChange?: number;\n\thighValueXChangePercent?: number;\n\thighValueXChangeSelection?: number;\n\thighValueXChangeSelectionPercent?: number;\n\thighValueXChangePrevious?: number;\n\thighValueXChangePreviousPercent?: number;\n\thighValueXWorkingOpen?: number;\n\thighValueXWorkingClose?: number;\n\n\tlowValueY?: number;\n\tlowValueYWorking?: number;\n\tlowValueYChange?: number;\n\tlowValueYChangePercent?: number;\n\tlowValueYChangeSelection?: number;\n\tlowValueYChangeSelectionPercent?: number;\n\tlowValueYChangePrevious?: number;\n\tlowValueYChangePreviousPercent?: number;\n\tlowValueYWorkingOpen?: number;\n\tlowValueYWorkingClose?: number;\n\n\thighValueY?: number;\n\thighValueYWorking?: number;\n\thighValueYChange?: number;\n\thighValueYChangePercent?: number;\n\thighValueYChangeSelection?: number;\n\thighValueYChangeSelectionPercent?: number;\n\thighValueYChangePrevious?: number;\n\thighValueYChangePreviousPercent?: number;\n\thighValueYWorkingOpen?: number;\n\thighValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n\n\toriginals?: Array<DataItem<IXYSeriesDataItem>>;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * If this is set to `true`, data items will ignore `locationX` setting\n\t * but will place the data point at exact X value.\n\t * \n\t * This works with [[DateAxis]] only.\n\t * \n\t * On a `ColumnSeries`/`CandlestickSeries` this setting will affect bullets\n\t * only.\n\t *\n\t * @default false\n\t * @since 5.13.0\n\t */\n\texactLocationX?: boolean;\n\n\t/**\n\t * If this is set to `true`, data items will ignore `locationX` setting\n\t * but will place the data point at exact Y value.\n\t * \n\t * This works with [[DateAxis]] only.\n\t * \n\t * On a `ColumnSeries`/`CandlestickSeries` this setting will affect bullets\n\t * only.\n\t *\n\t * @default false\n\t * @since 5.13.0\n\t */\n\texactLocationY?: boolean;\n\n\t/**\n\t * If set to `true` series will use selection extremes when calculating\n\t * their min and max values of the axis. Useful for stacked series.\n\t *\n\t * @since 5.10.11\n\t */\n\tuseSelectionExtremes?: boolean;\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t *\n\t * **IMPORTANT:** `xAxis` needs to be set when creating the series. Updating\n\t * this setting on previously created series object will not work.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t *\n\t * **IMPORTANT:** `yAxis` needs to be set when creating the series. Updating\n\t * this setting on previously created series object will not work.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * NOTE: for series stack properly, all stacked series must have same number\n\t * of data items with the same timestamp/category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\n\n\t/**\n\t * Input data field for X low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueXField?: string;\n\n\t/**\n\t * Input data field for Y low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueYField?: string;\n\n\t/**\n\t * Input data field for X high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueXField?: string;\n\n\t/**\n\t * Input data field for Y high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueYField?: string;\n\n\t/**\n\t * Display data field for X low value.\n\t */\n\tlowValueXShow?: \"lowValueXWorking\" | \"lowValueXChange\" | \"lowValueXChangePercent\" | \"lowValueXChangeSelection\" | \"lowValueXChangeSelectionPercent\" | \"lowValueXChangePrevious\" | \"lowValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\tlowValueYShow?: \"lowValueYWorking\" | \"lowValueYChange\" | \"lowValueYChangePercent\" | \"lowValueYChangeSelection\" | \"lowValueYChangeSelectionPercent\" | \"lowValueYChangePrevious\" | \"lowValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X low values from several data items.\n\t */\n\tlowValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating Y low values from several data items.\n\t */\n\tlowValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for X high value.\n\t */\n\thighValueXShow?: \"highValueXWorking\" | \"highValueXChange\" | \"highValueXChangePercent\" | \"highValueXChangeSelection\" | \"highValueXChangeSelectionPercent\" | \"highValueXChangePrevious\" | \"highValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\thighValueYShow?: \"highValueYWorking\" | \"highValueYChange\" | \"highValueYChangePercent\" | \"highValueYChangeSelection\" | \"highValueYChangeSelectionPercent\" | \"highValueYChangePrevious\" | \"highValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueXGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueYGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Horizontal location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationX?: number;\n\n\t/**\n\t * Vertical location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationY?: number;\n\n\t/**\n\t * Horizontal location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationX?: number;\n\n\t/**\n\t * Vertical location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationY?: number;\n\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t *\n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n\t/**\n\t * Indicates horizontal position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionX?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\t/**\n\t * Indicates vertical position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionY?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\n\t/**\n\t * If set to `true` data items for this series won't be grouped even if\n\t * the `groupData: true` is set on a related [[DateAxis]].\n\t * \n\t * @since 5.0.19\n\t */\n\tgroupDataDisabled?: boolean;\n\n\t/**\n\t * A [[DataItem]] that is being used for current tooltip, e.g. by a chart\n\t * cursor.\n\t *\n\t * @since 5.1.2\n\t */\n\ttooltipDataItem?: DataItem<IXYSeriesDataItem>\n\n\t/**\n\t * If set to `true`, when data is grouped, the `originals` setting of the\n\t * group data items will be populated by the original (source) data items\n\t * that fall into the group.\n\t *\n\t * Please note that if `groupDataCallback` is set, this setting is ignored\n\t * as originals will always be included, regardless of the value.\n\t *\n\t * @since 5.1.11\n\t * @default false\n\t */\n\tgroupDataWithOriginals?: boolean;\n\n\t/**\n\t * A custom function to call when grouping data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Custom_aggregation_functions} for more info\n\t * @since 5.1.11\n\t */\n\tgroupDataCallback?: (dataItem: DataItem<IXYSeriesDataItem>, interval: ITimeInterval) => void;\n\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n\n\tlowValueXAverage?: number;\n\tlowValueXCount?: number;\n\tlowValueXSum?: number;\n\tlowValueXAbsoluteSum?: number;\n\tlowValueXLow?: number;\n\tlowValueXHigh?: number;\n\tlowValueXlow?: number;\n\tlowValueXClose?: number;\n\n\tlowValueYAverage?: number;\n\tlowValueYCount?: number;\n\tlowValueYSum?: number;\n\tlowValueYAbsoluteSum?: number;\n\tlowValueYLow?: number;\n\tlowValueYHigh?: number;\n\tlowValueYlow?: number;\n\tlowValueYClose?: number;\n\n\tlowValueXAverageSelection?: number;\n\tlowValueXCountSelection?: number;\n\tlowValueXSumSelection?: number;\n\tlowValueXAbsoluteSumSelection?: number;\n\tlowValueXLowSelection?: number;\n\tlowValueXHighSelection?: number;\n\tlowValueXlowSelection?: number;\n\tlowValueXCloseSelection?: number;\n\n\tlowValueYAverageSelection?: number;\n\tlowValueYCountSelection?: number;\n\tlowValueYSumSelection?: number;\n\tlowValueYAbsoluteSumSelection?: number;\n\tlowValueYLowSelection?: number;\n\tlowValueYHighSelection?: number;\n\tlowValueYlowSelection?: number;\n\tlowValueYCloseSelection?: number;\n\n\thighValueXAverage?: number;\n\thighValueXCount?: number;\n\thighValueXSum?: number;\n\thighValueXAbsoluteSum?: number;\n\thighValueXLow?: number;\n\thighValueXHigh?: number;\n\thighValueXhigh?: number;\n\thighValueXClose?: number;\n\n\thighValueYAverage?: number;\n\thighValueYCount?: number;\n\thighValueYSum?: number;\n\thighValueYAbsoluteSum?: number;\n\thighValueYLow?: number;\n\thighValueYHigh?: number;\n\thighValueYhigh?: number;\n\thighValueYClose?: number;\n\n\thighValueXAverageSelection?: number;\n\thighValueXCountSelection?: number;\n\thighValueXSumSelection?: number;\n\thighValueXAbsoluteSumSelection?: number;\n\thighValueXLowSelection?: number;\n\thighValueXHighSelection?: number;\n\thighValueXhighSelection?: number;\n\thighValueXCloseSelection?: number;\n\n\thighValueYAverageSelection?: number;\n\thighValueYCountSelection?: number;\n\thighValueYSumSelection?: number;\n\thighValueYAbsoluteSumSelection?: number;\n\thighValueYLowSelection?: number;\n\thighValueYHighSelection?: number;\n\thighValueYhighSelection?: number;\n\thighValueYCloseSelection?: number;\n\n\toutOfSelection?: boolean;\n\n\tdoNotUpdateLegend?: boolean;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\tdeclare public _events: IXYSeriesEvents;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tpublic _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\tpublic _bullets: { [index: string]: Sprite } = {};\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\",\n\t\t\"lowValueX\",\n\t\t\"highValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\",\n\t\t\"lowValueY\",\n\t\t\"highValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tpublic __valueXShowFields!: Array<string>;\n\tpublic __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {});\n\n\tpublic _dataSetId?: string;\n\n\tprotected _tooltipFieldX?: string;\n\tprotected _tooltipFieldY?: string;\n\n\tpublic _posXDp?: IDisposer;\n\tpublic _posYDp?: IDisposer;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n\t\tthis._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n\n\t\tthis._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n\t\tthis._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXGrouped\", \"low\");\n\t\tthis._setRawDefault(\"lowValueYGrouped\", \"low\");\n\n\t\tthis._setRawDefault(\"highValueXGrouped\", \"high\");\n\t\tthis._setRawDefault(\"highValueYGrouped\", \"high\");\n\n\n\n\t\tsuper._afterNew();\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis.onPrivate(\"startIndex\", () => {\n\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\tthis.updateLegendValue();\n\t\t\t})\n\t\t})\n\n\t\tthis.onPrivate(\"endIndex\", () => {\n\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\tthis.updateLegendValue();\n\t\t\t})\n\t\t})\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\t\t\tif (axisFill) {\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem);\n\t\t}\n\t}\n\n\tprotected _onDataClear(): void {\n\t\tsuper._onDataClear();\n\t\t$object.each(this._dataSets, (_key, dataItems) => {\n\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\tdataItem.dispose();\n\t\t\t});\n\t\t\tdataItems.length = 0;\n\t\t});\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\taxisDataItem.dispose();\n\n\t\t$array.remove(axis._seriesAxisRanges, axisDataItem);\n\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueXShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tthis._bullets = {};\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tif (!xAxis.inited || !yAxis.inited) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\tif (minBulletDistance > 0) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\n\t\t\tlet count = endIndex - startIndex;\n\n\t\t\tif (xAxis == baseAxis) {\n\t\t\t\tif (xAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (yAxis == baseAxis) {\n\t\t\t\tif (yAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\tpublic _fixPosition() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\n\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\tthis.bulletsContainer.set(\"x\", this.x());\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis._bullets = {};\n\n\t\tif (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\") || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\")) {\n\t\t\tthis._updateFields();\n\t\t\tthis._makeFieldNames();\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tif (this.isDirty(\"xAxis\") || this.isDirty(\"yAxis\")) {\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tconst tooltipPositionX = this.get(\"tooltipPositionX\");\n\t\tlet tooltipFieldX: string;\n\n\t\tswitch (tooltipPositionX) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldX = this._xOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldX = this._xLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldX = this._xHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldX = this._xField;\n\t\t}\n\t\tthis._tooltipFieldX = tooltipFieldX;\n\n\t\tconst tooltipPositionY = this.get(\"tooltipPositionY\");\n\t\tlet tooltipFieldY: string;\n\t\tswitch (tooltipPositionY) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldY = this._yOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldY = this._yLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldY = this._yHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldY = this._yField;\n\t\t}\n\t\tthis._tooltipFieldY = tooltipFieldY;\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\n\t\tthis._fixPosition();\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\txAxis._seriesValuesDirty = true;\n\t\t\tyAxis._seriesValuesDirty = true;\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tif (!this.get(\"tooltipDataItem\")) {\n\t\t\t\tthis.updateLegendValue(undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"adjustedStartIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._sizeDirty) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this.isPrivateDirty(\"adjustedStartIndex\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\t\t\t\tconst outOfSelection = this.getPrivate(\"outOfSelection\");\n\n\t\t\t\tif (baseAxis === xAxis || !baseAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (baseAxis === yAxis || !baseAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis || !baseAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\" || this.get(\"useSelectionExtremes\")) {\n\t\t\t\t\t\tconst selectionMinY = this.getPrivate(\"selectionMinY\");\n\t\t\t\t\t\tif (selectionMinY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", selectionMinY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxY = this.getPrivate(\"selectionMaxY\");\n\t\t\t\t\t\tif (selectionMaxY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", selectionMaxY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (baseAxis === yAxis || !baseAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\" || this.get(\"useSelectionExtremes\")) {\n\t\t\t\t\t\tconst selectionMinX = this.getPrivate(\"selectionMinX\");\n\t\t\t\t\t\tif (selectionMinX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", selectionMinX);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxX = this.getPrivate(\"selectionMaxX\")\n\t\t\t\t\t\tif (selectionMaxX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", selectionMaxX);\n\t\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tlet mainContainerMask = this._mainContainerMask;\n\t\t\tif (mainContainerMask == null) {\n\t\t\t\tmainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\t\t\t\tmainContainerMask.set(\"draw\", (display, target) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(display, target);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask!._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tmainContainerMask.markDirty();\n\t\t\tmainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t\telse {\n\t\t\tthis.mainContainer._display.mask = null;\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\t// save for performance\n\t\tthis._x = this.x();\n\t\tthis._y = this.y();\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t\tif (!series.get(\"stacked\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tpublic _unstack() {\n\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tpublic _handleRemoved(): void {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\txAxis._handleSeriesRemoved();\n\t\t}\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\tyAxis._handleSeriesRemoved();\n\t\t}\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\t\t\t\tlet value = dataItem.get(field);\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tlet stackValue = stackToItem.get(field);\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\n\t\t\t\t\t\t\t\tif (s == len - 1) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, undefined);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(stackValue)) {\n\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tlet exactLocationX = this.get(\"exactLocationX\", false);\n\t\t\tlet exactLocationY = this.get(\"exactLocationY\", false);\n\n\t\t\tlet positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1), exactLocationX);\n\t\t\tlet positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1), exactLocationY);\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tlet x = 0;\n\t\t\tlet y = 0;\n\n\t\t\tlet w = right - left;\n\t\t\tlet h = bottom - top;\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tsprite.setPrivate(\"visible\", !bullet.getPrivate(\"hidden\"));\n\n\t\t\t\tlet field = bullet.get(\"field\");\n\n\t\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\tif (field != undefined) {\n\t\t\t\t\tlet realField: string | undefined;\n\n\t\t\t\t\tif (baseAxis == xAxis) {\n\t\t\t\t\t\tif (field == \"value\") {\n\t\t\t\t\t\t\trealField = this._yField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"open\") {\n\t\t\t\t\t\t\trealField = this._yOpenField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"high\") {\n\t\t\t\t\t\t\trealField = this._yHighField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"low\") {\n\t\t\t\t\t\t\trealField = this._yLowField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (realField) {\n\t\t\t\t\t\t\tpositionY = yAxis.getDataItemPositionY(dataItem, realField as any, 0, this.get(\"vcy\", 1), exactLocationY)\n\n\t\t\t\t\t\t\tpoint = yAxis.get(\"renderer\").positionToPoint(positionY);\n\n\t\t\t\t\t\t\ty = point.y;\n\t\t\t\t\t\t\tx = left + w * locationX;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (field == \"value\") {\n\t\t\t\t\t\t\trealField = this._xField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"open\") {\n\t\t\t\t\t\t\trealField = this._xOpenField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"high\") {\n\t\t\t\t\t\t\trealField = this._xHighField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"low\") {\n\t\t\t\t\t\t\trealField = this._xLowField;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (realField) {\n\t\t\t\t\t\t\tpositionX = xAxis.getDataItemPositionX(dataItem, realField as any, 0, this.get(\"vcx\", 1), exactLocationX);\n\n\t\t\t\t\t\t\tpoint = xAxis.get(\"renderer\").positionToPoint(positionX);\n\n\t\t\t\t\t\t\tx = point.x;\n\t\t\t\t\t\t\ty = bottom - h * locationY;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tx = left + w * locationX;\n\t\t\t\t\ty = bottom - h * locationY;\n\t\t\t\t}\n\n\t\t\t\tconst stacked = bullet.get(\"stacked\");\n\t\t\t\tif (stacked) {\n\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\tif (baseAxis == xAxis) {\n\t\t\t\t\t\tlet previousBullet = this._bullets[positionX + \"_\" + positionY];\n\t\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\t\tlet previousBounds = previousBullet.bounds();\n\t\t\t\t\t\t\tlet bounds = sprite.localBounds();\n\t\t\t\t\t\t\tlet yo = y;\n\t\t\t\t\t\t\ty = previousBounds.top;\n\n\t\t\t\t\t\t\tif (stacked == \"down\") {\n\t\t\t\t\t\t\t\ty = previousBounds.bottom - bounds.top;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (stacked == \"auto\") {\n\t\t\t\t\t\t\t\tif (chart) {\n\t\t\t\t\t\t\t\t\tif (yo < chart.plotContainer.height() / 2) {\n\t\t\t\t\t\t\t\t\t\ty = previousBounds.bottom - bounds.top;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\ty += bounds.bottom;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ty += bounds.bottom;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._bullets[positionX + \"_\" + positionY] = sprite;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet previousBullet = this._bullets[positionX + \"_\" + positionY];\n\t\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\t\tlet previousBounds = previousBullet.bounds();\n\t\t\t\t\t\t\tlet bounds = sprite.localBounds();\n\t\t\t\t\t\t\tlet xo = x;\n\t\t\t\t\t\t\tx = previousBounds.right;\n\n\t\t\t\t\t\t\tif (stacked == \"down\") {\n\t\t\t\t\t\t\t\tx = previousBounds.left - bounds.right;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (stacked == \"auto\") {\n\t\t\t\t\t\t\t\tif (chart) {\n\t\t\t\t\t\t\t\t\tif (xo < chart.plotContainer.width() / 2) {\n\t\t\t\t\t\t\t\t\t\tx = previousBounds.left - bounds.right;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tx -= bounds.left;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tx -= bounds.left;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._bullets[positionX + \"_\" + positionY] = sprite;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.setPrivate(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.setPrivate(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tsprite.setAll({ x, y });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t\tthis._dataSetId = id;\n\n\t\t\tconst type = \"datasetchanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, id: id });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic resetGrouping() {\n\t\t$object.each(this._dataSets, (_key, dataSet) => {\n\t\t\tif (dataSet != this._mainDataItems) {\n\t\t\t\t$array.each(dataSet, (dataItem) => {\n\t\t\t\t\tdataItem.dispose();\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t\tthis._dataSets = {};\n\t\tthis._dataItems = this.mainDataItems;\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tlet bullets = dataItem.bullets;\n\t\t\tif (bullets) {\n\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\n\t\tthis._selectionProcessed = false; // for totals to be calculated\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tlet hiddenState = this.states.lookup(\"hidden\");\n\t\tif (!hiddenState) {\n\t\t\thiddenState = this.states.create(\"hidden\", {});\n\t\t}\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tif (!value._stackDirty) {\n\t\t\t\t\tvalue._markDirtyStack();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tif (!this.getPrivate(\"doNotUpdateLegend\")) {\n\t\t\tthis.updateLegendMarker(dataItem);\n\t\t\tthis.updateLegendValue(dataItem);\n\t\t}\n\n\t\tconst tooltip = this.get(\"tooltip\");\n\n\t\tconst exactLocationX = this.get(\"exactLocationX\", false);\n\t\tconst exactLocationY = this.get(\"exactLocationY\", false);\n\n\t\tif (tooltip) {\n\t\t\tif (!this.isHidden() && this.get(\"visible\")) {\n\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX!, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx, exactLocationX);\n\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY!, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy, exactLocationY);\n\n\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\tlet show = true;\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\n\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic hideTooltip(): Promise<void> | undefined {\n\t\tconst tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.set(\"tooltipTarget\", this);\n\t\t}\n\t\treturn super.hideTooltip();\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem?: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\t// if coordinate is super big, canvas fails to draw line, capping to some big number (won't make any visual difference)\n\t\tlet max = 999999999;\n\t\tif (y < -max) {\n\t\t\ty = -max;\n\t\t}\n\t\tif (y > max) {\n\t\t\ty = max;\n\t\t}\n\n\t\tif (x < -max) {\n\t\t\tx = -max;\n\t\t}\n\t\tif (x > max) {\n\t\t\tx = max;\n\t\t}\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tprotected _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\tthis.get(\"xAxis\")._markDirtyKey(\"start\");\n\t\tthis.get(\"yAxis\")._markDirtyKey(\"start\");\n\t\tthis.resetExtremes();\n\t}\n\n\n\t/**\n\t * Resets cached axis scale values.\n\t */\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n\n\t/**\n\t * A list of series's main (ungrouped) data items.\n\t *\n\t * @return  Data items\n\t */\n\tpublic get mainDataItems(): Array<DataItem<this[\"_dataItemSettings\"]>> {\n\t\treturn this._mainDataItems;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _adjustStartIndex(index: number): number {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tif (baseAxis == xAxis && xAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\tconst baseDuration = xAxis.baseDuration();\n\t\t\tconst minSelection = xAxis.getPrivate(\"selectionMin\", xAxis.getPrivate(\"min\", 0));\n\t\t\tconst dl = baseDuration * this.get(\"locationX\", 0.5);\n\n\t\t\tlet value = -Infinity;\n\n\t\t\twhile (value < minSelection) {\n\t\t\t\tconst dataItem = this.dataItems[index];\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tconst open = dataItem.open;\n\t\t\t\t\tif (open) {\n\t\t\t\t\t\tvalue = open[\"valueX\"];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue = dataItem.get(\"valueX\", 0);\n\t\t\t\t\t}\n\t\t\t\t\tvalue += dl;\n\n\t\t\t\t\tif (value < minSelection) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t}\n}\n","import { Scrollbar, IScrollbarPrivate, IScrollbarSettings } from \"../../core/render/Scrollbar\";\nimport { XYChart } from \"./XYChart\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IXYChartScrollbarSettings extends IScrollbarSettings {\n\n}\n\nexport interface IXYChartScrollbarPrivate extends IScrollbarPrivate {\n}\n\n/**\n * Creates a scrollbar with chart preview in it.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/#Scrollbar_with_chart_preview} for more info\n * @important\n */\nexport class XYChartScrollbar extends Scrollbar {\n\n\tdeclare public _settings: IXYChartScrollbarSettings;\n\tdeclare public _privateSettings: IXYChartScrollbarPrivate;\n\n\tpublic static className: string = \"XYChartScrollbar\";\n\tpublic static classNames: Array<string> = Scrollbar.classNames.concat([XYChartScrollbar.className]);\n\n\t/**\n\t * An instance of an [[XYChart]] that is used to plot chart preview in\n\t * scrollbar.\n\t */\n\tpublic readonly chart: XYChart = this.children.push(XYChart.new(this._root, {\n\t\tthemeTags: [\"chart\"],\n\t\tinteractive: false,\n\t\tinteractiveChildren: false,\n\t\tpanX: false,\n\t\tpanY: false,\n\t\twheelX: \"none\",\n\t\twheelY: \"none\"\n\t}));\n\n\t/**\n\t * A graphics element that is displayed over inactive portion of the\n\t * scrollbarpreview, to dim it down.\n\t */\n\tpublic readonly overlay: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"overlay\"],\n\t\tinteractive: false\n\t}));\n\n\tprotected _afterNew() {\n\t\tthis._addOrientationClass();\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", \"xy\", \"chart\", this._settings.orientation]);\n\n\t\tconst children = this.children;\n\t\tchildren.moveValue(this.thumb);\n\t\tchildren.moveValue(this.startGrip);\n\t\tchildren.moveValue(this.endGrip);\n\n\t\tthis.thumb.set(\"opacity\", 0);\n\t\tthis.thumb.states.create(\"hover\", { opacity: 0.2 });\n\n\t\tconst plotContainer = this.chart.plotContainer;\n\t\tplotContainer.set(\"interactive\", false);\n\t\tplotContainer.remove(\"background\");\n\t\tplotContainer.children.removeValue(this.chart.zoomOutButton);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _updateThumb() {\n\t\tsuper._updateThumb();\n\n\t\tthis.overlay.set(\"draw\", (display) => {\n\t\t\tconst startGrip = this.startGrip;\n\t\t\tconst endGrip = this.endGrip;\n\n\t\t\tlet x0 = startGrip.x();\n\t\t\tlet y0 = startGrip.y();\n\n\t\t\tlet x1 = endGrip.x();\n\t\t\tlet y1 = endGrip.y();\n\n\t\t\tconst h = this.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x0 > x1) {\n\t\t\t\t[x0, x1] = [x1, x0]\n\t\t\t}\n\n\t\t\tif (y0 > y1) {\n\t\t\t\t[y0, y1] = [y1, y0]\n\t\t\t}\n\n\t\t\tif (this.get(\"orientation\") === \"horizontal\") {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(x0, 0);\n\t\t\t\tdisplay.lineTo(x0, h);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(x1, 0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(x1, h);\n\t\t\t\tdisplay.lineTo(x1, 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, y0);\n\t\t\t\tdisplay.lineTo(w, y0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(0, y1);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(w, y1);\n\t\t\t\tdisplay.lineTo(0, y1);\n\t\t\t}\n\t\t})\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nimport { CategoryAxis, ICategoryAxisSettings, ICategoryAxisPrivate, ICategoryAxisDataItem, ICategoryAxisEvents } from \"./CategoryAxis\";\n\nimport * as $time from \"../../../core/util/Time\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface ICategoryDateAxisSettings<R extends AxisRenderer> extends ICategoryAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\ttooltipDateFormat?: string;\n\n}\n\nexport interface ICategoryDateAxisDataItem extends ICategoryAxisDataItem {\n}\n\nexport interface ICategoryDateAxisPrivate extends ICategoryAxisPrivate {\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface ICategoryDateAxisEvents extends ICategoryAxisEvents {\n}\n\n\n/**\n * Category-based date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-date-axis/} for more info\n * @important\n */\nexport class CategoryDateAxis<R extends AxisRenderer> extends CategoryAxis<R> {\n\tpublic static className: string = \"CategoryDateAxis\";\n\tpublic static classNames: Array<string> = CategoryAxis.classNames.concat([CategoryDateAxis.className]);\n\n\tdeclare public _settings: ICategoryDateAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryDateAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryDateAxisDataItem;\n\tdeclare public _events: ICategoryDateAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryDateAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\t// temp\n\t\tthis.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t}\n\n\t\tlet startTime = Number(this.dataItems[startIndex].get(\"category\"));\n\t\tlet endTime = Number(this.dataItems[endIndex - 1].get(\"category\"));\n\t\tlet realDuration = (endTime - startTime);\n\t\tif (endIndex - startIndex < maxCount) {\n\t\t\trealDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\n\t\t}\n\n\t\t// if all items are on axis\n\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\n\n\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\tgridInterval = { ...baseInterval };\n\t\t}\n\n\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\tlet previousValue = -Infinity;\n\t\tlet previousIndex = -Infinity;\n\t\tlet previousUnitValue = -Infinity;\n\t\tlet format: string;\n\n\t\tlet selectedItems: Array<{ format: string, dataItem: DataItem<ICategoryDateAxisDataItem> }> = [];\n\t\tlet changed = false;\n\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tlet dataItem = this.dataItems[i];\n\t\t\tlet index = dataItem.get(\"index\")!;\n\t\t\tlet skip = false;\n\n\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\tlet date = new Date(value);\n\t\t\tlet unitValue = $time.getUnitValue(date, gridInterval.timeUnit);\n\n\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\tlet added = false;\n\n\t\t\tif (gridInterval.timeUnit != \"year\" && gridInterval.timeUnit != \"week\") {\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\n\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc)) {\n\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\n\t\t\t\t\t\tif (index - frequency * 0.5 < previousIndex) {\n\t\t\t\t\t\t\tselectedItems.pop();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tadded = true;\n\t\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet shouldAdd = false;\n\t\t\tif (gridInterval.timeUnit === \"day\" || gridInterval.timeUnit === \"week\") {\n\t\t\t\tif (index - previousIndex >= frequency) {\n\t\t\t\t\tshouldAdd = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (unitValue % gridInterval.count === 0) {\n\t\t\t\t\tif (unitValue != previousUnitValue) {\n\t\t\t\t\t\tshouldAdd = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!added && shouldAdd) {\n\t\t\t\tif (index - frequency * 0.7 < previousIndex) {\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t}\n\t\t\t\tchanged = false;\n\n\t\t\t}\n\n\t\t\tpreviousValue = value;\n\n\t\t}\n\n\t\tif (selectedItems.length > 0) {\n\t\t\tlet f = selectedItems[0].dataItem.get(\"index\", 0);\n\n\t\t\t$array.each(selectedItems, (item) => {\n\t\t\t\tconst dataItem = item.dataItem;\n\t\t\t\tconst format = item.format;\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\t})\n\n\t\t}\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tlet dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\n\t\tif (dataItem) {\n\t\t\tlet format = this.get(\"dateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\treturn this._root.dateFormatter.format(new Date(dataItem.get(\"category\", 0)), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { TimeUnit } from \"../../../core/util/Time\"\n\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IValueAxisEvents, IMinMaxStep } from \"./ValueAxis\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $math from \"../../../core/util/Math\";\n\nexport interface IDurationAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * A base unit (granularity) of data.\n\t *\n\t * Used to indicate what are the base units of your data.\n\t *\n\t * Available options: `\"millisecond\"`, `\"second\"` (default), `\"minute\"`, `\"hour\"`, `\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/#Base_unit} for more info\n\t * @default \"second\"\n\t */\n\tbaseUnit?: TimeUnit\n\n}\n\nexport interface IDurationAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDurationAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * A format to used by axis to format its labels.\n\t *\n\t * @readonly\n\t */\n\tdurationFormat: string;\n\n}\n\nexport interface IDurationAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a duration axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/duration-axis/} for more info\n * @important\n */\nexport class DurationAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DurationAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DurationAxis.className]);\n\n\tdeclare public _settings: IDurationAxisSettings<R>;\n\tdeclare public _privateSettings: IDurationAxisPrivate;\n\tdeclare public _dataItemSettings: IDurationAxisDataItem;\n\tdeclare public _events: IDurationAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\tlet minMaxStep: IMinMaxStep;\n\n\t\tconst durationFormatter = this.getDurationFormatter();\n\t\tconst baseUnit = this.get(\"baseUnit\");\n\t\t// we don't allow to go to smaller units, setting so to avoid invalidation\n\t\tthis.setRaw(\"maxPrecision\", 0);\n\n\t\tif (baseUnit == \"millisecond\" || baseUnit == \"second\" || baseUnit == \"minute\" || baseUnit == \"hour\") {\n\t\t\t// will fail if 0\n\t\t\tif (gridCount <= 1) {\n\t\t\t\tgridCount = 1;\n\t\t\t}\n\n\t\t\tgridCount = Math.round(gridCount);\n\n\t\t\t//let initialMin: number = min;\n\t\t\t//let initialMax: number = max;\n\n\t\t\tlet difference = max - min;\n\n\t\t\t// in case min and max is the same, use max\n\t\t\tif (difference === 0) {\n\t\t\t\tdifference = Math.abs(max);\n\t\t\t}\n\n\t\t\tlet step = difference / gridCount;\n\n\t\t\tlet divisors = [60, 30, 20, 15, 10, 2, 1];\n\t\t\tlet realDivisor = 1;\n\n\t\t\tif (baseUnit == \"hour\") {\n\t\t\t\tdivisors = [24, 12, 6, 4, 2, 1];\n\t\t\t}\n\n\t\t\tfor (let divisor of divisors) {\n\t\t\t\tif (difference / divisor > gridCount) {\n\t\t\t\t\trealDivisor = divisor;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet count = Math.ceil(((max - min) / realDivisor) / gridCount);\n\n\t\t\tlet exponent: number = Math.log(Math.abs(count)) * Math.LOG10E;\n\t\t\tlet power = Math.pow(10, Math.floor(exponent)) / 10;\n\t\t\tlet reducedCount = count / power;\n\n\t\t\t// find closest to divisor\n\t\t\tlet closest = $math.closest(divisors, reducedCount);\n\t\t\tcount = closest * power;\n\n\t\t\tstep = realDivisor * count;\n\n\t\t\tmin = Math.floor(min / step) * step;\n\t\t\tmax = Math.ceil(max / step) * step;\n\n\t\t\t/*\n\t\t\tcausese SO with seconds\n\t\t\tif (strictMode) {\n\t\t\t\tmin -= step;\n\t\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\t\tmin = 0;\n\t\t\t\t}\n\t\t\t\tmax += step;\n\n\t\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\t\tmax = 0;\n\t\t\t\t}\n\t\t\t}*/\n\t\t\tminMaxStep = { min: min, max: max, step: step };\n\t\t}\n\t\telse {\n\t\t\tminMaxStep = super._adjustMinMax(min, max, gridCount, strictMode);\n\t\t}\n\n\t\t// choose duration formatter based on step\n\t\tthis.setPrivateRaw(\"durationFormat\", durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, baseUnit));\n\n\t\treturn minMaxStep;\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst formatter = this.getDurationFormatter();\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\tconst formatter = this.getDurationFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n}\n","import { Candlestick, ICandlestickSettings, ICandlestickPrivate } from \"./Candlestick\";\n\nexport interface IOHLCSettings extends ICandlestickSettings {\n}\n\nexport interface IOHLCPrivate extends ICandlestickPrivate {\n}\n\n/**\n * Used to plot an OHLC graphic on an [[OHLCSeries]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class OHLC extends Candlestick {\n\n\tdeclare public _settings: IOHLCSettings;\n\tdeclare public _privateSettings: IOHLCPrivate;\n\n\tpublic static className: string = \"OHLC\";\n\tpublic static classNames: Array<string> = Candlestick.classNames.concat([OHLC.className]);\n\n\tpublic _draw() {\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\n\t\tlet w = this.width();\n\t\tlet h = this.height();\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\n\t\t\tlet lY = h;\n\t\t\tlet hY = 0;\n\t\t\tdisplay.moveTo(0, lY);\n\t\t\tdisplay.lineTo(w / 2, lY);\n\n\t\t\tdisplay.moveTo(w / 2, hY);\n\t\t\tdisplay.lineTo(w, hY);\n\t\t}\n\t\telse {\n\t\t\tlet lX = 0;\n\t\t\tlet hX = w;\n\n\t\t\tdisplay.moveTo(lX, 0);\n\t\t\tdisplay.lineTo(lX, h / 2);\n\n\t\t\tdisplay.moveTo(hX, h / 2);\n\t\t\tdisplay.lineTo(hX, h);\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { CandlestickSeries, ICandlestickSeriesPrivate, ICandlestickSeriesSettings, ICandlestickSeriesDataItem, ICandlestickSeriesAxisRange } from \"./CandlestickSeries\";\nimport { OHLC } from \"./OHLC\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IOHLCSeriesDataItem extends ICandlestickSeriesDataItem {\n}\n\nexport interface IOHLCSeriesSettings extends ICandlestickSeriesSettings {\n}\n\nexport interface IOHLCSeriesPrivate extends ICandlestickSeriesPrivate {\n}\n\nexport interface IOHLCSeriesAxisRange extends ICandlestickSeriesAxisRange {\n\n\t/**\n\t * List of [[OHLC]] columns in a range.\n\t */\n\tcolumns: ListTemplate<OHLC>\n\n}\n\n/**\n * OHLC series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class OHLCSeries extends CandlestickSeries {\n\n\tdeclare public _settings: IOHLCSeriesSettings;\n\tdeclare public _privateSettings: IOHLCSeriesPrivate;\n\tdeclare public _dataItemSettings: IOHLCSeriesDataItem;\n\tdeclare public _axisRangeType: IOHLCSeriesAxisRange;\n\n\tpublic static className: string = \"OHLCSeries\";\n\tpublic static classNames: Array<string> = CandlestickSeries.classNames.concat([OHLCSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<OHLC>): OHLC {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of OHLC bars in the series.\n\t *\n\t * `columns.template` can be used to configure OHLC bars.\n\t *\n\t * @default new ListTemplate<OHLC>\n\t */\n\tpublic readonly columns: ListTemplate<OHLC> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => OHLC._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t));\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => OHLC._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneYTension } from \"../../../core/render/MonotoneYTension\";\n\nexport interface ISmoothedYLineSeriesDataItem extends ILineSeriesDataItem {\n}\n\nexport interface ISmoothedYLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for vertical plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedYLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedYLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\n\nexport interface ISmoothedXLineSeriesDataItem extends ILineSeriesDataItem {\n}\n\nexport interface ISmoothedXLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedXLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for horizontal plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedXLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedXLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedXLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveCardinal, CurveCardinalFactory } from \"d3-shape\";\n\nexport interface SmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n}\n\nexport interface ISmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n}\n\nexport interface SmoothedXYLineSeriesProperties extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n\t/**\n\t * @ignore\n\t*/\n\tcurveFactory?: CurveCardinalFactory\n\n}\n\nexport interface SmoothedXYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for XY (scatter) charts\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXYLineSeries.className]);\n\n\tdeclare public _settings: SmoothedXYLineSeriesProperties;\n\tdeclare public _privateSettings: SmoothedXYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: SmoothedXYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)));\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","import type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { Axis } from \"../axes/Axis\";\nimport type { DataItem } from \"../../../core/render/Component\";\n\nimport { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { Percent, p100 } from \"../../../core/util/Percent\";\nimport { curveStepAfter } from \"d3-shape\";\n\nexport interface IStepLineSeriesDataItem extends ILineSeriesDataItem {\n}\n\nexport interface IStepLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * Width of the step in percent relative to the cell width.\n\t *\n\t * NOTE: setting this to less than 100% makes sense only when risers are\n\t * disabled: `noRisers: true`\n\t *\n\t * @default 100%\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Step_width} for more info\n\t */\n\tstepWidth?: Percent;\n\n\t/**\n\t * Disables vertical connecting lines for the steps.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Disabling_risers} for more info\n\t */\n\tnoRisers?: boolean;\n\n}\n\nexport interface IStepLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Used to plot stepped line and/or area series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/} for more info\n * @important\n */\nexport class StepLineSeries extends LineSeries {\n\tpublic static className: string = \"StepLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([StepLineSeries.className]);\n\n\tdeclare public _settings: IStepLineSeriesSettings;\n\tdeclare public _privateSettings: IStepLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IStepLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveStepAfter);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet width = this.get(\"stepWidth\", p100).value / 2;\n\n\t\tlet itemLocationX0 = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY0 = dataItem.get(\"locationY\", o.locationY);\n\t\tlet itemLocationX1 = itemLocationX0;\n\t\tlet itemLocationY1 = itemLocationY0;\n\n\t\tif (o.baseAxis === o.xAxis) {\n\t\t\titemLocationX0 -= width;\n\t\t\titemLocationX1 += width;\n\t\t}\n\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\titemLocationY0 -= width;\n\t\t\titemLocationY1 += width;\n\t\t}\n\n\t\tlet xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX0, o.vcx);\n\t\tlet yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY0, o.vcy);\n\n\t\tlet xPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX1, o.vcx);\n\t\tlet yPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY1, o.vcy);\n\n\t\tif (this._shouldInclude(xPos0)) {\n\n\t\t\tconst iPoint0 = this.getPoint(xPos0, yPos0);\n\t\t\tconst point0 = [iPoint0.x, iPoint0.y];\n\n\t\t\tconst iPoint1 = this.getPoint(xPos1, yPos1);\n\t\t\tconst point1 = [iPoint1.x, iPoint1.y];\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xOpenPos0: number = xPos0;\n\t\t\t\tlet yOpenPos0: number = yPos0;\n\t\t\t\tlet xOpenPos1: number = xPos1;\n\t\t\t\tlet yOpenPos1: number = yPos1;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\titemLocationX0 = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\titemLocationY0 = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\titemLocationX1 = itemLocationX0;\n\t\t\t\t\t\titemLocationY1 = itemLocationY0;\n\n\t\t\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\t\t\titemLocationX0 -= width;\n\t\t\t\t\t\t\titemLocationX1 += width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\titemLocationY0 -= width;\n\t\t\t\t\t\t\titemLocationY1 += width;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX0, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX1, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY0, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY1, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint0 = this.getPoint(xOpenPos0, yOpenPos0);\n\t\t\t\tlet closeIPoint1 = this.getPoint(xOpenPos1, yOpenPos1);\n\n\t\t\t\tpoint0[2] = closeIPoint0.x;\n\t\t\t\tpoint0[3] = closeIPoint0.y;\n\n\t\t\t\tpoint1[2] = closeIPoint1.x;\n\t\t\t\tpoint1[3] = closeIPoint1.y;\n\t\t\t}\n\n\t\t\tpoints.push(point0);\n\t\t\tpoints.push(point1);\n\n\t\t\tdataItem.set(\"point\", { x: point0[0] + (point1[0] - point0[0]) / 2, y: point0[1] + (point1[1] - point0[1]) / 2 });\n\t\t}\n\n\t\tif (this.get(\"noRisers\")) {\n\t\t\to.points = [];\n\t\t\to.segments.push(points);\n\t\t}\n\t}\n}\n","import * as m from \"./../../dist/es2015/xy.js\";\nexport const am5xy = m;","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n"],"names":["XYChart","this","chartContainer","children","push","new","_root","width","layout","verticalLayout","height","horizontalLayout","yAxesAndPlotContainer","maskContent","plotsContainer","plotContainer","isMeasured","topPlotContainer","themeTags","icon","x","y","_afterNew","_defaultThemes","super","_disposers","xAxes","yAxes","root","zoomOutButton","events","on","zoomOut","hide","states","lookup","set","seriesContainer","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","bulletsContainer","event","_handlePlotDown","_handlePlotUp","_handlePlotMove","_maskGrid","_setUpTouch","_beforeChanged","isDirty","get","_display","cancelTouch","gridContainer","_removeSeries","series","_unstack","_posXDp","dispose","_posYDp","undefined","xAxis","markDirtyExtremes","yAxis","cursor","snapToSeries","handleWheel","wheelX","wheelY","wheelEvent","originalEvent","prevent","plotPoint","toLocal","point","wheelStep","shiftY","deltaY","shiftX","deltaX","wheelZoomPositionX","wheelZoomPositionY","each","axis","start","end","position","fixPosition","maxDeviation","newStart","Math","min","max","newEnd","getPrivate","Infinity","_handleWheelAnimation","zoom","delta","_getWheelSign","se","_fixWheel","preventDefault","_handleSetWheel","_wheelDp","abs","sign","diff","button","local","pointerId","_downPoints","length","getIndex","_downStartX","_downEndX","_downStartY","_downEndY","_downPoint","clientX","clientY","panX","panY","_panStart","_panEnd","eventType","isEnabled","dispatch","type","target","animation","_dispatchWheelAnimation","downPoint","_isPanning","_movePoints","_handlePinch","documentPointToRoot","scrollbarX","disableType","panStart","panEnd","enableType","scrollbarY","i","downPoints","movePoints","k","movePoint","w","h","downPoint0","downPoint1","movePoint0","movePoint1","downStartX","downEndX","downPos0","downPos1","movePos0","movePos1","d","s","e","sa","ea","downStartY","downEndY","_handleCursorPosition","cursorPoint","snapToSeriesBy","dataItems","isHidden","isHiding","startIndex","endIndex","dataItem","tooltipDataItem","closestItem","minDistance","distance","hypot","tooltip","_setDataItem","component","showDataItemTooltip","setRaw","handleMove","toGlobal","_updateCursor","updateCursor","_addCursor","_prepareChildren","_colorize","previous","_prevSettings","_disposeProperty","_setChart","_pushPropertyDisposer","_handleCursorSelectEnd","parent","topAxesContainer","_handleScrollbar","grip","_handleAxisSelection","setPrivate","getTooltipText","rightAxesContainer","_handleZoomOut","_processSeries","addDisposer","_fixPosition","isType","_markDirtyKey","_markDirtyAxes","_seriesAdded","colorSet","color","next","_setSoft","patternSet","pattern","behavior","downPositionX","downPositionY","positionX","positionY","position0","toAxisPosition","position1","axes","priority","axisStart","axisEnd","zoomAnimation","updateScrollbar","setPrivateRaw","container","onAll","change","oldValues","_removeAxis","newValue","processChart","setIndex","index","insertIndex","oldValue","Error","moveValue","value","newIndex","isDisposed","axisParent","removeValue","gridParent","topGridParent","_updateChartLayout","left","right","processAxis","force","indexOf","updateGrips","visible","show","inPlot","otherCharts","_otherCharts","global","chart","chartPlotContainer","documentPoint","rootPointToDocument","chartRoot","arrangeTooltips","hh","bounds","tooltipContainer","bottom","plotT","plotB","tooltips","closest","closestPoint","sum","_movePoint","maxTooltipDistance","maxTooltipDistanceBy","tooltipSeries","hidden","_tooltipToLocal","totalTooltipH","tooltipCount","count","sort","a","b","prevY","centerY","top","_fy","reverse","prevBottom","once","_dispose","classNames","concat","className","XYChartDefaultTheme","setupDefaultRules","ic","interfaceColors","language","r","rule","bind","setAll","colors","paddingLeft","paddingRight","paddingTop","paddingBottom","pinchZoomX","pinchZoomY","legendLabelText","fill","fromHex","fillOpacity","saturation","cornerRadiusTR","cornerRadiusTL","cornerRadiusBR","cornerRadiusBL","focusable","create","strokeOpacity","inside","minGridDistance","opacity","minPosition","maxPosition","fontSize","text","populateText","centerX","layer","exportable","moveThreshold","forceInactive","strokeDasharray","role","ariaLabel","translate","minZoomCount","maxZoomCount","maxZoomFactor","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","location","multiLocation","crisp","opposite","inversed","cellStartLocation","cellEndLocation","cursorOverStyle","startLocation","endLocation","fillRule","axisFill","gridIntervals","timeUnit","dateFormats","periodChangeDateFormats","tooltipDateFormats","markUnitChange","strictMinMax","groupData","groupCount","skipFirstMinor","weekLabelLocation","groupIntervals","endValue","intervalDuration","baseInterval","gridInterval","Date","locale","firstDayOfWeek","utc","timezone","getTime","val","round","baseValue","logarithmic","autoZoom","step","baseUnit","maskBullets","stackToNegative","locationX","locationY","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","strokeWidth","connect","autoGapCount","draw","display","sprite","moveTo","lineTo","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped","interactive","draggable","rotation","XYCursor","_settings","_drawLines","setTimeout","lineX","_handleXLine","lineY","_handleYLine","_handleLineFocus","_handleLineBlur","document","ev","_handleLineMove","ctrlKey","key","dir","focused","m","nextPosition","_alwaysShow","alwaysShow","isFocus","_tooltipX","_updateXLine","_tooltipY","_updateYLine","_handleSyncWith","syncWith","_updateChildren","_getPoint","_toX","animate","to","duration","easing","_toY","_handleMove","_handleCursorDown","_handleCursorUp","native","_lastPoint2","selection","_inPlot","rootPoint","_getPosition","charAt","lastPoint","_lastPoint","skipEvent","xyPos","userPositionX","userPositionY","xy","handleCursorShow","_updateLines","_updateSelection","_onHide","handleCursorHide","_onShow","Axis","background","labelsContainer","axisHeader","axisRanges","_processAxisRange","disposeDataItem","renderer","_createGhostLabel","ghostLabel","makeLabel","adapters","disable","tooltipText","tooltipHTML","_updateFinals","_start","_end","sAnimation","_sAnimation","eAnimation","_eAnimation","maxZoomFactorReal","minZoomFactor","playing","markDirtyKey","stop","_series","_createAssets","_rangesDirty","_prepareDataItem","above","grid","_dataItem","_index","markDirtySelectionExtremes","_calculateTotals","_updateAxisRanges","_bullets","axisRange","_seriesAxisRanges","_inversed","_axisLength","axisLength","_updateLC","rendererTags","addTag","toLowerCase","_applyThemes","label","_updateTooltipBounds","updateTooltipBounds","_updateBounds","axisHeadersContainer","onPrivate","markDirtySize","hideDataItem","_toggleFHDataItem","showDataItem","forceHidden","fh","tick","bullet","_toggleDataItem","v","tags","minor","remove","labels","makeGrid","makeTick","ticks","makeAxisFill","_processBullet","axisBullet","_afterChanged","_updatePositions","axisFills","_updateGhost","getCellWidthPosition","localBounds","gWidth","ceil","_getText","updateLabel","_cursorPosition","_snapToSeries","updateTooltip","getSeriesItem","updateLegendMarker","updateLegendValue","roundAxisPosition","_updateTooltipText","positionTooltip","_location","_handleSeriesRemoved","processSeriesDataItem","_fields","_clearDirty","_sizeDirty","coordinateToPosition","coordinate","toGlobalPosition","shouldGap","_nextItem","_autoGapCount","_fieldName","createAxisRange","axisDataItem","_groupSeriesData","AxisBullet","uid","AxisLabel","AxisLabelRadial","AxisRenderer","_new","template","make","gridCount","thumb","_handleThumbDown","_handleThumbUp","_handleThumbMove","_changed","pan","_thumbDownPoint","_downStart","_downEnd","_event","downStart","downEnd","extra","_getPan","_point1","_point2","positionToCoordinate","_tooltip","_updateSize","markDirty","_clear","toggleVisibility","_positionTooltip","AxisRendererX","gridTemplate","graphics","axisChildren","removeTag","_markDirtyRedraw","point1","point2","_ls","_lc","innerWidth","positionToPoint","updateTick","endPosition","updateGrid","updateBullet","bulletPosition","previousBullet","previousSprite","updateFill","x0","x1","fillDrawMethod","num","pointerOrientation","oldBounds","AxisRendererY","innerHeight","y0","y1","AxisTick","CategoryAxis","fields","_afterDataChange","len","_valuesDirty","_itemMap","indices","_getIndices","isPrivateDirty","_handleRangeChange","_prepareAxisItems","adjustZoom","getIndices","stopped","Number","c","zoomToIndexes","startCategory","endCategory","baseAxis","openKey","otherAxis","startDataItem","endDataItem","findDataItem","categoryAxis","category","direction","idx","categoryToIndex","searchCategory","item","hasValue","__valueXShowFields","__valueYShowFields","minorLabelsEnabled","minorGridEnabled","maxCount","frequency","floor","_frequency","j","f","fillIndex","categoryLocation","endCategoryLocation","indexToPosition","fillEndIndex","fillEndPosition","basePosition","getX","NaN","getY","getDataItemPositionX","field","cellLocation","_axisLocation","getDataItemCoordinateX","getDataItemPositionY","getDataItemCoordinateY","final","name","modCount","acc","categoryToPosition","dataItemToPosition","axisPositionToIndex","modifiedLen","cellSizes","cellSize","rel","_adjustPosition","markDirtyText","fieldName","seriesDataItem","zoomToCategories","DateAxis","_setBaseInterval","interval","_baseDuration","_fixZoomFactor","baseMainDuration","_groupData","groupInterval","_dataGrouped","mainDataSetId","setDataSet","resetGrouping","_seriesDataGrouped","intervals","baseDuration","_dataSets","_valueYFields","_valueXFields","_mainDataItems","groupCallback","groupOriginals","newDataItem","previousTime","dataSetId","groupFieldValues","workingFields","firstTime","prevNewDataItem","dataContext","time","roundedTime","_makeDataItem","groupKey","currentValue","average","_dataSetId","_groupingCalculated","getGroupInterval","getIntervalMax","_intervalMax","getIntervalMin","_intervalMin","selectionMin","selectionMax","current","modifiedDifference","newId","endIndex2","firstDataItem","lastDataItem","lastDate","firstDate","outOfSelection","_adjustStartIndex","_markDirtyPrivateKey","_adjustMinMax","_strictMode","_intervalDuration","_saveMinMax","id","_getM","_getMinorInterval","minorGridInterval","nextGridUnit","format","previousValue","formats","minorDuration","_dataItems","processDataItem","date","dateFormatter","labelEndValue","minorTimeUnit","minorCount","mmm","previousMinorValue","minorValue","minorFormats","minorDataItem","minorDataItems","minorEndValue","minorLabel","inited","positionToValue","_getDelta","_deltaMinMax","_fixMin","startTime","endTime","_fixMax","_updateDates","_date","open","close","_handleSizeDirty","axisLocation","exactLocation","openValue","closeValue","_baseValue","valueToPosition","firstDay","adjustPosition","snap","result","diValue","first","second","nextItem","value1","zoomToDates","zoomToValues","futureGroupInterval","baseMin","baseMax","futureMin","futureMax","positionToDate","dateToPosition","dtime","tooltipValue","_nextTime","EditableAxisLabel","GaplessDateAxis","valueFields","_getDates","_customDates","_dates","dates","found","_updateAllDates","extraMax","extraMin","baseCount","unshift","itemValue","nextDate","nextItemValue","valueToIndex","findex","startValue","_seriesValuesDirty","MAX_SAFE_INTEGER","realDuration","now","previousDataItem","selectedItems","_getIndexes","_m","_addMinorGrid","timeUnit2","previousLabel","worse","_pickWorse","dataItemA","dataItemB","valueA","valueB","getDate","mTimeUnit","maxValue","minorSelectedItems","firstValue","items","fullDuration","originalValue","realValue","_hasDate","_baseInterval","Grid","ValueAxis","_dirtyExtremes","_dirtySelectionExtremes","syncWithAxis","_syncDp","someDirty","_getMinMax","getMM","letter","_getSelectionMinMax","_dseHandled","_formatText","numberFormat","formatter","getNumberFormatter","differencePower","minLog","_minLogAdjusted","minRealLog","_minRealLog","pow","log","LOG10E","stepPower","stepAdjusted","minorGridCount","minorStep","nextValue","decCount","labelEndPosition","hasTag","minMaxStep","stepDecimalPlaces","E","treatZeroAs","valueToFinalPosition","_cellLocation","getStackedXValueWorking","getStackedYValueWorking","cellEndValue","fixSmallStep","vc","fieldWorking","total","totalPercent","minDefined","maxDefined","selectionStrictMinMax","seriesMin","seriesMax","minX","maxX","minY","maxY","isShowing","range","_minReal","_maxReal","smin","minMaxStep2","selectionMinReal","selectionMaxReal","_syncAxes","LN10","minDiff","initialMin","initialMax","minAdapted","fold","maxAdapted","strictMinMaxSelection","strict","animatePrivate","exponent","power","_min","_max","strictMode","difference","stepDivisor","maxPrecision","ceiledStep","MAX_VALUE","minCount","extraDecimals","decimals","oldDiff","syncMin","syncMax","syncStep","currentCount","synced","omin","omax","ostep","_checkSync","BaseColumnSeries","_makeGraphics","listTemplate","makeColumn","_makeFieldNames","valueAxis","_xOpenField","_xField","_yOpenField","_yField","_createGraphics","_ph","_pw","columnsTemplate","columns","clusterCount","stacked","xRenderer","yRenderer","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_aLocationX0","_aLocationX1","_aLocationY0","_aLocationY1","_axesDirty","_stackDirty","_toggleColumn","_beforeColumnsDraw","axisCase","_updateGraphics","_afterColumnsDraw","_columnsUpdated","_skipped","legendDataItem","markerRectangle","ds","setting","graphicsArray","rangeGraphics","xField","yField","valueX","valueY","exactLocationX","xOpenField","yOpenField","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","l","t","vcy","vcx","fitW","fitH","offset","stackToItemY","stackToItemX","_applyGraphicsStates","_updateSeriesGraphics","maxWidth","maxHeight","ptl","getPoint","pbr","tooltipPoint","_x","_y","_handleDataSetChange","dropFromOpen","riseFromOpen","dropFromPrevious","riseFromPrevious","previousClose","apply","list","promises","Promise","all","bullets","column","_getTooltipTarget","Candlestick","_draw","CandlestickSeries","virtualParent","mainContainer","getRaw","lx0","lx1","ly0","ly1","hx0","hx1","hy0","hy1","orientation","_yLowField","_yHighField","_xLowField","_xHighField","_updateCandleGraphics","pl0","pl1","ph0","ph1","currentDI","allColumnsData","lowX0","lowY0","lowX1","lowY1","highX0","highY0","highX1","highY1","allColumns","clear","beginPath","stroke","beginFill","lineStyle","drawRect","endStroke","endFill","ColumnSeries","strokWidth","LineSeries","strokes","fills","_fillGenerator","p","makeStroke","makeFill","_strokeTemplate","_fillTemplate","legendStroke","_legendStroke","legendFill","_legendFill","fillPattern","curveFactory","_strokeGenerator","curve","strokeTemplateField","fillTemplateField","strokeTemplateFound","fillTemplateFound","hasValues","_valueFields","_endIndex","_clearGraphics","_sindex","_dindex","_startSegment","dataItemIndex","currentEndIndex","fillTemplate","originalTemplate","strokeTemplate","xOpenFieldValue","yOpenFieldValue","basePosX","basePosY","baseField","segments","points","fillVisible","getOpen","o","rangeStrokeTemplate","rangeFillTemplate","_getPoints","_endLine","_drawStroke","_drawFill","itemLocationX","itemLocationY","exactLocationY","xPos","yPos","_shouldInclude","iPoint","xPos0","yPos0","closeIPoint","p0","p1","p2","p3","prev","_previousPoint","pp0","pp1","pp2","pp3","_points","_firstPoint","segment","context","createLegendMarker","marker","disabledColor","bulletFunction","legend","focusableGroup","XYSeries","_setRawDefault","_removeAxisRange","_onDataClear","_key","_updateFields","_valueXShowFields","_valueYShowFields","valueXFields","split","valueYFields","_shouldMakeBullet","minBulletDistance","xName","xCapName","yName","yCapName","xLetter","yLetter","low","high","_fixVC","hiddenState","sequencedInterpolation","_handleMaskBullets","tooltipFieldX","tooltipFieldY","_tooltipFieldX","_tooltipFieldY","_dataProcessed","_stack","getStackedXValue","getStackedYValue","_markStakedDirtyStack","_showBullets","_psi","_pei","_selectionProcessed","processYSelectionDataItem","processXSelectionDataItem","selectionMinY","selectionMaxY","selectionMinX","selectionMaxX","_makeRangeMask","mainContainerMask","_mainContainerMask","mask","seriesIndex","_couldStackTo","_stackDataItems","_reallyStackedTo","_stackedSeries","_handleRemoved","stackToItemKey","stackToSeries","stackToItem","stackValue","stackedToSeries","_markDataSetDirty","_aggregatesCalculated","_positionBullet","_shouldShowBullet","realField","previousBounds","yo","xo","_positionX","_positionY","dataSet","mainDataItems","then","_isShowing","_sequencedShowHide","_isHiding","waitForStop","_markDirtyStack","stackedSeries","hideTooltip","txt","_emptyDataItem","valueLabel","_getItemReaderLabel","_position","resetExtremes","minSelection","dl","XYChartScrollbar","Scrollbar","interactiveChildren","Graphics","_addOrientationClass","startGrip","endGrip","_updateThumb","overlay","CategoryDateAxis","previousIndex","previousUnitValue","changed","skip","unitValue","added","pop","shouldAdd","DurationAxis","durationFormatter","getDurationFormatter","divisors","realDivisor","divisor","reducedCount","getFormat","OHLC","lY","hY","lX","hX","OHLCSeries","List","Template","SmoothedYLineSeries","_setDefault","SmoothedXLineSeries","SmoothedXYLineSeries","Step","_context","_t","stepAfter","prototype","areaStart","_line","areaEnd","lineStart","_point","lineEnd","closePath","StepLineSeries","itemLocationX0","itemLocationY0","itemLocationX1","itemLocationY1","xPos1","yPos1","iPoint0","point0","iPoint1","xOpenPos0","yOpenPos0","xOpenPos1","yOpenPos1","closeIPoint0","closeIPoint1","am5xy","that","bezierCurveTo","_x1","_k","_x2","_x0","_y1","_y2","_y0","Cardinal","custom","cardinal"],"sourceRoot":""}